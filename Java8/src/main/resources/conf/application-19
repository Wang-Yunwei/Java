spring:

  # 数据库连接
  datasource:
    url: jdbc:mysql://10.152.9.18:3306/cpms_mrpi_mdsg?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Hongkong
    username: cpms
    password: 'U%!O#7YJL'
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池初始化时初始化的数据库连接数
      initial-size: 1
      # 最大连接数
      max-active: 2
      # 最小空闲值,当空闲的连接数少于阀值时,连接池就会预申请去一些连接,以免洪峰来时来不及申请
      min-idle: 1
      # 最大等待值
      max-wait: 5000
      phy-timeout-millis: 7200000
      # 线程回收
      remove-abandoned: true
      remove-abandoned-timeout: 180
      log-abandoned: true
      # 建议配置为true不影响性能并且保证安全性,申请连接的时候检测,如果空闲时间大于timeBetweenEvictionRunsMillis,执行validationQuery检测连接是否有效
      test-while-idle: true
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      # 用来检测连接是否有效的sql,要求是一个查询语句,如果validationQuery为null、testOnBorrow、testOnReturn、testWhileIdle都不会其作用
      validation-query: SELECT 1
      validation-query-timeout: 1
      # 有两个含义：1) Destroy线程会检测连接的间隔时间, 2) testWhileIdle的判断依据,详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 15000
      # 自动提交
      default-auto-commit: true
      connection-properties: socketTimeout=3000;connectTimeout=1000
  #Redis连接
  redis:
    host: 10.152.9.18
    port: 6379
    database: 1
    password: 'GH%AkMvzT'
    pool:
      #连接池最大连接数(负值表示没有限制)
      max-active: 100
      #连接池最大阻塞等待时间(负值表示没有限制)
      max-wait: 3s
      #连接池最大空闲连接数
      max-idle: 1
      #连接池最小空闲连接数
      min-idle: 1
      #连接超时时间(毫秒)
      timeout: 1000
  #RabbitMQ消息队列连接
  rabbitmq:
    host: 10.152.9.18
    port: 5672
    username: guest
    password: 'guest'