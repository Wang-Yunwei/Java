package com.mdsd.cloud.controller.tyjw.dto;

public final class TyjwProtoBuf {
  private TyjwProtoBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TelemetryDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TelemetryData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 1;</code>
     * @return The lng.
     */
    double getLng();

    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 2;</code>
     * @return The lat.
     */
    double getLat();

    /**
     * <pre>
     *海拔高度(椭球高)(单位:米)[会受周围气压湿度等环境影响，数据差异及误差比较大]
     * </pre>
     *
     * <code>float altitude = 3;</code>
     * @return The altitude.
     */
    float getAltitude();

    /**
     * <pre>
     *相对高度(单位:米)[飞行器距地面10米以下，此值为真实距地距离，大于10米时为距起飞点的相对高度]
     * </pre>
     *
     * <code>float ultrasonic = 4;</code>
     * @return The ultrasonic.
     */
    float getUltrasonic();

    /**
     * <pre>
     *俯仰角
     * </pre>
     *
     * <code>float pitch = 5;</code>
     * @return The pitch.
     */
    float getPitch();

    /**
     * <pre>
     *横滚角
     * </pre>
     *
     * <code>float roll = 6;</code>
     * @return The roll.
     */
    float getRoll();

    /**
     * <pre>
     *偏航角
     * </pre>
     *
     * <code>float yaw = 7;</code>
     * @return The yaw.
     */
    float getYaw();

    /**
     * <pre>
     *空速(单位:米/秒)
     * </pre>
     *
     * <code>float airspeed = 8;</code>
     * @return The airspeed.
     */
    float getAirspeed();

    /**
     * <pre>
     *地速(单位:米/秒)
     * </pre>
     *
     * <code>float velocity = 9;</code>
     * @return The velocity.
     */
    float getVelocity();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>uint64 timestamp = 10;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <pre>
     *载荷俯仰角
     * </pre>
     *
     * <code>float ptpitch = 11;</code>
     * @return The ptpitch.
     */
    float getPtpitch();

    /**
     * <pre>
     *载荷横滚角
     * </pre>
     *
     * <code>float ptroll = 12;</code>
     * @return The ptroll.
     */
    float getPtroll();

    /**
     * <pre>
     *载荷航向角
     * </pre>
     *
     * <code>float ptyaw = 13;</code>
     * @return The ptyaw.
     */
    float getPtyaw();

    /**
     * <pre>
     *载荷当前倍数
     * </pre>
     *
     * <code>float zoomfactor = 14;</code>
     * @return The zoomfactor.
     */
    float getZoomfactor();

    /**
     * <pre>
     *云盒子编号
     * </pre>
     *
     * <code>string boxSn = 15;</code>
     * @return The boxSn.
     */
    String getBoxSn();
    /**
     * <pre>
     *云盒子编号
     * </pre>
     *
     * <code>string boxSn = 15;</code>
     * @return The bytes for boxSn.
     */
    com.google.protobuf.ByteString
        getBoxSnBytes();

    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 16;</code>
     * @return The batteryPower.
     */
    String getBatteryPower();
    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 16;</code>
     * @return The bytes for batteryPower.
     */
    com.google.protobuf.ByteString
        getBatteryPowerBytes();

    /**
     * <pre>
     *卫星计数
     * </pre>
     *
     * <code>uint32 satelliteCount = 17;</code>
     * @return The satelliteCount.
     */
    int getSatelliteCount();

    /**
     * <pre>
     *任务编号
     * </pre>
     *
     * <code>uint64 taskId = 18;</code>
     * @return The taskId.
     */
    long getTaskId();

    /**
     * <pre>
     *rtk经度
     * </pre>
     *
     * <code>double rtkLng = 19;</code>
     * @return The rtkLng.
     */
    double getRtkLng();

    /**
     * <pre>
     *rtk纬度
     * </pre>
     *
     * <code>double rtkLat = 20;</code>
     * @return The rtkLat.
     */
    double getRtkLat();

    /**
     * <pre>
     *rtk海拔高度(平均海平面高度)(单位:米)   
     * </pre>
     *
     * <code>float rtkHFSL = 21;</code>
     * @return The rtkHFSL.
     */
    float getRtkHFSL();

    /**
     * <pre>
     *rtk状态(值为50时[rtk数据fix固定解]，rtk的经纬度及海拔高度值可用)
     * </pre>
     *
     * <code>uint32 rtkPositionInfo = 22;</code>
     * @return The rtkPositionInfo.
     */
    int getRtkPositionInfo();

    /**
     * <pre>
     *当前架次飞行时长(单位:秒) [起飞-&gt;落地 视为一个架次]
     * </pre>
     *
     * <code>uint32 airFlyTimes = 23;</code>
     * @return The airFlyTimes.
     */
    int getAirFlyTimes();

    /**
     * <pre>
     *当前架次飞行实际距离(单位:米)
     * </pre>
     *
     * <code>float airFlyDistance = 24;</code>
     * @return The airFlyDistance.
     */
    float getAirFlyDistance();

    /**
     * <pre>
     *无人机编号
     * </pre>
     *
     * <code>string uavSn = 25;</code>
     * @return The uavSn.
     */
    String getUavSn();
    /**
     * <pre>
     *无人机编号
     * </pre>
     *
     * <code>string uavSn = 25;</code>
     * @return The bytes for uavSn.
     */
    com.google.protobuf.ByteString
        getUavSnBytes();

    /**
     * <pre>
     *无人机型号
     * </pre>
     *
     * <code>string uavModel = 26;</code>
     * @return The uavModel.
     */
    String getUavModel();
    /**
     * <pre>
     *无人机型号
     * </pre>
     *
     * <code>string uavModel = 26;</code>
     * @return The bytes for uavModel.
     */
    com.google.protobuf.ByteString
        getUavModelBytes();

    /**
     * <pre>
     *距降落点水平直线距离(单位:米)
     * </pre>
     *
     * <code>float homeRange = 27;</code>
     * @return The homeRange.
     */
    float getHomeRange();

    /**
     * <pre>
     *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
     * </pre>
     *
     * <code>uint32 flightMode = 28;</code>
     * @return The flightMode.
     */
    int getFlightMode();

    /**
     * <pre>
     *距目标点或最后一个航点的实际距离(单位:米) [适用于打点飞行或航线飞行]
     * </pre>
     *
     * <code>float targetDistance = 29;</code>
     * @return The targetDistance.
     */
    float getTargetDistance();

    /**
     * <pre>
     *距目标点或最后一个航点的预计剩余飞行时间(单位:秒)[适用于打点飞行或航线飞行]
     * </pre>
     *
     * <code>uint32 predictFlyTime = 30;</code>
     * @return The predictFlyTime.
     */
    int getPredictFlyTime();

    /**
     * <pre>
     *本架次最大相对高度值
     * </pre>
     *
     * <code>float ultrasonicMax = 31;</code>
     * @return The ultrasonicMax.
     */
    float getUltrasonicMax();

    /**
     * <pre>
     *本架次最小相对高度值 
     * </pre>
     *
     * <code>float ultrasonicMin = 32;</code>
     * @return The ultrasonicMin.
     */
    float getUltrasonicMin();

    /**
     * <pre>
     *飞行器x轴速度(单位:米/秒)
     * </pre>
     *
     * <code>float xVelocity = 33;</code>
     * @return The xVelocity.
     */
    float getXVelocity();

    /**
     * <pre>
     *飞行器y轴速度(单位:米/秒)
     * </pre>
     *
     * <code>float yVelocity = 34;</code>
     * @return The yVelocity.
     */
    float getYVelocity();

    /**
     * <pre>
     *飞行器z轴速度(单位:米/秒)
     * </pre>
     *
     * <code>float zVelocity = 35;</code>
     * @return The zVelocity.
     */
    float getZVelocity();

    /**
     * <pre>
     *云盒名称
     * </pre>
     *
     * <code>string boxName = 36;</code>
     * @return The boxName.
     */
    String getBoxName();
    /**
     * <pre>
     *云盒名称
     * </pre>
     *
     * <code>string boxName = 36;</code>
     * @return The bytes for boxName.
     */
    com.google.protobuf.ByteString
        getBoxNameBytes();

    /**
     * <pre>
     *预计剩余飞行时间(单位:秒)
     * </pre>
     *
     * <code>uint32 predictFlyTimes = 37;</code>
     * @return The predictFlyTimes.
     */
    int getPredictFlyTimes();

    /**
     * <pre>
     *预计返航所需最小电量百分比
     * </pre>
     *
     * <code>uint32 predictGohomeBattery = 38;</code>
     * @return The predictGohomeBattery.
     */
    int getPredictGohomeBattery();
  }
  /**
   * <pre>
   *下行遥测
   * </pre>
   *
   * Protobuf type {@code TelemetryData}
   */
  public static final class TelemetryData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TelemetryData)
      TelemetryDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TelemetryData.newBuilder() to construct.
    private TelemetryData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TelemetryData() {
      boxSn_ = "";
      batteryPower_ = "";
      uavSn_ = "";
      uavModel_ = "";
      boxName_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TelemetryData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TelemetryData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              lng_ = input.readDouble();
              break;
            }
            case 17: {

              lat_ = input.readDouble();
              break;
            }
            case 29: {

              altitude_ = input.readFloat();
              break;
            }
            case 37: {

              ultrasonic_ = input.readFloat();
              break;
            }
            case 45: {

              pitch_ = input.readFloat();
              break;
            }
            case 53: {

              roll_ = input.readFloat();
              break;
            }
            case 61: {

              yaw_ = input.readFloat();
              break;
            }
            case 69: {

              airspeed_ = input.readFloat();
              break;
            }
            case 77: {

              velocity_ = input.readFloat();
              break;
            }
            case 80: {

              timestamp_ = input.readUInt64();
              break;
            }
            case 93: {

              ptpitch_ = input.readFloat();
              break;
            }
            case 101: {

              ptroll_ = input.readFloat();
              break;
            }
            case 109: {

              ptyaw_ = input.readFloat();
              break;
            }
            case 117: {

              zoomfactor_ = input.readFloat();
              break;
            }
            case 122: {
              String s = input.readStringRequireUtf8();

              boxSn_ = s;
              break;
            }
            case 130: {
              String s = input.readStringRequireUtf8();

              batteryPower_ = s;
              break;
            }
            case 136: {

              satelliteCount_ = input.readUInt32();
              break;
            }
            case 144: {

              taskId_ = input.readUInt64();
              break;
            }
            case 153: {

              rtkLng_ = input.readDouble();
              break;
            }
            case 161: {

              rtkLat_ = input.readDouble();
              break;
            }
            case 173: {

              rtkHFSL_ = input.readFloat();
              break;
            }
            case 176: {

              rtkPositionInfo_ = input.readUInt32();
              break;
            }
            case 184: {

              airFlyTimes_ = input.readUInt32();
              break;
            }
            case 197: {

              airFlyDistance_ = input.readFloat();
              break;
            }
            case 202: {
              String s = input.readStringRequireUtf8();

              uavSn_ = s;
              break;
            }
            case 210: {
              String s = input.readStringRequireUtf8();

              uavModel_ = s;
              break;
            }
            case 221: {

              homeRange_ = input.readFloat();
              break;
            }
            case 224: {

              flightMode_ = input.readUInt32();
              break;
            }
            case 237: {

              targetDistance_ = input.readFloat();
              break;
            }
            case 240: {

              predictFlyTime_ = input.readUInt32();
              break;
            }
            case 253: {

              ultrasonicMax_ = input.readFloat();
              break;
            }
            case 261: {

              ultrasonicMin_ = input.readFloat();
              break;
            }
            case 269: {

              xVelocity_ = input.readFloat();
              break;
            }
            case 277: {

              yVelocity_ = input.readFloat();
              break;
            }
            case 285: {

              zVelocity_ = input.readFloat();
              break;
            }
            case 290: {
              String s = input.readStringRequireUtf8();

              boxName_ = s;
              break;
            }
            case 296: {

              predictFlyTimes_ = input.readUInt32();
              break;
            }
            case 304: {

              predictGohomeBattery_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_TelemetryData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_TelemetryData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TelemetryData.class, Builder.class);
    }

    public static final int LNG_FIELD_NUMBER = 1;
    private double lng_;
    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 1;</code>
     * @return The lng.
     */
    @Override
    public double getLng() {
      return lng_;
    }

    public static final int LAT_FIELD_NUMBER = 2;
    private double lat_;
    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 2;</code>
     * @return The lat.
     */
    @Override
    public double getLat() {
      return lat_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 3;
    private float altitude_;
    /**
     * <pre>
     *海拔高度(椭球高)(单位:米)[会受周围气压湿度等环境影响，数据差异及误差比较大]
     * </pre>
     *
     * <code>float altitude = 3;</code>
     * @return The altitude.
     */
    @Override
    public float getAltitude() {
      return altitude_;
    }

    public static final int ULTRASONIC_FIELD_NUMBER = 4;
    private float ultrasonic_;
    /**
     * <pre>
     *相对高度(单位:米)[飞行器距地面10米以下，此值为真实距地距离，大于10米时为距起飞点的相对高度]
     * </pre>
     *
     * <code>float ultrasonic = 4;</code>
     * @return The ultrasonic.
     */
    @Override
    public float getUltrasonic() {
      return ultrasonic_;
    }

    public static final int PITCH_FIELD_NUMBER = 5;
    private float pitch_;
    /**
     * <pre>
     *俯仰角
     * </pre>
     *
     * <code>float pitch = 5;</code>
     * @return The pitch.
     */
    @Override
    public float getPitch() {
      return pitch_;
    }

    public static final int ROLL_FIELD_NUMBER = 6;
    private float roll_;
    /**
     * <pre>
     *横滚角
     * </pre>
     *
     * <code>float roll = 6;</code>
     * @return The roll.
     */
    @Override
    public float getRoll() {
      return roll_;
    }

    public static final int YAW_FIELD_NUMBER = 7;
    private float yaw_;
    /**
     * <pre>
     *偏航角
     * </pre>
     *
     * <code>float yaw = 7;</code>
     * @return The yaw.
     */
    @Override
    public float getYaw() {
      return yaw_;
    }

    public static final int AIRSPEED_FIELD_NUMBER = 8;
    private float airspeed_;
    /**
     * <pre>
     *空速(单位:米/秒)
     * </pre>
     *
     * <code>float airspeed = 8;</code>
     * @return The airspeed.
     */
    @Override
    public float getAirspeed() {
      return airspeed_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 9;
    private float velocity_;
    /**
     * <pre>
     *地速(单位:米/秒)
     * </pre>
     *
     * <code>float velocity = 9;</code>
     * @return The velocity.
     */
    @Override
    public float getVelocity() {
      return velocity_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 10;
    private long timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>uint64 timestamp = 10;</code>
     * @return The timestamp.
     */
    @Override
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int PTPITCH_FIELD_NUMBER = 11;
    private float ptpitch_;
    /**
     * <pre>
     *载荷俯仰角
     * </pre>
     *
     * <code>float ptpitch = 11;</code>
     * @return The ptpitch.
     */
    @Override
    public float getPtpitch() {
      return ptpitch_;
    }

    public static final int PTROLL_FIELD_NUMBER = 12;
    private float ptroll_;
    /**
     * <pre>
     *载荷横滚角
     * </pre>
     *
     * <code>float ptroll = 12;</code>
     * @return The ptroll.
     */
    @Override
    public float getPtroll() {
      return ptroll_;
    }

    public static final int PTYAW_FIELD_NUMBER = 13;
    private float ptyaw_;
    /**
     * <pre>
     *载荷航向角
     * </pre>
     *
     * <code>float ptyaw = 13;</code>
     * @return The ptyaw.
     */
    @Override
    public float getPtyaw() {
      return ptyaw_;
    }

    public static final int ZOOMFACTOR_FIELD_NUMBER = 14;
    private float zoomfactor_;
    /**
     * <pre>
     *载荷当前倍数
     * </pre>
     *
     * <code>float zoomfactor = 14;</code>
     * @return The zoomfactor.
     */
    @Override
    public float getZoomfactor() {
      return zoomfactor_;
    }

    public static final int BOXSN_FIELD_NUMBER = 15;
    private volatile Object boxSn_;
    /**
     * <pre>
     *云盒子编号
     * </pre>
     *
     * <code>string boxSn = 15;</code>
     * @return The boxSn.
     */
    @Override
    public String getBoxSn() {
      Object ref = boxSn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        boxSn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *云盒子编号
     * </pre>
     *
     * <code>string boxSn = 15;</code>
     * @return The bytes for boxSn.
     */
    @Override
    public com.google.protobuf.ByteString
        getBoxSnBytes() {
      Object ref = boxSn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        boxSn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BATTERYPOWER_FIELD_NUMBER = 16;
    private volatile Object batteryPower_;
    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 16;</code>
     * @return The batteryPower.
     */
    @Override
    public String getBatteryPower() {
      Object ref = batteryPower_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        batteryPower_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 16;</code>
     * @return The bytes for batteryPower.
     */
    @Override
    public com.google.protobuf.ByteString
        getBatteryPowerBytes() {
      Object ref = batteryPower_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        batteryPower_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SATELLITECOUNT_FIELD_NUMBER = 17;
    private int satelliteCount_;
    /**
     * <pre>
     *卫星计数
     * </pre>
     *
     * <code>uint32 satelliteCount = 17;</code>
     * @return The satelliteCount.
     */
    @Override
    public int getSatelliteCount() {
      return satelliteCount_;
    }

    public static final int TASKID_FIELD_NUMBER = 18;
    private long taskId_;
    /**
     * <pre>
     *任务编号
     * </pre>
     *
     * <code>uint64 taskId = 18;</code>
     * @return The taskId.
     */
    @Override
    public long getTaskId() {
      return taskId_;
    }

    public static final int RTKLNG_FIELD_NUMBER = 19;
    private double rtkLng_;
    /**
     * <pre>
     *rtk经度
     * </pre>
     *
     * <code>double rtkLng = 19;</code>
     * @return The rtkLng.
     */
    @Override
    public double getRtkLng() {
      return rtkLng_;
    }

    public static final int RTKLAT_FIELD_NUMBER = 20;
    private double rtkLat_;
    /**
     * <pre>
     *rtk纬度
     * </pre>
     *
     * <code>double rtkLat = 20;</code>
     * @return The rtkLat.
     */
    @Override
    public double getRtkLat() {
      return rtkLat_;
    }

    public static final int RTKHFSL_FIELD_NUMBER = 21;
    private float rtkHFSL_;
    /**
     * <pre>
     *rtk海拔高度(平均海平面高度)(单位:米)   
     * </pre>
     *
     * <code>float rtkHFSL = 21;</code>
     * @return The rtkHFSL.
     */
    @Override
    public float getRtkHFSL() {
      return rtkHFSL_;
    }

    public static final int RTKPOSITIONINFO_FIELD_NUMBER = 22;
    private int rtkPositionInfo_;
    /**
     * <pre>
     *rtk状态(值为50时[rtk数据fix固定解]，rtk的经纬度及海拔高度值可用)
     * </pre>
     *
     * <code>uint32 rtkPositionInfo = 22;</code>
     * @return The rtkPositionInfo.
     */
    @Override
    public int getRtkPositionInfo() {
      return rtkPositionInfo_;
    }

    public static final int AIRFLYTIMES_FIELD_NUMBER = 23;
    private int airFlyTimes_;
    /**
     * <pre>
     *当前架次飞行时长(单位:秒) [起飞-&gt;落地 视为一个架次]
     * </pre>
     *
     * <code>uint32 airFlyTimes = 23;</code>
     * @return The airFlyTimes.
     */
    @Override
    public int getAirFlyTimes() {
      return airFlyTimes_;
    }

    public static final int AIRFLYDISTANCE_FIELD_NUMBER = 24;
    private float airFlyDistance_;
    /**
     * <pre>
     *当前架次飞行实际距离(单位:米)
     * </pre>
     *
     * <code>float airFlyDistance = 24;</code>
     * @return The airFlyDistance.
     */
    @Override
    public float getAirFlyDistance() {
      return airFlyDistance_;
    }

    public static final int UAVSN_FIELD_NUMBER = 25;
    private volatile Object uavSn_;
    /**
     * <pre>
     *无人机编号
     * </pre>
     *
     * <code>string uavSn = 25;</code>
     * @return The uavSn.
     */
    @Override
    public String getUavSn() {
      Object ref = uavSn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uavSn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *无人机编号
     * </pre>
     *
     * <code>string uavSn = 25;</code>
     * @return The bytes for uavSn.
     */
    @Override
    public com.google.protobuf.ByteString
        getUavSnBytes() {
      Object ref = uavSn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uavSn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UAVMODEL_FIELD_NUMBER = 26;
    private volatile Object uavModel_;
    /**
     * <pre>
     *无人机型号
     * </pre>
     *
     * <code>string uavModel = 26;</code>
     * @return The uavModel.
     */
    @Override
    public String getUavModel() {
      Object ref = uavModel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uavModel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *无人机型号
     * </pre>
     *
     * <code>string uavModel = 26;</code>
     * @return The bytes for uavModel.
     */
    @Override
    public com.google.protobuf.ByteString
        getUavModelBytes() {
      Object ref = uavModel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uavModel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOMERANGE_FIELD_NUMBER = 27;
    private float homeRange_;
    /**
     * <pre>
     *距降落点水平直线距离(单位:米)
     * </pre>
     *
     * <code>float homeRange = 27;</code>
     * @return The homeRange.
     */
    @Override
    public float getHomeRange() {
      return homeRange_;
    }

    public static final int FLIGHTMODE_FIELD_NUMBER = 28;
    private int flightMode_;
    /**
     * <pre>
     *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
     * </pre>
     *
     * <code>uint32 flightMode = 28;</code>
     * @return The flightMode.
     */
    @Override
    public int getFlightMode() {
      return flightMode_;
    }

    public static final int TARGETDISTANCE_FIELD_NUMBER = 29;
    private float targetDistance_;
    /**
     * <pre>
     *距目标点或最后一个航点的实际距离(单位:米) [适用于打点飞行或航线飞行]
     * </pre>
     *
     * <code>float targetDistance = 29;</code>
     * @return The targetDistance.
     */
    @Override
    public float getTargetDistance() {
      return targetDistance_;
    }

    public static final int PREDICTFLYTIME_FIELD_NUMBER = 30;
    private int predictFlyTime_;
    /**
     * <pre>
     *距目标点或最后一个航点的预计剩余飞行时间(单位:秒)[适用于打点飞行或航线飞行]
     * </pre>
     *
     * <code>uint32 predictFlyTime = 30;</code>
     * @return The predictFlyTime.
     */
    @Override
    public int getPredictFlyTime() {
      return predictFlyTime_;
    }

    public static final int ULTRASONICMAX_FIELD_NUMBER = 31;
    private float ultrasonicMax_;
    /**
     * <pre>
     *本架次最大相对高度值
     * </pre>
     *
     * <code>float ultrasonicMax = 31;</code>
     * @return The ultrasonicMax.
     */
    @Override
    public float getUltrasonicMax() {
      return ultrasonicMax_;
    }

    public static final int ULTRASONICMIN_FIELD_NUMBER = 32;
    private float ultrasonicMin_;
    /**
     * <pre>
     *本架次最小相对高度值 
     * </pre>
     *
     * <code>float ultrasonicMin = 32;</code>
     * @return The ultrasonicMin.
     */
    @Override
    public float getUltrasonicMin() {
      return ultrasonicMin_;
    }

    public static final int XVELOCITY_FIELD_NUMBER = 33;
    private float xVelocity_;
    /**
     * <pre>
     *飞行器x轴速度(单位:米/秒)
     * </pre>
     *
     * <code>float xVelocity = 33;</code>
     * @return The xVelocity.
     */
    @Override
    public float getXVelocity() {
      return xVelocity_;
    }

    public static final int YVELOCITY_FIELD_NUMBER = 34;
    private float yVelocity_;
    /**
     * <pre>
     *飞行器y轴速度(单位:米/秒)
     * </pre>
     *
     * <code>float yVelocity = 34;</code>
     * @return The yVelocity.
     */
    @Override
    public float getYVelocity() {
      return yVelocity_;
    }

    public static final int ZVELOCITY_FIELD_NUMBER = 35;
    private float zVelocity_;
    /**
     * <pre>
     *飞行器z轴速度(单位:米/秒)
     * </pre>
     *
     * <code>float zVelocity = 35;</code>
     * @return The zVelocity.
     */
    @Override
    public float getZVelocity() {
      return zVelocity_;
    }

    public static final int BOXNAME_FIELD_NUMBER = 36;
    private volatile Object boxName_;
    /**
     * <pre>
     *云盒名称
     * </pre>
     *
     * <code>string boxName = 36;</code>
     * @return The boxName.
     */
    @Override
    public String getBoxName() {
      Object ref = boxName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        boxName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *云盒名称
     * </pre>
     *
     * <code>string boxName = 36;</code>
     * @return The bytes for boxName.
     */
    @Override
    public com.google.protobuf.ByteString
        getBoxNameBytes() {
      Object ref = boxName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        boxName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PREDICTFLYTIMES_FIELD_NUMBER = 37;
    private int predictFlyTimes_;
    /**
     * <pre>
     *预计剩余飞行时间(单位:秒)
     * </pre>
     *
     * <code>uint32 predictFlyTimes = 37;</code>
     * @return The predictFlyTimes.
     */
    @Override
    public int getPredictFlyTimes() {
      return predictFlyTimes_;
    }

    public static final int PREDICTGOHOMEBATTERY_FIELD_NUMBER = 38;
    private int predictGohomeBattery_;
    /**
     * <pre>
     *预计返航所需最小电量百分比
     * </pre>
     *
     * <code>uint32 predictGohomeBattery = 38;</code>
     * @return The predictGohomeBattery.
     */
    @Override
    public int getPredictGohomeBattery() {
      return predictGohomeBattery_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lng_ != 0D) {
        output.writeDouble(1, lng_);
      }
      if (lat_ != 0D) {
        output.writeDouble(2, lat_);
      }
      if (altitude_ != 0F) {
        output.writeFloat(3, altitude_);
      }
      if (ultrasonic_ != 0F) {
        output.writeFloat(4, ultrasonic_);
      }
      if (pitch_ != 0F) {
        output.writeFloat(5, pitch_);
      }
      if (roll_ != 0F) {
        output.writeFloat(6, roll_);
      }
      if (yaw_ != 0F) {
        output.writeFloat(7, yaw_);
      }
      if (airspeed_ != 0F) {
        output.writeFloat(8, airspeed_);
      }
      if (velocity_ != 0F) {
        output.writeFloat(9, velocity_);
      }
      if (timestamp_ != 0L) {
        output.writeUInt64(10, timestamp_);
      }
      if (ptpitch_ != 0F) {
        output.writeFloat(11, ptpitch_);
      }
      if (ptroll_ != 0F) {
        output.writeFloat(12, ptroll_);
      }
      if (ptyaw_ != 0F) {
        output.writeFloat(13, ptyaw_);
      }
      if (zoomfactor_ != 0F) {
        output.writeFloat(14, zoomfactor_);
      }
      if (!getBoxSnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, boxSn_);
      }
      if (!getBatteryPowerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, batteryPower_);
      }
      if (satelliteCount_ != 0) {
        output.writeUInt32(17, satelliteCount_);
      }
      if (taskId_ != 0L) {
        output.writeUInt64(18, taskId_);
      }
      if (rtkLng_ != 0D) {
        output.writeDouble(19, rtkLng_);
      }
      if (rtkLat_ != 0D) {
        output.writeDouble(20, rtkLat_);
      }
      if (rtkHFSL_ != 0F) {
        output.writeFloat(21, rtkHFSL_);
      }
      if (rtkPositionInfo_ != 0) {
        output.writeUInt32(22, rtkPositionInfo_);
      }
      if (airFlyTimes_ != 0) {
        output.writeUInt32(23, airFlyTimes_);
      }
      if (airFlyDistance_ != 0F) {
        output.writeFloat(24, airFlyDistance_);
      }
      if (!getUavSnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 25, uavSn_);
      }
      if (!getUavModelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 26, uavModel_);
      }
      if (homeRange_ != 0F) {
        output.writeFloat(27, homeRange_);
      }
      if (flightMode_ != 0) {
        output.writeUInt32(28, flightMode_);
      }
      if (targetDistance_ != 0F) {
        output.writeFloat(29, targetDistance_);
      }
      if (predictFlyTime_ != 0) {
        output.writeUInt32(30, predictFlyTime_);
      }
      if (ultrasonicMax_ != 0F) {
        output.writeFloat(31, ultrasonicMax_);
      }
      if (ultrasonicMin_ != 0F) {
        output.writeFloat(32, ultrasonicMin_);
      }
      if (xVelocity_ != 0F) {
        output.writeFloat(33, xVelocity_);
      }
      if (yVelocity_ != 0F) {
        output.writeFloat(34, yVelocity_);
      }
      if (zVelocity_ != 0F) {
        output.writeFloat(35, zVelocity_);
      }
      if (!getBoxNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 36, boxName_);
      }
      if (predictFlyTimes_ != 0) {
        output.writeUInt32(37, predictFlyTimes_);
      }
      if (predictGohomeBattery_ != 0) {
        output.writeUInt32(38, predictGohomeBattery_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lng_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lat_);
      }
      if (altitude_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, altitude_);
      }
      if (ultrasonic_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ultrasonic_);
      }
      if (pitch_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, pitch_);
      }
      if (roll_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, roll_);
      }
      if (yaw_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, yaw_);
      }
      if (airspeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, airspeed_);
      }
      if (velocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, velocity_);
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, timestamp_);
      }
      if (ptpitch_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, ptpitch_);
      }
      if (ptroll_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, ptroll_);
      }
      if (ptyaw_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, ptyaw_);
      }
      if (zoomfactor_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, zoomfactor_);
      }
      if (!getBoxSnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, boxSn_);
      }
      if (!getBatteryPowerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, batteryPower_);
      }
      if (satelliteCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, satelliteCount_);
      }
      if (taskId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, taskId_);
      }
      if (rtkLng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, rtkLng_);
      }
      if (rtkLat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, rtkLat_);
      }
      if (rtkHFSL_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, rtkHFSL_);
      }
      if (rtkPositionInfo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, rtkPositionInfo_);
      }
      if (airFlyTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, airFlyTimes_);
      }
      if (airFlyDistance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, airFlyDistance_);
      }
      if (!getUavSnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, uavSn_);
      }
      if (!getUavModelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(26, uavModel_);
      }
      if (homeRange_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(27, homeRange_);
      }
      if (flightMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, flightMode_);
      }
      if (targetDistance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(29, targetDistance_);
      }
      if (predictFlyTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, predictFlyTime_);
      }
      if (ultrasonicMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(31, ultrasonicMax_);
      }
      if (ultrasonicMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, ultrasonicMin_);
      }
      if (xVelocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(33, xVelocity_);
      }
      if (yVelocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(34, yVelocity_);
      }
      if (zVelocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(35, zVelocity_);
      }
      if (!getBoxNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(36, boxName_);
      }
      if (predictFlyTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(37, predictFlyTimes_);
      }
      if (predictGohomeBattery_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, predictGohomeBattery_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TelemetryData)) {
        return super.equals(obj);
      }
      TelemetryData other = (TelemetryData) obj;

      if (Double.doubleToLongBits(getLng())
          != Double.doubleToLongBits(
              other.getLng())) return false;
      if (Double.doubleToLongBits(getLat())
          != Double.doubleToLongBits(
              other.getLat())) return false;
      if (Float.floatToIntBits(getAltitude())
          != Float.floatToIntBits(
              other.getAltitude())) return false;
      if (Float.floatToIntBits(getUltrasonic())
          != Float.floatToIntBits(
              other.getUltrasonic())) return false;
      if (Float.floatToIntBits(getPitch())
          != Float.floatToIntBits(
              other.getPitch())) return false;
      if (Float.floatToIntBits(getRoll())
          != Float.floatToIntBits(
              other.getRoll())) return false;
      if (Float.floatToIntBits(getYaw())
          != Float.floatToIntBits(
              other.getYaw())) return false;
      if (Float.floatToIntBits(getAirspeed())
          != Float.floatToIntBits(
              other.getAirspeed())) return false;
      if (Float.floatToIntBits(getVelocity())
          != Float.floatToIntBits(
              other.getVelocity())) return false;
      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (Float.floatToIntBits(getPtpitch())
          != Float.floatToIntBits(
              other.getPtpitch())) return false;
      if (Float.floatToIntBits(getPtroll())
          != Float.floatToIntBits(
              other.getPtroll())) return false;
      if (Float.floatToIntBits(getPtyaw())
          != Float.floatToIntBits(
              other.getPtyaw())) return false;
      if (Float.floatToIntBits(getZoomfactor())
          != Float.floatToIntBits(
              other.getZoomfactor())) return false;
      if (!getBoxSn()
          .equals(other.getBoxSn())) return false;
      if (!getBatteryPower()
          .equals(other.getBatteryPower())) return false;
      if (getSatelliteCount()
          != other.getSatelliteCount()) return false;
      if (getTaskId()
          != other.getTaskId()) return false;
      if (Double.doubleToLongBits(getRtkLng())
          != Double.doubleToLongBits(
              other.getRtkLng())) return false;
      if (Double.doubleToLongBits(getRtkLat())
          != Double.doubleToLongBits(
              other.getRtkLat())) return false;
      if (Float.floatToIntBits(getRtkHFSL())
          != Float.floatToIntBits(
              other.getRtkHFSL())) return false;
      if (getRtkPositionInfo()
          != other.getRtkPositionInfo()) return false;
      if (getAirFlyTimes()
          != other.getAirFlyTimes()) return false;
      if (Float.floatToIntBits(getAirFlyDistance())
          != Float.floatToIntBits(
              other.getAirFlyDistance())) return false;
      if (!getUavSn()
          .equals(other.getUavSn())) return false;
      if (!getUavModel()
          .equals(other.getUavModel())) return false;
      if (Float.floatToIntBits(getHomeRange())
          != Float.floatToIntBits(
              other.getHomeRange())) return false;
      if (getFlightMode()
          != other.getFlightMode()) return false;
      if (Float.floatToIntBits(getTargetDistance())
          != Float.floatToIntBits(
              other.getTargetDistance())) return false;
      if (getPredictFlyTime()
          != other.getPredictFlyTime()) return false;
      if (Float.floatToIntBits(getUltrasonicMax())
          != Float.floatToIntBits(
              other.getUltrasonicMax())) return false;
      if (Float.floatToIntBits(getUltrasonicMin())
          != Float.floatToIntBits(
              other.getUltrasonicMin())) return false;
      if (Float.floatToIntBits(getXVelocity())
          != Float.floatToIntBits(
              other.getXVelocity())) return false;
      if (Float.floatToIntBits(getYVelocity())
          != Float.floatToIntBits(
              other.getYVelocity())) return false;
      if (Float.floatToIntBits(getZVelocity())
          != Float.floatToIntBits(
              other.getZVelocity())) return false;
      if (!getBoxName()
          .equals(other.getBoxName())) return false;
      if (getPredictFlyTimes()
          != other.getPredictFlyTimes()) return false;
      if (getPredictGohomeBattery()
          != other.getPredictGohomeBattery()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAltitude());
      hash = (37 * hash) + ULTRASONIC_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getUltrasonic());
      hash = (37 * hash) + PITCH_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPitch());
      hash = (37 * hash) + ROLL_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRoll());
      hash = (37 * hash) + YAW_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getYaw());
      hash = (37 * hash) + AIRSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAirspeed());
      hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getVelocity());
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + PTPITCH_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPtpitch());
      hash = (37 * hash) + PTROLL_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPtroll());
      hash = (37 * hash) + PTYAW_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPtyaw());
      hash = (37 * hash) + ZOOMFACTOR_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getZoomfactor());
      hash = (37 * hash) + BOXSN_FIELD_NUMBER;
      hash = (53 * hash) + getBoxSn().hashCode();
      hash = (37 * hash) + BATTERYPOWER_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryPower().hashCode();
      hash = (37 * hash) + SATELLITECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getSatelliteCount();
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTaskId());
      hash = (37 * hash) + RTKLNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getRtkLng()));
      hash = (37 * hash) + RTKLAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getRtkLat()));
      hash = (37 * hash) + RTKHFSL_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRtkHFSL());
      hash = (37 * hash) + RTKPOSITIONINFO_FIELD_NUMBER;
      hash = (53 * hash) + getRtkPositionInfo();
      hash = (37 * hash) + AIRFLYTIMES_FIELD_NUMBER;
      hash = (53 * hash) + getAirFlyTimes();
      hash = (37 * hash) + AIRFLYDISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAirFlyDistance());
      hash = (37 * hash) + UAVSN_FIELD_NUMBER;
      hash = (53 * hash) + getUavSn().hashCode();
      hash = (37 * hash) + UAVMODEL_FIELD_NUMBER;
      hash = (53 * hash) + getUavModel().hashCode();
      hash = (37 * hash) + HOMERANGE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getHomeRange());
      hash = (37 * hash) + FLIGHTMODE_FIELD_NUMBER;
      hash = (53 * hash) + getFlightMode();
      hash = (37 * hash) + TARGETDISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getTargetDistance());
      hash = (37 * hash) + PREDICTFLYTIME_FIELD_NUMBER;
      hash = (53 * hash) + getPredictFlyTime();
      hash = (37 * hash) + ULTRASONICMAX_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getUltrasonicMax());
      hash = (37 * hash) + ULTRASONICMIN_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getUltrasonicMin());
      hash = (37 * hash) + XVELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getXVelocity());
      hash = (37 * hash) + YVELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getYVelocity());
      hash = (37 * hash) + ZVELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getZVelocity());
      hash = (37 * hash) + BOXNAME_FIELD_NUMBER;
      hash = (53 * hash) + getBoxName().hashCode();
      hash = (37 * hash) + PREDICTFLYTIMES_FIELD_NUMBER;
      hash = (53 * hash) + getPredictFlyTimes();
      hash = (37 * hash) + PREDICTGOHOMEBATTERY_FIELD_NUMBER;
      hash = (53 * hash) + getPredictGohomeBattery();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TelemetryData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TelemetryData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TelemetryData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TelemetryData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TelemetryData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TelemetryData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TelemetryData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TelemetryData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TelemetryData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TelemetryData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TelemetryData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TelemetryData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TelemetryData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *下行遥测
     * </pre>
     *
     * Protobuf type {@code TelemetryData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TelemetryData)
        TelemetryDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_TelemetryData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_TelemetryData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TelemetryData.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.TelemetryData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        lng_ = 0D;

        lat_ = 0D;

        altitude_ = 0F;

        ultrasonic_ = 0F;

        pitch_ = 0F;

        roll_ = 0F;

        yaw_ = 0F;

        airspeed_ = 0F;

        velocity_ = 0F;

        timestamp_ = 0L;

        ptpitch_ = 0F;

        ptroll_ = 0F;

        ptyaw_ = 0F;

        zoomfactor_ = 0F;

        boxSn_ = "";

        batteryPower_ = "";

        satelliteCount_ = 0;

        taskId_ = 0L;

        rtkLng_ = 0D;

        rtkLat_ = 0D;

        rtkHFSL_ = 0F;

        rtkPositionInfo_ = 0;

        airFlyTimes_ = 0;

        airFlyDistance_ = 0F;

        uavSn_ = "";

        uavModel_ = "";

        homeRange_ = 0F;

        flightMode_ = 0;

        targetDistance_ = 0F;

        predictFlyTime_ = 0;

        ultrasonicMax_ = 0F;

        ultrasonicMin_ = 0F;

        xVelocity_ = 0F;

        yVelocity_ = 0F;

        zVelocity_ = 0F;

        boxName_ = "";

        predictFlyTimes_ = 0;

        predictGohomeBattery_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_TelemetryData_descriptor;
      }

      @Override
      public TelemetryData getDefaultInstanceForType() {
        return TelemetryData.getDefaultInstance();
      }

      @Override
      public TelemetryData build() {
        TelemetryData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TelemetryData buildPartial() {
        TelemetryData result = new TelemetryData(this);
        result.lng_ = lng_;
        result.lat_ = lat_;
        result.altitude_ = altitude_;
        result.ultrasonic_ = ultrasonic_;
        result.pitch_ = pitch_;
        result.roll_ = roll_;
        result.yaw_ = yaw_;
        result.airspeed_ = airspeed_;
        result.velocity_ = velocity_;
        result.timestamp_ = timestamp_;
        result.ptpitch_ = ptpitch_;
        result.ptroll_ = ptroll_;
        result.ptyaw_ = ptyaw_;
        result.zoomfactor_ = zoomfactor_;
        result.boxSn_ = boxSn_;
        result.batteryPower_ = batteryPower_;
        result.satelliteCount_ = satelliteCount_;
        result.taskId_ = taskId_;
        result.rtkLng_ = rtkLng_;
        result.rtkLat_ = rtkLat_;
        result.rtkHFSL_ = rtkHFSL_;
        result.rtkPositionInfo_ = rtkPositionInfo_;
        result.airFlyTimes_ = airFlyTimes_;
        result.airFlyDistance_ = airFlyDistance_;
        result.uavSn_ = uavSn_;
        result.uavModel_ = uavModel_;
        result.homeRange_ = homeRange_;
        result.flightMode_ = flightMode_;
        result.targetDistance_ = targetDistance_;
        result.predictFlyTime_ = predictFlyTime_;
        result.ultrasonicMax_ = ultrasonicMax_;
        result.ultrasonicMin_ = ultrasonicMin_;
        result.xVelocity_ = xVelocity_;
        result.yVelocity_ = yVelocity_;
        result.zVelocity_ = zVelocity_;
        result.boxName_ = boxName_;
        result.predictFlyTimes_ = predictFlyTimes_;
        result.predictGohomeBattery_ = predictGohomeBattery_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TelemetryData) {
          return mergeFrom((TelemetryData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TelemetryData other) {
        if (other == TelemetryData.getDefaultInstance()) return this;
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getAltitude() != 0F) {
          setAltitude(other.getAltitude());
        }
        if (other.getUltrasonic() != 0F) {
          setUltrasonic(other.getUltrasonic());
        }
        if (other.getPitch() != 0F) {
          setPitch(other.getPitch());
        }
        if (other.getRoll() != 0F) {
          setRoll(other.getRoll());
        }
        if (other.getYaw() != 0F) {
          setYaw(other.getYaw());
        }
        if (other.getAirspeed() != 0F) {
          setAirspeed(other.getAirspeed());
        }
        if (other.getVelocity() != 0F) {
          setVelocity(other.getVelocity());
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getPtpitch() != 0F) {
          setPtpitch(other.getPtpitch());
        }
        if (other.getPtroll() != 0F) {
          setPtroll(other.getPtroll());
        }
        if (other.getPtyaw() != 0F) {
          setPtyaw(other.getPtyaw());
        }
        if (other.getZoomfactor() != 0F) {
          setZoomfactor(other.getZoomfactor());
        }
        if (!other.getBoxSn().isEmpty()) {
          boxSn_ = other.boxSn_;
          onChanged();
        }
        if (!other.getBatteryPower().isEmpty()) {
          batteryPower_ = other.batteryPower_;
          onChanged();
        }
        if (other.getSatelliteCount() != 0) {
          setSatelliteCount(other.getSatelliteCount());
        }
        if (other.getTaskId() != 0L) {
          setTaskId(other.getTaskId());
        }
        if (other.getRtkLng() != 0D) {
          setRtkLng(other.getRtkLng());
        }
        if (other.getRtkLat() != 0D) {
          setRtkLat(other.getRtkLat());
        }
        if (other.getRtkHFSL() != 0F) {
          setRtkHFSL(other.getRtkHFSL());
        }
        if (other.getRtkPositionInfo() != 0) {
          setRtkPositionInfo(other.getRtkPositionInfo());
        }
        if (other.getAirFlyTimes() != 0) {
          setAirFlyTimes(other.getAirFlyTimes());
        }
        if (other.getAirFlyDistance() != 0F) {
          setAirFlyDistance(other.getAirFlyDistance());
        }
        if (!other.getUavSn().isEmpty()) {
          uavSn_ = other.uavSn_;
          onChanged();
        }
        if (!other.getUavModel().isEmpty()) {
          uavModel_ = other.uavModel_;
          onChanged();
        }
        if (other.getHomeRange() != 0F) {
          setHomeRange(other.getHomeRange());
        }
        if (other.getFlightMode() != 0) {
          setFlightMode(other.getFlightMode());
        }
        if (other.getTargetDistance() != 0F) {
          setTargetDistance(other.getTargetDistance());
        }
        if (other.getPredictFlyTime() != 0) {
          setPredictFlyTime(other.getPredictFlyTime());
        }
        if (other.getUltrasonicMax() != 0F) {
          setUltrasonicMax(other.getUltrasonicMax());
        }
        if (other.getUltrasonicMin() != 0F) {
          setUltrasonicMin(other.getUltrasonicMin());
        }
        if (other.getXVelocity() != 0F) {
          setXVelocity(other.getXVelocity());
        }
        if (other.getYVelocity() != 0F) {
          setYVelocity(other.getYVelocity());
        }
        if (other.getZVelocity() != 0F) {
          setZVelocity(other.getZVelocity());
        }
        if (!other.getBoxName().isEmpty()) {
          boxName_ = other.boxName_;
          onChanged();
        }
        if (other.getPredictFlyTimes() != 0) {
          setPredictFlyTimes(other.getPredictFlyTimes());
        }
        if (other.getPredictGohomeBattery() != 0) {
          setPredictGohomeBattery(other.getPredictGohomeBattery());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TelemetryData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TelemetryData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double lng_ ;
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       * @return The lng.
       */
      @Override
      public double getLng() {
        return lng_;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       * @param value The lng to set.
       * @return This builder for chaining.
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       * @return The lat.
       */
      @Override
      public double getLat() {
        return lat_;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       * @param value The lat to set.
       * @return This builder for chaining.
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private float altitude_ ;
      /**
       * <pre>
       *海拔高度(椭球高)(单位:米)[会受周围气压湿度等环境影响，数据差异及误差比较大]
       * </pre>
       *
       * <code>float altitude = 3;</code>
       * @return The altitude.
       */
      @Override
      public float getAltitude() {
        return altitude_;
      }
      /**
       * <pre>
       *海拔高度(椭球高)(单位:米)[会受周围气压湿度等环境影响，数据差异及误差比较大]
       * </pre>
       *
       * <code>float altitude = 3;</code>
       * @param value The altitude to set.
       * @return This builder for chaining.
       */
      public Builder setAltitude(float value) {
        
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *海拔高度(椭球高)(单位:米)[会受周围气压湿度等环境影响，数据差异及误差比较大]
       * </pre>
       *
       * <code>float altitude = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitude() {
        
        altitude_ = 0F;
        onChanged();
        return this;
      }

      private float ultrasonic_ ;
      /**
       * <pre>
       *相对高度(单位:米)[飞行器距地面10米以下，此值为真实距地距离，大于10米时为距起飞点的相对高度]
       * </pre>
       *
       * <code>float ultrasonic = 4;</code>
       * @return The ultrasonic.
       */
      @Override
      public float getUltrasonic() {
        return ultrasonic_;
      }
      /**
       * <pre>
       *相对高度(单位:米)[飞行器距地面10米以下，此值为真实距地距离，大于10米时为距起飞点的相对高度]
       * </pre>
       *
       * <code>float ultrasonic = 4;</code>
       * @param value The ultrasonic to set.
       * @return This builder for chaining.
       */
      public Builder setUltrasonic(float value) {
        
        ultrasonic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相对高度(单位:米)[飞行器距地面10米以下，此值为真实距地距离，大于10米时为距起飞点的相对高度]
       * </pre>
       *
       * <code>float ultrasonic = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUltrasonic() {
        
        ultrasonic_ = 0F;
        onChanged();
        return this;
      }

      private float pitch_ ;
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>float pitch = 5;</code>
       * @return The pitch.
       */
      @Override
      public float getPitch() {
        return pitch_;
      }
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>float pitch = 5;</code>
       * @param value The pitch to set.
       * @return This builder for chaining.
       */
      public Builder setPitch(float value) {
        
        pitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>float pitch = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitch() {
        
        pitch_ = 0F;
        onChanged();
        return this;
      }

      private float roll_ ;
      /**
       * <pre>
       *横滚角
       * </pre>
       *
       * <code>float roll = 6;</code>
       * @return The roll.
       */
      @Override
      public float getRoll() {
        return roll_;
      }
      /**
       * <pre>
       *横滚角
       * </pre>
       *
       * <code>float roll = 6;</code>
       * @param value The roll to set.
       * @return This builder for chaining.
       */
      public Builder setRoll(float value) {
        
        roll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *横滚角
       * </pre>
       *
       * <code>float roll = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoll() {
        
        roll_ = 0F;
        onChanged();
        return this;
      }

      private float yaw_ ;
      /**
       * <pre>
       *偏航角
       * </pre>
       *
       * <code>float yaw = 7;</code>
       * @return The yaw.
       */
      @Override
      public float getYaw() {
        return yaw_;
      }
      /**
       * <pre>
       *偏航角
       * </pre>
       *
       * <code>float yaw = 7;</code>
       * @param value The yaw to set.
       * @return This builder for chaining.
       */
      public Builder setYaw(float value) {
        
        yaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *偏航角
       * </pre>
       *
       * <code>float yaw = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearYaw() {
        
        yaw_ = 0F;
        onChanged();
        return this;
      }

      private float airspeed_ ;
      /**
       * <pre>
       *空速(单位:米/秒)
       * </pre>
       *
       * <code>float airspeed = 8;</code>
       * @return The airspeed.
       */
      @Override
      public float getAirspeed() {
        return airspeed_;
      }
      /**
       * <pre>
       *空速(单位:米/秒)
       * </pre>
       *
       * <code>float airspeed = 8;</code>
       * @param value The airspeed to set.
       * @return This builder for chaining.
       */
      public Builder setAirspeed(float value) {
        
        airspeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *空速(单位:米/秒)
       * </pre>
       *
       * <code>float airspeed = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirspeed() {
        
        airspeed_ = 0F;
        onChanged();
        return this;
      }

      private float velocity_ ;
      /**
       * <pre>
       *地速(单位:米/秒)
       * </pre>
       *
       * <code>float velocity = 9;</code>
       * @return The velocity.
       */
      @Override
      public float getVelocity() {
        return velocity_;
      }
      /**
       * <pre>
       *地速(单位:米/秒)
       * </pre>
       *
       * <code>float velocity = 9;</code>
       * @param value The velocity to set.
       * @return This builder for chaining.
       */
      public Builder setVelocity(float value) {
        
        velocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *地速(单位:米/秒)
       * </pre>
       *
       * <code>float velocity = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelocity() {
        
        velocity_ = 0F;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>uint64 timestamp = 10;</code>
       * @return The timestamp.
       */
      @Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>uint64 timestamp = 10;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>uint64 timestamp = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private float ptpitch_ ;
      /**
       * <pre>
       *载荷俯仰角
       * </pre>
       *
       * <code>float ptpitch = 11;</code>
       * @return The ptpitch.
       */
      @Override
      public float getPtpitch() {
        return ptpitch_;
      }
      /**
       * <pre>
       *载荷俯仰角
       * </pre>
       *
       * <code>float ptpitch = 11;</code>
       * @param value The ptpitch to set.
       * @return This builder for chaining.
       */
      public Builder setPtpitch(float value) {
        
        ptpitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *载荷俯仰角
       * </pre>
       *
       * <code>float ptpitch = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtpitch() {
        
        ptpitch_ = 0F;
        onChanged();
        return this;
      }

      private float ptroll_ ;
      /**
       * <pre>
       *载荷横滚角
       * </pre>
       *
       * <code>float ptroll = 12;</code>
       * @return The ptroll.
       */
      @Override
      public float getPtroll() {
        return ptroll_;
      }
      /**
       * <pre>
       *载荷横滚角
       * </pre>
       *
       * <code>float ptroll = 12;</code>
       * @param value The ptroll to set.
       * @return This builder for chaining.
       */
      public Builder setPtroll(float value) {
        
        ptroll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *载荷横滚角
       * </pre>
       *
       * <code>float ptroll = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtroll() {
        
        ptroll_ = 0F;
        onChanged();
        return this;
      }

      private float ptyaw_ ;
      /**
       * <pre>
       *载荷航向角
       * </pre>
       *
       * <code>float ptyaw = 13;</code>
       * @return The ptyaw.
       */
      @Override
      public float getPtyaw() {
        return ptyaw_;
      }
      /**
       * <pre>
       *载荷航向角
       * </pre>
       *
       * <code>float ptyaw = 13;</code>
       * @param value The ptyaw to set.
       * @return This builder for chaining.
       */
      public Builder setPtyaw(float value) {
        
        ptyaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *载荷航向角
       * </pre>
       *
       * <code>float ptyaw = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtyaw() {
        
        ptyaw_ = 0F;
        onChanged();
        return this;
      }

      private float zoomfactor_ ;
      /**
       * <pre>
       *载荷当前倍数
       * </pre>
       *
       * <code>float zoomfactor = 14;</code>
       * @return The zoomfactor.
       */
      @Override
      public float getZoomfactor() {
        return zoomfactor_;
      }
      /**
       * <pre>
       *载荷当前倍数
       * </pre>
       *
       * <code>float zoomfactor = 14;</code>
       * @param value The zoomfactor to set.
       * @return This builder for chaining.
       */
      public Builder setZoomfactor(float value) {
        
        zoomfactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *载荷当前倍数
       * </pre>
       *
       * <code>float zoomfactor = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearZoomfactor() {
        
        zoomfactor_ = 0F;
        onChanged();
        return this;
      }

      private Object boxSn_ = "";
      /**
       * <pre>
       *云盒子编号
       * </pre>
       *
       * <code>string boxSn = 15;</code>
       * @return The boxSn.
       */
      public String getBoxSn() {
        Object ref = boxSn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          boxSn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *云盒子编号
       * </pre>
       *
       * <code>string boxSn = 15;</code>
       * @return The bytes for boxSn.
       */
      public com.google.protobuf.ByteString
          getBoxSnBytes() {
        Object ref = boxSn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          boxSn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *云盒子编号
       * </pre>
       *
       * <code>string boxSn = 15;</code>
       * @param value The boxSn to set.
       * @return This builder for chaining.
       */
      public Builder setBoxSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boxSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒子编号
       * </pre>
       *
       * <code>string boxSn = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoxSn() {
        
        boxSn_ = getDefaultInstance().getBoxSn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒子编号
       * </pre>
       *
       * <code>string boxSn = 15;</code>
       * @param value The bytes for boxSn to set.
       * @return This builder for chaining.
       */
      public Builder setBoxSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boxSn_ = value;
        onChanged();
        return this;
      }

      private Object batteryPower_ = "";
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 16;</code>
       * @return The batteryPower.
       */
      public String getBatteryPower() {
        Object ref = batteryPower_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          batteryPower_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 16;</code>
       * @return The bytes for batteryPower.
       */
      public com.google.protobuf.ByteString
          getBatteryPowerBytes() {
        Object ref = batteryPower_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          batteryPower_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 16;</code>
       * @param value The batteryPower to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryPower(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        batteryPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryPower() {
        
        batteryPower_ = getDefaultInstance().getBatteryPower();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 16;</code>
       * @param value The bytes for batteryPower to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryPowerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        batteryPower_ = value;
        onChanged();
        return this;
      }

      private int satelliteCount_ ;
      /**
       * <pre>
       *卫星计数
       * </pre>
       *
       * <code>uint32 satelliteCount = 17;</code>
       * @return The satelliteCount.
       */
      @Override
      public int getSatelliteCount() {
        return satelliteCount_;
      }
      /**
       * <pre>
       *卫星计数
       * </pre>
       *
       * <code>uint32 satelliteCount = 17;</code>
       * @param value The satelliteCount to set.
       * @return This builder for chaining.
       */
      public Builder setSatelliteCount(int value) {
        
        satelliteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卫星计数
       * </pre>
       *
       * <code>uint32 satelliteCount = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSatelliteCount() {
        
        satelliteCount_ = 0;
        onChanged();
        return this;
      }

      private long taskId_ ;
      /**
       * <pre>
       *任务编号
       * </pre>
       *
       * <code>uint64 taskId = 18;</code>
       * @return The taskId.
       */
      @Override
      public long getTaskId() {
        return taskId_;
      }
      /**
       * <pre>
       *任务编号
       * </pre>
       *
       * <code>uint64 taskId = 18;</code>
       * @param value The taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskId(long value) {
        
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务编号
       * </pre>
       *
       * <code>uint64 taskId = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskId() {
        
        taskId_ = 0L;
        onChanged();
        return this;
      }

      private double rtkLng_ ;
      /**
       * <pre>
       *rtk经度
       * </pre>
       *
       * <code>double rtkLng = 19;</code>
       * @return The rtkLng.
       */
      @Override
      public double getRtkLng() {
        return rtkLng_;
      }
      /**
       * <pre>
       *rtk经度
       * </pre>
       *
       * <code>double rtkLng = 19;</code>
       * @param value The rtkLng to set.
       * @return This builder for chaining.
       */
      public Builder setRtkLng(double value) {
        
        rtkLng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rtk经度
       * </pre>
       *
       * <code>double rtkLng = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearRtkLng() {
        
        rtkLng_ = 0D;
        onChanged();
        return this;
      }

      private double rtkLat_ ;
      /**
       * <pre>
       *rtk纬度
       * </pre>
       *
       * <code>double rtkLat = 20;</code>
       * @return The rtkLat.
       */
      @Override
      public double getRtkLat() {
        return rtkLat_;
      }
      /**
       * <pre>
       *rtk纬度
       * </pre>
       *
       * <code>double rtkLat = 20;</code>
       * @param value The rtkLat to set.
       * @return This builder for chaining.
       */
      public Builder setRtkLat(double value) {
        
        rtkLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rtk纬度
       * </pre>
       *
       * <code>double rtkLat = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearRtkLat() {
        
        rtkLat_ = 0D;
        onChanged();
        return this;
      }

      private float rtkHFSL_ ;
      /**
       * <pre>
       *rtk海拔高度(平均海平面高度)(单位:米)   
       * </pre>
       *
       * <code>float rtkHFSL = 21;</code>
       * @return The rtkHFSL.
       */
      @Override
      public float getRtkHFSL() {
        return rtkHFSL_;
      }
      /**
       * <pre>
       *rtk海拔高度(平均海平面高度)(单位:米)   
       * </pre>
       *
       * <code>float rtkHFSL = 21;</code>
       * @param value The rtkHFSL to set.
       * @return This builder for chaining.
       */
      public Builder setRtkHFSL(float value) {
        
        rtkHFSL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rtk海拔高度(平均海平面高度)(单位:米)   
       * </pre>
       *
       * <code>float rtkHFSL = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearRtkHFSL() {
        
        rtkHFSL_ = 0F;
        onChanged();
        return this;
      }

      private int rtkPositionInfo_ ;
      /**
       * <pre>
       *rtk状态(值为50时[rtk数据fix固定解]，rtk的经纬度及海拔高度值可用)
       * </pre>
       *
       * <code>uint32 rtkPositionInfo = 22;</code>
       * @return The rtkPositionInfo.
       */
      @Override
      public int getRtkPositionInfo() {
        return rtkPositionInfo_;
      }
      /**
       * <pre>
       *rtk状态(值为50时[rtk数据fix固定解]，rtk的经纬度及海拔高度值可用)
       * </pre>
       *
       * <code>uint32 rtkPositionInfo = 22;</code>
       * @param value The rtkPositionInfo to set.
       * @return This builder for chaining.
       */
      public Builder setRtkPositionInfo(int value) {
        
        rtkPositionInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rtk状态(值为50时[rtk数据fix固定解]，rtk的经纬度及海拔高度值可用)
       * </pre>
       *
       * <code>uint32 rtkPositionInfo = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearRtkPositionInfo() {
        
        rtkPositionInfo_ = 0;
        onChanged();
        return this;
      }

      private int airFlyTimes_ ;
      /**
       * <pre>
       *当前架次飞行时长(单位:秒) [起飞-&gt;落地 视为一个架次]
       * </pre>
       *
       * <code>uint32 airFlyTimes = 23;</code>
       * @return The airFlyTimes.
       */
      @Override
      public int getAirFlyTimes() {
        return airFlyTimes_;
      }
      /**
       * <pre>
       *当前架次飞行时长(单位:秒) [起飞-&gt;落地 视为一个架次]
       * </pre>
       *
       * <code>uint32 airFlyTimes = 23;</code>
       * @param value The airFlyTimes to set.
       * @return This builder for chaining.
       */
      public Builder setAirFlyTimes(int value) {
        
        airFlyTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前架次飞行时长(单位:秒) [起飞-&gt;落地 视为一个架次]
       * </pre>
       *
       * <code>uint32 airFlyTimes = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirFlyTimes() {
        
        airFlyTimes_ = 0;
        onChanged();
        return this;
      }

      private float airFlyDistance_ ;
      /**
       * <pre>
       *当前架次飞行实际距离(单位:米)
       * </pre>
       *
       * <code>float airFlyDistance = 24;</code>
       * @return The airFlyDistance.
       */
      @Override
      public float getAirFlyDistance() {
        return airFlyDistance_;
      }
      /**
       * <pre>
       *当前架次飞行实际距离(单位:米)
       * </pre>
       *
       * <code>float airFlyDistance = 24;</code>
       * @param value The airFlyDistance to set.
       * @return This builder for chaining.
       */
      public Builder setAirFlyDistance(float value) {
        
        airFlyDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前架次飞行实际距离(单位:米)
       * </pre>
       *
       * <code>float airFlyDistance = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirFlyDistance() {
        
        airFlyDistance_ = 0F;
        onChanged();
        return this;
      }

      private Object uavSn_ = "";
      /**
       * <pre>
       *无人机编号
       * </pre>
       *
       * <code>string uavSn = 25;</code>
       * @return The uavSn.
       */
      public String getUavSn() {
        Object ref = uavSn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uavSn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *无人机编号
       * </pre>
       *
       * <code>string uavSn = 25;</code>
       * @return The bytes for uavSn.
       */
      public com.google.protobuf.ByteString
          getUavSnBytes() {
        Object ref = uavSn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uavSn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *无人机编号
       * </pre>
       *
       * <code>string uavSn = 25;</code>
       * @param value The uavSn to set.
       * @return This builder for chaining.
       */
      public Builder setUavSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uavSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机编号
       * </pre>
       *
       * <code>string uavSn = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearUavSn() {
        
        uavSn_ = getDefaultInstance().getUavSn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机编号
       * </pre>
       *
       * <code>string uavSn = 25;</code>
       * @param value The bytes for uavSn to set.
       * @return This builder for chaining.
       */
      public Builder setUavSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uavSn_ = value;
        onChanged();
        return this;
      }

      private Object uavModel_ = "";
      /**
       * <pre>
       *无人机型号
       * </pre>
       *
       * <code>string uavModel = 26;</code>
       * @return The uavModel.
       */
      public String getUavModel() {
        Object ref = uavModel_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uavModel_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *无人机型号
       * </pre>
       *
       * <code>string uavModel = 26;</code>
       * @return The bytes for uavModel.
       */
      public com.google.protobuf.ByteString
          getUavModelBytes() {
        Object ref = uavModel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uavModel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *无人机型号
       * </pre>
       *
       * <code>string uavModel = 26;</code>
       * @param value The uavModel to set.
       * @return This builder for chaining.
       */
      public Builder setUavModel(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uavModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机型号
       * </pre>
       *
       * <code>string uavModel = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearUavModel() {
        
        uavModel_ = getDefaultInstance().getUavModel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机型号
       * </pre>
       *
       * <code>string uavModel = 26;</code>
       * @param value The bytes for uavModel to set.
       * @return This builder for chaining.
       */
      public Builder setUavModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uavModel_ = value;
        onChanged();
        return this;
      }

      private float homeRange_ ;
      /**
       * <pre>
       *距降落点水平直线距离(单位:米)
       * </pre>
       *
       * <code>float homeRange = 27;</code>
       * @return The homeRange.
       */
      @Override
      public float getHomeRange() {
        return homeRange_;
      }
      /**
       * <pre>
       *距降落点水平直线距离(单位:米)
       * </pre>
       *
       * <code>float homeRange = 27;</code>
       * @param value The homeRange to set.
       * @return This builder for chaining.
       */
      public Builder setHomeRange(float value) {
        
        homeRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距降落点水平直线距离(单位:米)
       * </pre>
       *
       * <code>float homeRange = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearHomeRange() {
        
        homeRange_ = 0F;
        onChanged();
        return this;
      }

      private int flightMode_ ;
      /**
       * <pre>
       *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
       * </pre>
       *
       * <code>uint32 flightMode = 28;</code>
       * @return The flightMode.
       */
      @Override
      public int getFlightMode() {
        return flightMode_;
      }
      /**
       * <pre>
       *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
       * </pre>
       *
       * <code>uint32 flightMode = 28;</code>
       * @param value The flightMode to set.
       * @return This builder for chaining.
       */
      public Builder setFlightMode(int value) {
        
        flightMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
       * </pre>
       *
       * <code>uint32 flightMode = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightMode() {
        
        flightMode_ = 0;
        onChanged();
        return this;
      }

      private float targetDistance_ ;
      /**
       * <pre>
       *距目标点或最后一个航点的实际距离(单位:米) [适用于打点飞行或航线飞行]
       * </pre>
       *
       * <code>float targetDistance = 29;</code>
       * @return The targetDistance.
       */
      @Override
      public float getTargetDistance() {
        return targetDistance_;
      }
      /**
       * <pre>
       *距目标点或最后一个航点的实际距离(单位:米) [适用于打点飞行或航线飞行]
       * </pre>
       *
       * <code>float targetDistance = 29;</code>
       * @param value The targetDistance to set.
       * @return This builder for chaining.
       */
      public Builder setTargetDistance(float value) {
        
        targetDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距目标点或最后一个航点的实际距离(单位:米) [适用于打点飞行或航线飞行]
       * </pre>
       *
       * <code>float targetDistance = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetDistance() {
        
        targetDistance_ = 0F;
        onChanged();
        return this;
      }

      private int predictFlyTime_ ;
      /**
       * <pre>
       *距目标点或最后一个航点的预计剩余飞行时间(单位:秒)[适用于打点飞行或航线飞行]
       * </pre>
       *
       * <code>uint32 predictFlyTime = 30;</code>
       * @return The predictFlyTime.
       */
      @Override
      public int getPredictFlyTime() {
        return predictFlyTime_;
      }
      /**
       * <pre>
       *距目标点或最后一个航点的预计剩余飞行时间(单位:秒)[适用于打点飞行或航线飞行]
       * </pre>
       *
       * <code>uint32 predictFlyTime = 30;</code>
       * @param value The predictFlyTime to set.
       * @return This builder for chaining.
       */
      public Builder setPredictFlyTime(int value) {
        
        predictFlyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距目标点或最后一个航点的预计剩余飞行时间(单位:秒)[适用于打点飞行或航线飞行]
       * </pre>
       *
       * <code>uint32 predictFlyTime = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearPredictFlyTime() {
        
        predictFlyTime_ = 0;
        onChanged();
        return this;
      }

      private float ultrasonicMax_ ;
      /**
       * <pre>
       *本架次最大相对高度值
       * </pre>
       *
       * <code>float ultrasonicMax = 31;</code>
       * @return The ultrasonicMax.
       */
      @Override
      public float getUltrasonicMax() {
        return ultrasonicMax_;
      }
      /**
       * <pre>
       *本架次最大相对高度值
       * </pre>
       *
       * <code>float ultrasonicMax = 31;</code>
       * @param value The ultrasonicMax to set.
       * @return This builder for chaining.
       */
      public Builder setUltrasonicMax(float value) {
        
        ultrasonicMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *本架次最大相对高度值
       * </pre>
       *
       * <code>float ultrasonicMax = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearUltrasonicMax() {
        
        ultrasonicMax_ = 0F;
        onChanged();
        return this;
      }

      private float ultrasonicMin_ ;
      /**
       * <pre>
       *本架次最小相对高度值 
       * </pre>
       *
       * <code>float ultrasonicMin = 32;</code>
       * @return The ultrasonicMin.
       */
      @Override
      public float getUltrasonicMin() {
        return ultrasonicMin_;
      }
      /**
       * <pre>
       *本架次最小相对高度值 
       * </pre>
       *
       * <code>float ultrasonicMin = 32;</code>
       * @param value The ultrasonicMin to set.
       * @return This builder for chaining.
       */
      public Builder setUltrasonicMin(float value) {
        
        ultrasonicMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *本架次最小相对高度值 
       * </pre>
       *
       * <code>float ultrasonicMin = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearUltrasonicMin() {
        
        ultrasonicMin_ = 0F;
        onChanged();
        return this;
      }

      private float xVelocity_ ;
      /**
       * <pre>
       *飞行器x轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float xVelocity = 33;</code>
       * @return The xVelocity.
       */
      @Override
      public float getXVelocity() {
        return xVelocity_;
      }
      /**
       * <pre>
       *飞行器x轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float xVelocity = 33;</code>
       * @param value The xVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setXVelocity(float value) {
        
        xVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行器x轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float xVelocity = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearXVelocity() {
        
        xVelocity_ = 0F;
        onChanged();
        return this;
      }

      private float yVelocity_ ;
      /**
       * <pre>
       *飞行器y轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float yVelocity = 34;</code>
       * @return The yVelocity.
       */
      @Override
      public float getYVelocity() {
        return yVelocity_;
      }
      /**
       * <pre>
       *飞行器y轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float yVelocity = 34;</code>
       * @param value The yVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setYVelocity(float value) {
        
        yVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行器y轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float yVelocity = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearYVelocity() {
        
        yVelocity_ = 0F;
        onChanged();
        return this;
      }

      private float zVelocity_ ;
      /**
       * <pre>
       *飞行器z轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float zVelocity = 35;</code>
       * @return The zVelocity.
       */
      @Override
      public float getZVelocity() {
        return zVelocity_;
      }
      /**
       * <pre>
       *飞行器z轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float zVelocity = 35;</code>
       * @param value The zVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setZVelocity(float value) {
        
        zVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行器z轴速度(单位:米/秒)
       * </pre>
       *
       * <code>float zVelocity = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearZVelocity() {
        
        zVelocity_ = 0F;
        onChanged();
        return this;
      }

      private Object boxName_ = "";
      /**
       * <pre>
       *云盒名称
       * </pre>
       *
       * <code>string boxName = 36;</code>
       * @return The boxName.
       */
      public String getBoxName() {
        Object ref = boxName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          boxName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *云盒名称
       * </pre>
       *
       * <code>string boxName = 36;</code>
       * @return The bytes for boxName.
       */
      public com.google.protobuf.ByteString
          getBoxNameBytes() {
        Object ref = boxName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          boxName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *云盒名称
       * </pre>
       *
       * <code>string boxName = 36;</code>
       * @param value The boxName to set.
       * @return This builder for chaining.
       */
      public Builder setBoxName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boxName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒名称
       * </pre>
       *
       * <code>string boxName = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoxName() {
        
        boxName_ = getDefaultInstance().getBoxName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒名称
       * </pre>
       *
       * <code>string boxName = 36;</code>
       * @param value The bytes for boxName to set.
       * @return This builder for chaining.
       */
      public Builder setBoxNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boxName_ = value;
        onChanged();
        return this;
      }

      private int predictFlyTimes_ ;
      /**
       * <pre>
       *预计剩余飞行时间(单位:秒)
       * </pre>
       *
       * <code>uint32 predictFlyTimes = 37;</code>
       * @return The predictFlyTimes.
       */
      @Override
      public int getPredictFlyTimes() {
        return predictFlyTimes_;
      }
      /**
       * <pre>
       *预计剩余飞行时间(单位:秒)
       * </pre>
       *
       * <code>uint32 predictFlyTimes = 37;</code>
       * @param value The predictFlyTimes to set.
       * @return This builder for chaining.
       */
      public Builder setPredictFlyTimes(int value) {
        
        predictFlyTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *预计剩余飞行时间(单位:秒)
       * </pre>
       *
       * <code>uint32 predictFlyTimes = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearPredictFlyTimes() {
        
        predictFlyTimes_ = 0;
        onChanged();
        return this;
      }

      private int predictGohomeBattery_ ;
      /**
       * <pre>
       *预计返航所需最小电量百分比
       * </pre>
       *
       * <code>uint32 predictGohomeBattery = 38;</code>
       * @return The predictGohomeBattery.
       */
      @Override
      public int getPredictGohomeBattery() {
        return predictGohomeBattery_;
      }
      /**
       * <pre>
       *预计返航所需最小电量百分比
       * </pre>
       *
       * <code>uint32 predictGohomeBattery = 38;</code>
       * @param value The predictGohomeBattery to set.
       * @return This builder for chaining.
       */
      public Builder setPredictGohomeBattery(int value) {
        
        predictGohomeBattery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *预计返航所需最小电量百分比
       * </pre>
       *
       * <code>uint32 predictGohomeBattery = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearPredictGohomeBattery() {
        
        predictGohomeBattery_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TelemetryData)
    }

    // @@protoc_insertion_point(class_scope:TelemetryData)
    private static final TelemetryData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TelemetryData();
    }

    public static TelemetryData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TelemetryData>
        PARSER = new com.google.protobuf.AbstractParser<TelemetryData>() {
      @Override
      public TelemetryData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TelemetryData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TelemetryData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TelemetryData> getParserForType() {
      return PARSER;
    }

    @Override
    public TelemetryData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelemetryListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TelemetryList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    java.util.List<TelemetryData>
        getTelemetryListList();
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    TelemetryData getTelemetryList(int index);
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    int getTelemetryListCount();
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    java.util.List<? extends TelemetryDataOrBuilder>
        getTelemetryListOrBuilderList();
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    TelemetryDataOrBuilder getTelemetryListOrBuilder(
        int index);
  }
  /**
   * <pre>
   *飞行历史
   * </pre>
   *
   * Protobuf type {@code TelemetryList}
   */
  public static final class TelemetryList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TelemetryList)
      TelemetryListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TelemetryList.newBuilder() to construct.
    private TelemetryList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TelemetryList() {
      telemetryList_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TelemetryList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TelemetryList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                telemetryList_ = new java.util.ArrayList<TelemetryData>();
                mutable_bitField0_ |= 0x00000001;
              }
              telemetryList_.add(
                  input.readMessage(TelemetryData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          telemetryList_ = java.util.Collections.unmodifiableList(telemetryList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_TelemetryList_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_TelemetryList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TelemetryList.class, Builder.class);
    }

    public static final int TELEMETRYLIST_FIELD_NUMBER = 1;
    private java.util.List<TelemetryData> telemetryList_;
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    @Override
    public java.util.List<TelemetryData> getTelemetryListList() {
      return telemetryList_;
    }
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    @Override
    public java.util.List<? extends TelemetryDataOrBuilder>
        getTelemetryListOrBuilderList() {
      return telemetryList_;
    }
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    @Override
    public int getTelemetryListCount() {
      return telemetryList_.size();
    }
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    @Override
    public TelemetryData getTelemetryList(int index) {
      return telemetryList_.get(index);
    }
    /**
     * <code>repeated .TelemetryData telemetryList = 1;</code>
     */
    @Override
    public TelemetryDataOrBuilder getTelemetryListOrBuilder(
        int index) {
      return telemetryList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < telemetryList_.size(); i++) {
        output.writeMessage(1, telemetryList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < telemetryList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, telemetryList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TelemetryList)) {
        return super.equals(obj);
      }
      TelemetryList other = (TelemetryList) obj;

      if (!getTelemetryListList()
          .equals(other.getTelemetryListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTelemetryListCount() > 0) {
        hash = (37 * hash) + TELEMETRYLIST_FIELD_NUMBER;
        hash = (53 * hash) + getTelemetryListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TelemetryList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TelemetryList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TelemetryList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TelemetryList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TelemetryList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TelemetryList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TelemetryList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TelemetryList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TelemetryList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TelemetryList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TelemetryList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TelemetryList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TelemetryList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *飞行历史
     * </pre>
     *
     * Protobuf type {@code TelemetryList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TelemetryList)
        TelemetryListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_TelemetryList_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_TelemetryList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TelemetryList.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.TelemetryList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTelemetryListFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (telemetryListBuilder_ == null) {
          telemetryList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          telemetryListBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_TelemetryList_descriptor;
      }

      @Override
      public TelemetryList getDefaultInstanceForType() {
        return TelemetryList.getDefaultInstance();
      }

      @Override
      public TelemetryList build() {
        TelemetryList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TelemetryList buildPartial() {
        TelemetryList result = new TelemetryList(this);
        int from_bitField0_ = bitField0_;
        if (telemetryListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            telemetryList_ = java.util.Collections.unmodifiableList(telemetryList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.telemetryList_ = telemetryList_;
        } else {
          result.telemetryList_ = telemetryListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TelemetryList) {
          return mergeFrom((TelemetryList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TelemetryList other) {
        if (other == TelemetryList.getDefaultInstance()) return this;
        if (telemetryListBuilder_ == null) {
          if (!other.telemetryList_.isEmpty()) {
            if (telemetryList_.isEmpty()) {
              telemetryList_ = other.telemetryList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTelemetryListIsMutable();
              telemetryList_.addAll(other.telemetryList_);
            }
            onChanged();
          }
        } else {
          if (!other.telemetryList_.isEmpty()) {
            if (telemetryListBuilder_.isEmpty()) {
              telemetryListBuilder_.dispose();
              telemetryListBuilder_ = null;
              telemetryList_ = other.telemetryList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              telemetryListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTelemetryListFieldBuilder() : null;
            } else {
              telemetryListBuilder_.addAllMessages(other.telemetryList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TelemetryList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TelemetryList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<TelemetryData> telemetryList_ =
        java.util.Collections.emptyList();
      private void ensureTelemetryListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          telemetryList_ = new java.util.ArrayList<TelemetryData>(telemetryList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TelemetryData, TelemetryData.Builder, TelemetryDataOrBuilder> telemetryListBuilder_;

      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public java.util.List<TelemetryData> getTelemetryListList() {
        if (telemetryListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(telemetryList_);
        } else {
          return telemetryListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public int getTelemetryListCount() {
        if (telemetryListBuilder_ == null) {
          return telemetryList_.size();
        } else {
          return telemetryListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public TelemetryData getTelemetryList(int index) {
        if (telemetryListBuilder_ == null) {
          return telemetryList_.get(index);
        } else {
          return telemetryListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder setTelemetryList(
          int index, TelemetryData value) {
        if (telemetryListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryListIsMutable();
          telemetryList_.set(index, value);
          onChanged();
        } else {
          telemetryListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder setTelemetryList(
          int index, TelemetryData.Builder builderForValue) {
        if (telemetryListBuilder_ == null) {
          ensureTelemetryListIsMutable();
          telemetryList_.set(index, builderForValue.build());
          onChanged();
        } else {
          telemetryListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder addTelemetryList(TelemetryData value) {
        if (telemetryListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryListIsMutable();
          telemetryList_.add(value);
          onChanged();
        } else {
          telemetryListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder addTelemetryList(
          int index, TelemetryData value) {
        if (telemetryListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryListIsMutable();
          telemetryList_.add(index, value);
          onChanged();
        } else {
          telemetryListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder addTelemetryList(
          TelemetryData.Builder builderForValue) {
        if (telemetryListBuilder_ == null) {
          ensureTelemetryListIsMutable();
          telemetryList_.add(builderForValue.build());
          onChanged();
        } else {
          telemetryListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder addTelemetryList(
          int index, TelemetryData.Builder builderForValue) {
        if (telemetryListBuilder_ == null) {
          ensureTelemetryListIsMutable();
          telemetryList_.add(index, builderForValue.build());
          onChanged();
        } else {
          telemetryListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder addAllTelemetryList(
          Iterable<? extends TelemetryData> values) {
        if (telemetryListBuilder_ == null) {
          ensureTelemetryListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, telemetryList_);
          onChanged();
        } else {
          telemetryListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder clearTelemetryList() {
        if (telemetryListBuilder_ == null) {
          telemetryList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          telemetryListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public Builder removeTelemetryList(int index) {
        if (telemetryListBuilder_ == null) {
          ensureTelemetryListIsMutable();
          telemetryList_.remove(index);
          onChanged();
        } else {
          telemetryListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public TelemetryData.Builder getTelemetryListBuilder(
          int index) {
        return getTelemetryListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public TelemetryDataOrBuilder getTelemetryListOrBuilder(
          int index) {
        if (telemetryListBuilder_ == null) {
          return telemetryList_.get(index);  } else {
          return telemetryListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public java.util.List<? extends TelemetryDataOrBuilder>
           getTelemetryListOrBuilderList() {
        if (telemetryListBuilder_ != null) {
          return telemetryListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(telemetryList_);
        }
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public TelemetryData.Builder addTelemetryListBuilder() {
        return getTelemetryListFieldBuilder().addBuilder(
            TelemetryData.getDefaultInstance());
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public TelemetryData.Builder addTelemetryListBuilder(
          int index) {
        return getTelemetryListFieldBuilder().addBuilder(
            index, TelemetryData.getDefaultInstance());
      }
      /**
       * <code>repeated .TelemetryData telemetryList = 1;</code>
       */
      public java.util.List<TelemetryData.Builder>
           getTelemetryListBuilderList() {
        return getTelemetryListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TelemetryData, TelemetryData.Builder, TelemetryDataOrBuilder>
          getTelemetryListFieldBuilder() {
        if (telemetryListBuilder_ == null) {
          telemetryListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TelemetryData, TelemetryData.Builder, TelemetryDataOrBuilder>(
                  telemetryList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          telemetryList_ = null;
        }
        return telemetryListBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TelemetryList)
    }

    // @@protoc_insertion_point(class_scope:TelemetryList)
    private static final TelemetryList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TelemetryList();
    }

    public static TelemetryList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TelemetryList>
        PARSER = new com.google.protobuf.AbstractParser<TelemetryList>() {
      @Override
      public TelemetryList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TelemetryList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TelemetryList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TelemetryList> getParserForType() {
      return PARSER;
    }

    @Override
    public TelemetryList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SignalInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *入网模式:NR5G-SA,NR5G-NSA，LTE
     * </pre>
     *
     * <code>string mode = 1;</code>
     * @return The mode.
     */
    String getMode();
    /**
     * <pre>
     *入网模式:NR5G-SA,NR5G-NSA，LTE
     * </pre>
     *
     * <code>string mode = 1;</code>
     * @return The bytes for mode.
     */
    com.google.protobuf.ByteString
        getModeBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mcc = 2;</code>
     * @return The mcc.
     */
    String getMcc();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mcc = 2;</code>
     * @return The bytes for mcc.
     */
    com.google.protobuf.ByteString
        getMccBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mnc = 3;</code>
     * @return The mnc.
     */
    String getMnc();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mnc = 3;</code>
     * @return The bytes for mnc.
     */
    com.google.protobuf.ByteString
        getMncBytes();

    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string cellid = 4;</code>
     * @return The cellid.
     */
    String getCellid();
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string cellid = 4;</code>
     * @return The bytes for cellid.
     */
    com.google.protobuf.ByteString
        getCellidBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string pcid = 5;</code>
     * @return The pcid.
     */
    String getPcid();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string pcid = 5;</code>
     * @return The bytes for pcid.
     */
    com.google.protobuf.ByteString
        getPcidBytes();

    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tac = 6;</code>
     * @return The tac.
     */
    String getTac();
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tac = 6;</code>
     * @return The bytes for tac.
     */
    com.google.protobuf.ByteString
        getTacBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string arfcn = 7;</code>
     * @return The arfcn.
     */
    String getArfcn();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string arfcn = 7;</code>
     * @return The bytes for arfcn.
     */
    com.google.protobuf.ByteString
        getArfcnBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string band = 8;</code>
     * @return The band.
     */
    String getBand();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string band = 8;</code>
     * @return The bytes for band.
     */
    com.google.protobuf.ByteString
        getBandBytes();

    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string nr_dl_bandwidth = 9;</code>
     * @return The nrDlBandwidth.
     */
    String getNrDlBandwidth();
    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string nr_dl_bandwidth = 9;</code>
     * @return The bytes for nrDlBandwidth.
     */
    com.google.protobuf.ByteString
        getNrDlBandwidthBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrp = 10;</code>
     * @return The rsrp.
     */
    String getRsrp();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrp = 10;</code>
     * @return The bytes for rsrp.
     */
    com.google.protobuf.ByteString
        getRsrpBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrq = 11;</code>
     * @return The rsrq.
     */
    String getRsrq();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrq = 11;</code>
     * @return The bytes for rsrq.
     */
    com.google.protobuf.ByteString
        getRsrqBytes();

    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string sinr = 12;</code>
     * @return The sinr.
     */
    String getSinr();
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string sinr = 12;</code>
     * @return The bytes for sinr.
     */
    com.google.protobuf.ByteString
        getSinrBytes();

    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tx_power = 13;</code>
     * @return The txPower.
     */
    String getTxPower();
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tx_power = 13;</code>
     * @return The bytes for txPower.
     */
    com.google.protobuf.ByteString
        getTxPowerBytes();

    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string srxlev = 14;</code>
     * @return The srxlev.
     */
    String getSrxlev();
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string srxlev = 14;</code>
     * @return The bytes for srxlev.
     */
    com.google.protobuf.ByteString
        getSrxlevBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string cqi = 15;</code>
     * @return The cqi.
     */
    String getCqi();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string cqi = 15;</code>
     * @return The bytes for cqi.
     */
    com.google.protobuf.ByteString
        getCqiBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string earfcn = 16;</code>
     * @return The earfcn.
     */
    String getEarfcn();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string earfcn = 16;</code>
     * @return The bytes for earfcn.
     */
    com.google.protobuf.ByteString
        getEarfcnBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string freq_band_ind = 17;</code>
     * @return The freqBandInd.
     */
    String getFreqBandInd();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string freq_band_ind = 17;</code>
     * @return The bytes for freqBandInd.
     */
    com.google.protobuf.ByteString
        getFreqBandIndBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string ul_bandwidth = 18;</code>
     * @return The ulBandwidth.
     */
    String getUlBandwidth();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string ul_bandwidth = 18;</code>
     * @return The bytes for ulBandwidth.
     */
    com.google.protobuf.ByteString
        getUlBandwidthBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string dl_bandwidth = 19;</code>
     * @return The dlBandwidth.
     */
    String getDlBandwidth();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string dl_bandwidth = 19;</code>
     * @return The bytes for dlBandwidth.
     */
    com.google.protobuf.ByteString
        getDlBandwidthBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string is_tdd = 20;</code>
     * @return The isTdd.
     */
    String getIsTdd();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string is_tdd = 20;</code>
     * @return The bytes for isTdd.
     */
    com.google.protobuf.ByteString
        getIsTddBytes();

    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string rssi = 21;</code>
     * @return The rssi.
     */
    String getRssi();
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string rssi = 21;</code>
     * @return The bytes for rssi.
     */
    com.google.protobuf.ByteString
        getRssiBytes();

    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string duplex_mode = 22;</code>
     * @return The duplexMode.
     */
    String getDuplexMode();
    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string duplex_mode = 22;</code>
     * @return The bytes for duplexMode.
     */
    com.google.protobuf.ByteString
        getDuplexModeBytes();

    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 23;</code>
     * @return The lng.
     */
    double getLng();

    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 24;</code>
     * @return The lat.
     */
    double getLat();

    /**
     * <pre>
     *高度(单位:米)
     * </pre>
     *
     * <code>float height = 25;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <pre>
     *时间戳(单位:秒)
     * </pre>
     *
     * <code>uint32 timestamp = 26;</code>
     * @return The timestamp.
     */
    int getTimestamp();

    /**
     * <pre>
     *1=线缆故障，2=OSDK未激活，3=正常，4=云盒固件更新
     * </pre>
     *
     * <code>uint32 boxstate = 27;</code>
     * @return The boxstate.
     */
    int getBoxstate();

    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>string isp = 28;</code>
     * @return The isp.
     */
    String getIsp();
    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>string isp = 28;</code>
     * @return The bytes for isp.
     */
    com.google.protobuf.ByteString
        getIspBytes();

    /**
     * <pre>
     *模组芯片温度(单位:摄氏度)
     * </pre>
     *
     * <code>int32 tempMax = 29;</code>
     * @return The tempMax.
     */
    int getTempMax();

    /**
     * <pre>
     *prx路径的rsrp值
     * </pre>
     *
     * <code>string prx_rsrp = 30;</code>
     * @return The prxRsrp.
     */
    String getPrxRsrp();
    /**
     * <pre>
     *prx路径的rsrp值
     * </pre>
     *
     * <code>string prx_rsrp = 30;</code>
     * @return The bytes for prxRsrp.
     */
    com.google.protobuf.ByteString
        getPrxRsrpBytes();

    /**
     * <pre>
     *drx路径的rsrp值
     * </pre>
     *
     * <code>string drx_rsrp = 31;</code>
     * @return The drxRsrp.
     */
    String getDrxRsrp();
    /**
     * <pre>
     *drx路径的rsrp值
     * </pre>
     *
     * <code>string drx_rsrp = 31;</code>
     * @return The bytes for drxRsrp.
     */
    com.google.protobuf.ByteString
        getDrxRsrpBytes();

    /**
     * <pre>
     *rx2路径的rsrp值
     * </pre>
     *
     * <code>string rx2_rsrp = 32;</code>
     * @return The rx2Rsrp.
     */
    String getRx2Rsrp();
    /**
     * <pre>
     *rx2路径的rsrp值
     * </pre>
     *
     * <code>string rx2_rsrp = 32;</code>
     * @return The bytes for rx2Rsrp.
     */
    com.google.protobuf.ByteString
        getRx2RsrpBytes();

    /**
     * <pre>
     *rx3路径的rsrp值
     * </pre>
     *
     * <code>string rx3_rsrp = 33;</code>
     * @return The rx3Rsrp.
     */
    String getRx3Rsrp();
    /**
     * <pre>
     *rx3路径的rsrp值
     * </pre>
     *
     * <code>string rx3_rsrp = 33;</code>
     * @return The bytes for rx3Rsrp.
     */
    com.google.protobuf.ByteString
        getRx3RsrpBytes();

    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string box_sn = 34;</code>
     * @return The boxSn.
     */
    String getBoxSn();
    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string box_sn = 34;</code>
     * @return The bytes for boxSn.
     */
    com.google.protobuf.ByteString
        getBoxSnBytes();

    /**
     * <pre>
     *当前使用的SIM卡在卡槽中的位置：1或2
     * </pre>
     *
     * <code>uint32 sim_use_seat = 35;</code>
     * @return The simUseSeat.
     */
    int getSimUseSeat();

    /**
     * <pre>
     *云盒入网方式 1-sim卡 2-网线【自组网或有线网】
     * </pre>
     *
     * <code>uint32 networkMode = 36;</code>
     * @return The networkMode.
     */
    int getNetworkMode();
  }
  /**
   * <pre>
   *信道质量
   * </pre>
   *
   * Protobuf type {@code SignalInfo}
   */
  public static final class SignalInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SignalInfo)
      SignalInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalInfo.newBuilder() to construct.
    private SignalInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalInfo() {
      mode_ = "";
      mcc_ = "";
      mnc_ = "";
      cellid_ = "";
      pcid_ = "";
      tac_ = "";
      arfcn_ = "";
      band_ = "";
      nrDlBandwidth_ = "";
      rsrp_ = "";
      rsrq_ = "";
      sinr_ = "";
      txPower_ = "";
      srxlev_ = "";
      cqi_ = "";
      earfcn_ = "";
      freqBandInd_ = "";
      ulBandwidth_ = "";
      dlBandwidth_ = "";
      isTdd_ = "";
      rssi_ = "";
      duplexMode_ = "";
      isp_ = "";
      prxRsrp_ = "";
      drxRsrp_ = "";
      rx2Rsrp_ = "";
      rx3Rsrp_ = "";
      boxSn_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              mode_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              mcc_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              mnc_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              cellid_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              pcid_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              tac_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              arfcn_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              band_ = s;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              nrDlBandwidth_ = s;
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              rsrp_ = s;
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              rsrq_ = s;
              break;
            }
            case 98: {
              String s = input.readStringRequireUtf8();

              sinr_ = s;
              break;
            }
            case 106: {
              String s = input.readStringRequireUtf8();

              txPower_ = s;
              break;
            }
            case 114: {
              String s = input.readStringRequireUtf8();

              srxlev_ = s;
              break;
            }
            case 122: {
              String s = input.readStringRequireUtf8();

              cqi_ = s;
              break;
            }
            case 130: {
              String s = input.readStringRequireUtf8();

              earfcn_ = s;
              break;
            }
            case 138: {
              String s = input.readStringRequireUtf8();

              freqBandInd_ = s;
              break;
            }
            case 146: {
              String s = input.readStringRequireUtf8();

              ulBandwidth_ = s;
              break;
            }
            case 154: {
              String s = input.readStringRequireUtf8();

              dlBandwidth_ = s;
              break;
            }
            case 162: {
              String s = input.readStringRequireUtf8();

              isTdd_ = s;
              break;
            }
            case 170: {
              String s = input.readStringRequireUtf8();

              rssi_ = s;
              break;
            }
            case 178: {
              String s = input.readStringRequireUtf8();

              duplexMode_ = s;
              break;
            }
            case 185: {

              lng_ = input.readDouble();
              break;
            }
            case 193: {

              lat_ = input.readDouble();
              break;
            }
            case 205: {

              height_ = input.readFloat();
              break;
            }
            case 208: {

              timestamp_ = input.readUInt32();
              break;
            }
            case 216: {

              boxstate_ = input.readUInt32();
              break;
            }
            case 226: {
              String s = input.readStringRequireUtf8();

              isp_ = s;
              break;
            }
            case 232: {

              tempMax_ = input.readInt32();
              break;
            }
            case 242: {
              String s = input.readStringRequireUtf8();

              prxRsrp_ = s;
              break;
            }
            case 250: {
              String s = input.readStringRequireUtf8();

              drxRsrp_ = s;
              break;
            }
            case 258: {
              String s = input.readStringRequireUtf8();

              rx2Rsrp_ = s;
              break;
            }
            case 266: {
              String s = input.readStringRequireUtf8();

              rx3Rsrp_ = s;
              break;
            }
            case 274: {
              String s = input.readStringRequireUtf8();

              boxSn_ = s;
              break;
            }
            case 280: {

              simUseSeat_ = input.readUInt32();
              break;
            }
            case 288: {

              networkMode_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_SignalInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_SignalInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SignalInfo.class, Builder.class);
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private volatile Object mode_;
    /**
     * <pre>
     *入网模式:NR5G-SA,NR5G-NSA，LTE
     * </pre>
     *
     * <code>string mode = 1;</code>
     * @return The mode.
     */
    @Override
    public String getMode() {
      Object ref = mode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        mode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *入网模式:NR5G-SA,NR5G-NSA，LTE
     * </pre>
     *
     * <code>string mode = 1;</code>
     * @return The bytes for mode.
     */
    @Override
    public com.google.protobuf.ByteString
        getModeBytes() {
      Object ref = mode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MCC_FIELD_NUMBER = 2;
    private volatile Object mcc_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mcc = 2;</code>
     * @return The mcc.
     */
    @Override
    public String getMcc() {
      Object ref = mcc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        mcc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mcc = 2;</code>
     * @return The bytes for mcc.
     */
    @Override
    public com.google.protobuf.ByteString
        getMccBytes() {
      Object ref = mcc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mcc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MNC_FIELD_NUMBER = 3;
    private volatile Object mnc_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mnc = 3;</code>
     * @return The mnc.
     */
    @Override
    public String getMnc() {
      Object ref = mnc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        mnc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string mnc = 3;</code>
     * @return The bytes for mnc.
     */
    @Override
    public com.google.protobuf.ByteString
        getMncBytes() {
      Object ref = mnc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mnc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CELLID_FIELD_NUMBER = 4;
    private volatile Object cellid_;
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string cellid = 4;</code>
     * @return The cellid.
     */
    @Override
    public String getCellid() {
      Object ref = cellid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        cellid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string cellid = 4;</code>
     * @return The bytes for cellid.
     */
    @Override
    public com.google.protobuf.ByteString
        getCellidBytes() {
      Object ref = cellid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        cellid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PCID_FIELD_NUMBER = 5;
    private volatile Object pcid_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string pcid = 5;</code>
     * @return The pcid.
     */
    @Override
    public String getPcid() {
      Object ref = pcid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        pcid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string pcid = 5;</code>
     * @return The bytes for pcid.
     */
    @Override
    public com.google.protobuf.ByteString
        getPcidBytes() {
      Object ref = pcid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        pcid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TAC_FIELD_NUMBER = 6;
    private volatile Object tac_;
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tac = 6;</code>
     * @return The tac.
     */
    @Override
    public String getTac() {
      Object ref = tac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tac_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tac = 6;</code>
     * @return The bytes for tac.
     */
    @Override
    public com.google.protobuf.ByteString
        getTacBytes() {
      Object ref = tac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARFCN_FIELD_NUMBER = 7;
    private volatile Object arfcn_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string arfcn = 7;</code>
     * @return The arfcn.
     */
    @Override
    public String getArfcn() {
      Object ref = arfcn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        arfcn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string arfcn = 7;</code>
     * @return The bytes for arfcn.
     */
    @Override
    public com.google.protobuf.ByteString
        getArfcnBytes() {
      Object ref = arfcn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        arfcn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BAND_FIELD_NUMBER = 8;
    private volatile Object band_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string band = 8;</code>
     * @return The band.
     */
    @Override
    public String getBand() {
      Object ref = band_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        band_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA
     * </pre>
     *
     * <code>string band = 8;</code>
     * @return The bytes for band.
     */
    @Override
    public com.google.protobuf.ByteString
        getBandBytes() {
      Object ref = band_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        band_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NR_DL_BANDWIDTH_FIELD_NUMBER = 9;
    private volatile Object nrDlBandwidth_;
    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string nr_dl_bandwidth = 9;</code>
     * @return The nrDlBandwidth.
     */
    @Override
    public String getNrDlBandwidth() {
      Object ref = nrDlBandwidth_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        nrDlBandwidth_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string nr_dl_bandwidth = 9;</code>
     * @return The bytes for nrDlBandwidth.
     */
    @Override
    public com.google.protobuf.ByteString
        getNrDlBandwidthBytes() {
      Object ref = nrDlBandwidth_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        nrDlBandwidth_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RSRP_FIELD_NUMBER = 10;
    private volatile Object rsrp_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrp = 10;</code>
     * @return The rsrp.
     */
    @Override
    public String getRsrp() {
      Object ref = rsrp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rsrp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrp = 10;</code>
     * @return The bytes for rsrp.
     */
    @Override
    public com.google.protobuf.ByteString
        getRsrpBytes() {
      Object ref = rsrp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rsrp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RSRQ_FIELD_NUMBER = 11;
    private volatile Object rsrq_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrq = 11;</code>
     * @return The rsrq.
     */
    @Override
    public String getRsrq() {
      Object ref = rsrq_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rsrq_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string rsrq = 11;</code>
     * @return The bytes for rsrq.
     */
    @Override
    public com.google.protobuf.ByteString
        getRsrqBytes() {
      Object ref = rsrq_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rsrq_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SINR_FIELD_NUMBER = 12;
    private volatile Object sinr_;
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string sinr = 12;</code>
     * @return The sinr.
     */
    @Override
    public String getSinr() {
      Object ref = sinr_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sinr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,NR5G-NSA,LTE
     * </pre>
     *
     * <code>string sinr = 12;</code>
     * @return The bytes for sinr.
     */
    @Override
    public com.google.protobuf.ByteString
        getSinrBytes() {
      Object ref = sinr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sinr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TX_POWER_FIELD_NUMBER = 13;
    private volatile Object txPower_;
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tx_power = 13;</code>
     * @return The txPower.
     */
    @Override
    public String getTxPower() {
      Object ref = txPower_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        txPower_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string tx_power = 13;</code>
     * @return The bytes for txPower.
     */
    @Override
    public com.google.protobuf.ByteString
        getTxPowerBytes() {
      Object ref = txPower_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        txPower_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRXLEV_FIELD_NUMBER = 14;
    private volatile Object srxlev_;
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string srxlev = 14;</code>
     * @return The srxlev.
     */
    @Override
    public String getSrxlev() {
      Object ref = srxlev_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        srxlev_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA,LTE
     * </pre>
     *
     * <code>string srxlev = 14;</code>
     * @return The bytes for srxlev.
     */
    @Override
    public com.google.protobuf.ByteString
        getSrxlevBytes() {
      Object ref = srxlev_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        srxlev_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CQI_FIELD_NUMBER = 15;
    private volatile Object cqi_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string cqi = 15;</code>
     * @return The cqi.
     */
    @Override
    public String getCqi() {
      Object ref = cqi_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        cqi_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string cqi = 15;</code>
     * @return The bytes for cqi.
     */
    @Override
    public com.google.protobuf.ByteString
        getCqiBytes() {
      Object ref = cqi_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        cqi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EARFCN_FIELD_NUMBER = 16;
    private volatile Object earfcn_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string earfcn = 16;</code>
     * @return The earfcn.
     */
    @Override
    public String getEarfcn() {
      Object ref = earfcn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        earfcn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string earfcn = 16;</code>
     * @return The bytes for earfcn.
     */
    @Override
    public com.google.protobuf.ByteString
        getEarfcnBytes() {
      Object ref = earfcn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        earfcn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREQ_BAND_IND_FIELD_NUMBER = 17;
    private volatile Object freqBandInd_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string freq_band_ind = 17;</code>
     * @return The freqBandInd.
     */
    @Override
    public String getFreqBandInd() {
      Object ref = freqBandInd_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        freqBandInd_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string freq_band_ind = 17;</code>
     * @return The bytes for freqBandInd.
     */
    @Override
    public com.google.protobuf.ByteString
        getFreqBandIndBytes() {
      Object ref = freqBandInd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        freqBandInd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UL_BANDWIDTH_FIELD_NUMBER = 18;
    private volatile Object ulBandwidth_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string ul_bandwidth = 18;</code>
     * @return The ulBandwidth.
     */
    @Override
    public String getUlBandwidth() {
      Object ref = ulBandwidth_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ulBandwidth_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string ul_bandwidth = 18;</code>
     * @return The bytes for ulBandwidth.
     */
    @Override
    public com.google.protobuf.ByteString
        getUlBandwidthBytes() {
      Object ref = ulBandwidth_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ulBandwidth_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DL_BANDWIDTH_FIELD_NUMBER = 19;
    private volatile Object dlBandwidth_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string dl_bandwidth = 19;</code>
     * @return The dlBandwidth.
     */
    @Override
    public String getDlBandwidth() {
      Object ref = dlBandwidth_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dlBandwidth_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string dl_bandwidth = 19;</code>
     * @return The bytes for dlBandwidth.
     */
    @Override
    public com.google.protobuf.ByteString
        getDlBandwidthBytes() {
      Object ref = dlBandwidth_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dlBandwidth_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_TDD_FIELD_NUMBER = 20;
    private volatile Object isTdd_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string is_tdd = 20;</code>
     * @return The isTdd.
     */
    @Override
    public String getIsTdd() {
      Object ref = isTdd_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        isTdd_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string is_tdd = 20;</code>
     * @return The bytes for isTdd.
     */
    @Override
    public com.google.protobuf.ByteString
        getIsTddBytes() {
      Object ref = isTdd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        isTdd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RSSI_FIELD_NUMBER = 21;
    private volatile Object rssi_;
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string rssi = 21;</code>
     * @return The rssi.
     */
    @Override
    public String getRssi() {
      Object ref = rssi_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rssi_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *LTE
     * </pre>
     *
     * <code>string rssi = 21;</code>
     * @return The bytes for rssi.
     */
    @Override
    public com.google.protobuf.ByteString
        getRssiBytes() {
      Object ref = rssi_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rssi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DUPLEX_MODE_FIELD_NUMBER = 22;
    private volatile Object duplexMode_;
    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string duplex_mode = 22;</code>
     * @return The duplexMode.
     */
    @Override
    public String getDuplexMode() {
      Object ref = duplexMode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        duplexMode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *NR5G-SA
     * </pre>
     *
     * <code>string duplex_mode = 22;</code>
     * @return The bytes for duplexMode.
     */
    @Override
    public com.google.protobuf.ByteString
        getDuplexModeBytes() {
      Object ref = duplexMode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        duplexMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LNG_FIELD_NUMBER = 23;
    private double lng_;
    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 23;</code>
     * @return The lng.
     */
    @Override
    public double getLng() {
      return lng_;
    }

    public static final int LAT_FIELD_NUMBER = 24;
    private double lat_;
    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 24;</code>
     * @return The lat.
     */
    @Override
    public double getLat() {
      return lat_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 25;
    private float height_;
    /**
     * <pre>
     *高度(单位:米)
     * </pre>
     *
     * <code>float height = 25;</code>
     * @return The height.
     */
    @Override
    public float getHeight() {
      return height_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 26;
    private int timestamp_;
    /**
     * <pre>
     *时间戳(单位:秒)
     * </pre>
     *
     * <code>uint32 timestamp = 26;</code>
     * @return The timestamp.
     */
    @Override
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int BOXSTATE_FIELD_NUMBER = 27;
    private int boxstate_;
    /**
     * <pre>
     *1=线缆故障，2=OSDK未激活，3=正常，4=云盒固件更新
     * </pre>
     *
     * <code>uint32 boxstate = 27;</code>
     * @return The boxstate.
     */
    @Override
    public int getBoxstate() {
      return boxstate_;
    }

    public static final int ISP_FIELD_NUMBER = 28;
    private volatile Object isp_;
    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>string isp = 28;</code>
     * @return The isp.
     */
    @Override
    public String getIsp() {
      Object ref = isp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        isp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>string isp = 28;</code>
     * @return The bytes for isp.
     */
    @Override
    public com.google.protobuf.ByteString
        getIspBytes() {
      Object ref = isp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        isp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEMPMAX_FIELD_NUMBER = 29;
    private int tempMax_;
    /**
     * <pre>
     *模组芯片温度(单位:摄氏度)
     * </pre>
     *
     * <code>int32 tempMax = 29;</code>
     * @return The tempMax.
     */
    @Override
    public int getTempMax() {
      return tempMax_;
    }

    public static final int PRX_RSRP_FIELD_NUMBER = 30;
    private volatile Object prxRsrp_;
    /**
     * <pre>
     *prx路径的rsrp值
     * </pre>
     *
     * <code>string prx_rsrp = 30;</code>
     * @return The prxRsrp.
     */
    @Override
    public String getPrxRsrp() {
      Object ref = prxRsrp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        prxRsrp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *prx路径的rsrp值
     * </pre>
     *
     * <code>string prx_rsrp = 30;</code>
     * @return The bytes for prxRsrp.
     */
    @Override
    public com.google.protobuf.ByteString
        getPrxRsrpBytes() {
      Object ref = prxRsrp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        prxRsrp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DRX_RSRP_FIELD_NUMBER = 31;
    private volatile Object drxRsrp_;
    /**
     * <pre>
     *drx路径的rsrp值
     * </pre>
     *
     * <code>string drx_rsrp = 31;</code>
     * @return The drxRsrp.
     */
    @Override
    public String getDrxRsrp() {
      Object ref = drxRsrp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        drxRsrp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *drx路径的rsrp值
     * </pre>
     *
     * <code>string drx_rsrp = 31;</code>
     * @return The bytes for drxRsrp.
     */
    @Override
    public com.google.protobuf.ByteString
        getDrxRsrpBytes() {
      Object ref = drxRsrp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        drxRsrp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RX2_RSRP_FIELD_NUMBER = 32;
    private volatile Object rx2Rsrp_;
    /**
     * <pre>
     *rx2路径的rsrp值
     * </pre>
     *
     * <code>string rx2_rsrp = 32;</code>
     * @return The rx2Rsrp.
     */
    @Override
    public String getRx2Rsrp() {
      Object ref = rx2Rsrp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rx2Rsrp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *rx2路径的rsrp值
     * </pre>
     *
     * <code>string rx2_rsrp = 32;</code>
     * @return The bytes for rx2Rsrp.
     */
    @Override
    public com.google.protobuf.ByteString
        getRx2RsrpBytes() {
      Object ref = rx2Rsrp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rx2Rsrp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RX3_RSRP_FIELD_NUMBER = 33;
    private volatile Object rx3Rsrp_;
    /**
     * <pre>
     *rx3路径的rsrp值
     * </pre>
     *
     * <code>string rx3_rsrp = 33;</code>
     * @return The rx3Rsrp.
     */
    @Override
    public String getRx3Rsrp() {
      Object ref = rx3Rsrp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rx3Rsrp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *rx3路径的rsrp值
     * </pre>
     *
     * <code>string rx3_rsrp = 33;</code>
     * @return The bytes for rx3Rsrp.
     */
    @Override
    public com.google.protobuf.ByteString
        getRx3RsrpBytes() {
      Object ref = rx3Rsrp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rx3Rsrp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOX_SN_FIELD_NUMBER = 34;
    private volatile Object boxSn_;
    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string box_sn = 34;</code>
     * @return The boxSn.
     */
    @Override
    public String getBoxSn() {
      Object ref = boxSn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        boxSn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string box_sn = 34;</code>
     * @return The bytes for boxSn.
     */
    @Override
    public com.google.protobuf.ByteString
        getBoxSnBytes() {
      Object ref = boxSn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        boxSn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIM_USE_SEAT_FIELD_NUMBER = 35;
    private int simUseSeat_;
    /**
     * <pre>
     *当前使用的SIM卡在卡槽中的位置：1或2
     * </pre>
     *
     * <code>uint32 sim_use_seat = 35;</code>
     * @return The simUseSeat.
     */
    @Override
    public int getSimUseSeat() {
      return simUseSeat_;
    }

    public static final int NETWORKMODE_FIELD_NUMBER = 36;
    private int networkMode_;
    /**
     * <pre>
     *云盒入网方式 1-sim卡 2-网线【自组网或有线网】
     * </pre>
     *
     * <code>uint32 networkMode = 36;</code>
     * @return The networkMode.
     */
    @Override
    public int getNetworkMode() {
      return networkMode_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getModeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mode_);
      }
      if (!getMccBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mcc_);
      }
      if (!getMncBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, mnc_);
      }
      if (!getCellidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, cellid_);
      }
      if (!getPcidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, pcid_);
      }
      if (!getTacBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, tac_);
      }
      if (!getArfcnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, arfcn_);
      }
      if (!getBandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, band_);
      }
      if (!getNrDlBandwidthBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, nrDlBandwidth_);
      }
      if (!getRsrpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, rsrp_);
      }
      if (!getRsrqBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, rsrq_);
      }
      if (!getSinrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, sinr_);
      }
      if (!getTxPowerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, txPower_);
      }
      if (!getSrxlevBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, srxlev_);
      }
      if (!getCqiBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, cqi_);
      }
      if (!getEarfcnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, earfcn_);
      }
      if (!getFreqBandIndBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, freqBandInd_);
      }
      if (!getUlBandwidthBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, ulBandwidth_);
      }
      if (!getDlBandwidthBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, dlBandwidth_);
      }
      if (!getIsTddBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, isTdd_);
      }
      if (!getRssiBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, rssi_);
      }
      if (!getDuplexModeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, duplexMode_);
      }
      if (lng_ != 0D) {
        output.writeDouble(23, lng_);
      }
      if (lat_ != 0D) {
        output.writeDouble(24, lat_);
      }
      if (height_ != 0F) {
        output.writeFloat(25, height_);
      }
      if (timestamp_ != 0) {
        output.writeUInt32(26, timestamp_);
      }
      if (boxstate_ != 0) {
        output.writeUInt32(27, boxstate_);
      }
      if (!getIspBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 28, isp_);
      }
      if (tempMax_ != 0) {
        output.writeInt32(29, tempMax_);
      }
      if (!getPrxRsrpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 30, prxRsrp_);
      }
      if (!getDrxRsrpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 31, drxRsrp_);
      }
      if (!getRx2RsrpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 32, rx2Rsrp_);
      }
      if (!getRx3RsrpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 33, rx3Rsrp_);
      }
      if (!getBoxSnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 34, boxSn_);
      }
      if (simUseSeat_ != 0) {
        output.writeUInt32(35, simUseSeat_);
      }
      if (networkMode_ != 0) {
        output.writeUInt32(36, networkMode_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getModeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mode_);
      }
      if (!getMccBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mcc_);
      }
      if (!getMncBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, mnc_);
      }
      if (!getCellidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, cellid_);
      }
      if (!getPcidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, pcid_);
      }
      if (!getTacBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, tac_);
      }
      if (!getArfcnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, arfcn_);
      }
      if (!getBandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, band_);
      }
      if (!getNrDlBandwidthBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, nrDlBandwidth_);
      }
      if (!getRsrpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, rsrp_);
      }
      if (!getRsrqBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, rsrq_);
      }
      if (!getSinrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, sinr_);
      }
      if (!getTxPowerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, txPower_);
      }
      if (!getSrxlevBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, srxlev_);
      }
      if (!getCqiBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, cqi_);
      }
      if (!getEarfcnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, earfcn_);
      }
      if (!getFreqBandIndBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, freqBandInd_);
      }
      if (!getUlBandwidthBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, ulBandwidth_);
      }
      if (!getDlBandwidthBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, dlBandwidth_);
      }
      if (!getIsTddBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, isTdd_);
      }
      if (!getRssiBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, rssi_);
      }
      if (!getDuplexModeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, duplexMode_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, lng_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, lat_);
      }
      if (height_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, height_);
      }
      if (timestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, timestamp_);
      }
      if (boxstate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, boxstate_);
      }
      if (!getIspBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(28, isp_);
      }
      if (tempMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, tempMax_);
      }
      if (!getPrxRsrpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(30, prxRsrp_);
      }
      if (!getDrxRsrpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(31, drxRsrp_);
      }
      if (!getRx2RsrpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(32, rx2Rsrp_);
      }
      if (!getRx3RsrpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(33, rx3Rsrp_);
      }
      if (!getBoxSnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(34, boxSn_);
      }
      if (simUseSeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, simUseSeat_);
      }
      if (networkMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(36, networkMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SignalInfo)) {
        return super.equals(obj);
      }
      SignalInfo other = (SignalInfo) obj;

      if (!getMode()
          .equals(other.getMode())) return false;
      if (!getMcc()
          .equals(other.getMcc())) return false;
      if (!getMnc()
          .equals(other.getMnc())) return false;
      if (!getCellid()
          .equals(other.getCellid())) return false;
      if (!getPcid()
          .equals(other.getPcid())) return false;
      if (!getTac()
          .equals(other.getTac())) return false;
      if (!getArfcn()
          .equals(other.getArfcn())) return false;
      if (!getBand()
          .equals(other.getBand())) return false;
      if (!getNrDlBandwidth()
          .equals(other.getNrDlBandwidth())) return false;
      if (!getRsrp()
          .equals(other.getRsrp())) return false;
      if (!getRsrq()
          .equals(other.getRsrq())) return false;
      if (!getSinr()
          .equals(other.getSinr())) return false;
      if (!getTxPower()
          .equals(other.getTxPower())) return false;
      if (!getSrxlev()
          .equals(other.getSrxlev())) return false;
      if (!getCqi()
          .equals(other.getCqi())) return false;
      if (!getEarfcn()
          .equals(other.getEarfcn())) return false;
      if (!getFreqBandInd()
          .equals(other.getFreqBandInd())) return false;
      if (!getUlBandwidth()
          .equals(other.getUlBandwidth())) return false;
      if (!getDlBandwidth()
          .equals(other.getDlBandwidth())) return false;
      if (!getIsTdd()
          .equals(other.getIsTdd())) return false;
      if (!getRssi()
          .equals(other.getRssi())) return false;
      if (!getDuplexMode()
          .equals(other.getDuplexMode())) return false;
      if (Double.doubleToLongBits(getLng())
          != Double.doubleToLongBits(
              other.getLng())) return false;
      if (Double.doubleToLongBits(getLat())
          != Double.doubleToLongBits(
              other.getLat())) return false;
      if (Float.floatToIntBits(getHeight())
          != Float.floatToIntBits(
              other.getHeight())) return false;
      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (getBoxstate()
          != other.getBoxstate()) return false;
      if (!getIsp()
          .equals(other.getIsp())) return false;
      if (getTempMax()
          != other.getTempMax()) return false;
      if (!getPrxRsrp()
          .equals(other.getPrxRsrp())) return false;
      if (!getDrxRsrp()
          .equals(other.getDrxRsrp())) return false;
      if (!getRx2Rsrp()
          .equals(other.getRx2Rsrp())) return false;
      if (!getRx3Rsrp()
          .equals(other.getRx3Rsrp())) return false;
      if (!getBoxSn()
          .equals(other.getBoxSn())) return false;
      if (getSimUseSeat()
          != other.getSimUseSeat()) return false;
      if (getNetworkMode()
          != other.getNetworkMode()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode().hashCode();
      hash = (37 * hash) + MCC_FIELD_NUMBER;
      hash = (53 * hash) + getMcc().hashCode();
      hash = (37 * hash) + MNC_FIELD_NUMBER;
      hash = (53 * hash) + getMnc().hashCode();
      hash = (37 * hash) + CELLID_FIELD_NUMBER;
      hash = (53 * hash) + getCellid().hashCode();
      hash = (37 * hash) + PCID_FIELD_NUMBER;
      hash = (53 * hash) + getPcid().hashCode();
      hash = (37 * hash) + TAC_FIELD_NUMBER;
      hash = (53 * hash) + getTac().hashCode();
      hash = (37 * hash) + ARFCN_FIELD_NUMBER;
      hash = (53 * hash) + getArfcn().hashCode();
      hash = (37 * hash) + BAND_FIELD_NUMBER;
      hash = (53 * hash) + getBand().hashCode();
      hash = (37 * hash) + NR_DL_BANDWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getNrDlBandwidth().hashCode();
      hash = (37 * hash) + RSRP_FIELD_NUMBER;
      hash = (53 * hash) + getRsrp().hashCode();
      hash = (37 * hash) + RSRQ_FIELD_NUMBER;
      hash = (53 * hash) + getRsrq().hashCode();
      hash = (37 * hash) + SINR_FIELD_NUMBER;
      hash = (53 * hash) + getSinr().hashCode();
      hash = (37 * hash) + TX_POWER_FIELD_NUMBER;
      hash = (53 * hash) + getTxPower().hashCode();
      hash = (37 * hash) + SRXLEV_FIELD_NUMBER;
      hash = (53 * hash) + getSrxlev().hashCode();
      hash = (37 * hash) + CQI_FIELD_NUMBER;
      hash = (53 * hash) + getCqi().hashCode();
      hash = (37 * hash) + EARFCN_FIELD_NUMBER;
      hash = (53 * hash) + getEarfcn().hashCode();
      hash = (37 * hash) + FREQ_BAND_IND_FIELD_NUMBER;
      hash = (53 * hash) + getFreqBandInd().hashCode();
      hash = (37 * hash) + UL_BANDWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getUlBandwidth().hashCode();
      hash = (37 * hash) + DL_BANDWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getDlBandwidth().hashCode();
      hash = (37 * hash) + IS_TDD_FIELD_NUMBER;
      hash = (53 * hash) + getIsTdd().hashCode();
      hash = (37 * hash) + RSSI_FIELD_NUMBER;
      hash = (53 * hash) + getRssi().hashCode();
      hash = (37 * hash) + DUPLEX_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getDuplexMode().hashCode();
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp();
      hash = (37 * hash) + BOXSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getBoxstate();
      hash = (37 * hash) + ISP_FIELD_NUMBER;
      hash = (53 * hash) + getIsp().hashCode();
      hash = (37 * hash) + TEMPMAX_FIELD_NUMBER;
      hash = (53 * hash) + getTempMax();
      hash = (37 * hash) + PRX_RSRP_FIELD_NUMBER;
      hash = (53 * hash) + getPrxRsrp().hashCode();
      hash = (37 * hash) + DRX_RSRP_FIELD_NUMBER;
      hash = (53 * hash) + getDrxRsrp().hashCode();
      hash = (37 * hash) + RX2_RSRP_FIELD_NUMBER;
      hash = (53 * hash) + getRx2Rsrp().hashCode();
      hash = (37 * hash) + RX3_RSRP_FIELD_NUMBER;
      hash = (53 * hash) + getRx3Rsrp().hashCode();
      hash = (37 * hash) + BOX_SN_FIELD_NUMBER;
      hash = (53 * hash) + getBoxSn().hashCode();
      hash = (37 * hash) + SIM_USE_SEAT_FIELD_NUMBER;
      hash = (53 * hash) + getSimUseSeat();
      hash = (37 * hash) + NETWORKMODE_FIELD_NUMBER;
      hash = (53 * hash) + getNetworkMode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SignalInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignalInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignalInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignalInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignalInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignalInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignalInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SignalInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SignalInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SignalInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SignalInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SignalInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SignalInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信道质量
     * </pre>
     *
     * Protobuf type {@code SignalInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SignalInfo)
        SignalInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_SignalInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_SignalInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SignalInfo.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.SignalInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        mode_ = "";

        mcc_ = "";

        mnc_ = "";

        cellid_ = "";

        pcid_ = "";

        tac_ = "";

        arfcn_ = "";

        band_ = "";

        nrDlBandwidth_ = "";

        rsrp_ = "";

        rsrq_ = "";

        sinr_ = "";

        txPower_ = "";

        srxlev_ = "";

        cqi_ = "";

        earfcn_ = "";

        freqBandInd_ = "";

        ulBandwidth_ = "";

        dlBandwidth_ = "";

        isTdd_ = "";

        rssi_ = "";

        duplexMode_ = "";

        lng_ = 0D;

        lat_ = 0D;

        height_ = 0F;

        timestamp_ = 0;

        boxstate_ = 0;

        isp_ = "";

        tempMax_ = 0;

        prxRsrp_ = "";

        drxRsrp_ = "";

        rx2Rsrp_ = "";

        rx3Rsrp_ = "";

        boxSn_ = "";

        simUseSeat_ = 0;

        networkMode_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_SignalInfo_descriptor;
      }

      @Override
      public SignalInfo getDefaultInstanceForType() {
        return SignalInfo.getDefaultInstance();
      }

      @Override
      public SignalInfo build() {
        SignalInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SignalInfo buildPartial() {
        SignalInfo result = new SignalInfo(this);
        result.mode_ = mode_;
        result.mcc_ = mcc_;
        result.mnc_ = mnc_;
        result.cellid_ = cellid_;
        result.pcid_ = pcid_;
        result.tac_ = tac_;
        result.arfcn_ = arfcn_;
        result.band_ = band_;
        result.nrDlBandwidth_ = nrDlBandwidth_;
        result.rsrp_ = rsrp_;
        result.rsrq_ = rsrq_;
        result.sinr_ = sinr_;
        result.txPower_ = txPower_;
        result.srxlev_ = srxlev_;
        result.cqi_ = cqi_;
        result.earfcn_ = earfcn_;
        result.freqBandInd_ = freqBandInd_;
        result.ulBandwidth_ = ulBandwidth_;
        result.dlBandwidth_ = dlBandwidth_;
        result.isTdd_ = isTdd_;
        result.rssi_ = rssi_;
        result.duplexMode_ = duplexMode_;
        result.lng_ = lng_;
        result.lat_ = lat_;
        result.height_ = height_;
        result.timestamp_ = timestamp_;
        result.boxstate_ = boxstate_;
        result.isp_ = isp_;
        result.tempMax_ = tempMax_;
        result.prxRsrp_ = prxRsrp_;
        result.drxRsrp_ = drxRsrp_;
        result.rx2Rsrp_ = rx2Rsrp_;
        result.rx3Rsrp_ = rx3Rsrp_;
        result.boxSn_ = boxSn_;
        result.simUseSeat_ = simUseSeat_;
        result.networkMode_ = networkMode_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SignalInfo) {
          return mergeFrom((SignalInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SignalInfo other) {
        if (other == SignalInfo.getDefaultInstance()) return this;
        if (!other.getMode().isEmpty()) {
          mode_ = other.mode_;
          onChanged();
        }
        if (!other.getMcc().isEmpty()) {
          mcc_ = other.mcc_;
          onChanged();
        }
        if (!other.getMnc().isEmpty()) {
          mnc_ = other.mnc_;
          onChanged();
        }
        if (!other.getCellid().isEmpty()) {
          cellid_ = other.cellid_;
          onChanged();
        }
        if (!other.getPcid().isEmpty()) {
          pcid_ = other.pcid_;
          onChanged();
        }
        if (!other.getTac().isEmpty()) {
          tac_ = other.tac_;
          onChanged();
        }
        if (!other.getArfcn().isEmpty()) {
          arfcn_ = other.arfcn_;
          onChanged();
        }
        if (!other.getBand().isEmpty()) {
          band_ = other.band_;
          onChanged();
        }
        if (!other.getNrDlBandwidth().isEmpty()) {
          nrDlBandwidth_ = other.nrDlBandwidth_;
          onChanged();
        }
        if (!other.getRsrp().isEmpty()) {
          rsrp_ = other.rsrp_;
          onChanged();
        }
        if (!other.getRsrq().isEmpty()) {
          rsrq_ = other.rsrq_;
          onChanged();
        }
        if (!other.getSinr().isEmpty()) {
          sinr_ = other.sinr_;
          onChanged();
        }
        if (!other.getTxPower().isEmpty()) {
          txPower_ = other.txPower_;
          onChanged();
        }
        if (!other.getSrxlev().isEmpty()) {
          srxlev_ = other.srxlev_;
          onChanged();
        }
        if (!other.getCqi().isEmpty()) {
          cqi_ = other.cqi_;
          onChanged();
        }
        if (!other.getEarfcn().isEmpty()) {
          earfcn_ = other.earfcn_;
          onChanged();
        }
        if (!other.getFreqBandInd().isEmpty()) {
          freqBandInd_ = other.freqBandInd_;
          onChanged();
        }
        if (!other.getUlBandwidth().isEmpty()) {
          ulBandwidth_ = other.ulBandwidth_;
          onChanged();
        }
        if (!other.getDlBandwidth().isEmpty()) {
          dlBandwidth_ = other.dlBandwidth_;
          onChanged();
        }
        if (!other.getIsTdd().isEmpty()) {
          isTdd_ = other.isTdd_;
          onChanged();
        }
        if (!other.getRssi().isEmpty()) {
          rssi_ = other.rssi_;
          onChanged();
        }
        if (!other.getDuplexMode().isEmpty()) {
          duplexMode_ = other.duplexMode_;
          onChanged();
        }
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getTimestamp() != 0) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getBoxstate() != 0) {
          setBoxstate(other.getBoxstate());
        }
        if (!other.getIsp().isEmpty()) {
          isp_ = other.isp_;
          onChanged();
        }
        if (other.getTempMax() != 0) {
          setTempMax(other.getTempMax());
        }
        if (!other.getPrxRsrp().isEmpty()) {
          prxRsrp_ = other.prxRsrp_;
          onChanged();
        }
        if (!other.getDrxRsrp().isEmpty()) {
          drxRsrp_ = other.drxRsrp_;
          onChanged();
        }
        if (!other.getRx2Rsrp().isEmpty()) {
          rx2Rsrp_ = other.rx2Rsrp_;
          onChanged();
        }
        if (!other.getRx3Rsrp().isEmpty()) {
          rx3Rsrp_ = other.rx3Rsrp_;
          onChanged();
        }
        if (!other.getBoxSn().isEmpty()) {
          boxSn_ = other.boxSn_;
          onChanged();
        }
        if (other.getSimUseSeat() != 0) {
          setSimUseSeat(other.getSimUseSeat());
        }
        if (other.getNetworkMode() != 0) {
          setNetworkMode(other.getNetworkMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SignalInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SignalInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object mode_ = "";
      /**
       * <pre>
       *入网模式:NR5G-SA,NR5G-NSA，LTE
       * </pre>
       *
       * <code>string mode = 1;</code>
       * @return The mode.
       */
      public String getMode() {
        Object ref = mode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          mode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *入网模式:NR5G-SA,NR5G-NSA，LTE
       * </pre>
       *
       * <code>string mode = 1;</code>
       * @return The bytes for mode.
       */
      public com.google.protobuf.ByteString
          getModeBytes() {
        Object ref = mode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *入网模式:NR5G-SA,NR5G-NSA，LTE
       * </pre>
       *
       * <code>string mode = 1;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *入网模式:NR5G-SA,NR5G-NSA，LTE
       * </pre>
       *
       * <code>string mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = getDefaultInstance().getMode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *入网模式:NR5G-SA,NR5G-NSA，LTE
       * </pre>
       *
       * <code>string mode = 1;</code>
       * @param value The bytes for mode to set.
       * @return This builder for chaining.
       */
      public Builder setModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mode_ = value;
        onChanged();
        return this;
      }

      private Object mcc_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mcc = 2;</code>
       * @return The mcc.
       */
      public String getMcc() {
        Object ref = mcc_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          mcc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mcc = 2;</code>
       * @return The bytes for mcc.
       */
      public com.google.protobuf.ByteString
          getMccBytes() {
        Object ref = mcc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mcc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mcc = 2;</code>
       * @param value The mcc to set.
       * @return This builder for chaining.
       */
      public Builder setMcc(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mcc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mcc = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMcc() {
        
        mcc_ = getDefaultInstance().getMcc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mcc = 2;</code>
       * @param value The bytes for mcc to set.
       * @return This builder for chaining.
       */
      public Builder setMccBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mcc_ = value;
        onChanged();
        return this;
      }

      private Object mnc_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mnc = 3;</code>
       * @return The mnc.
       */
      public String getMnc() {
        Object ref = mnc_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          mnc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mnc = 3;</code>
       * @return The bytes for mnc.
       */
      public com.google.protobuf.ByteString
          getMncBytes() {
        Object ref = mnc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mnc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mnc = 3;</code>
       * @param value The mnc to set.
       * @return This builder for chaining.
       */
      public Builder setMnc(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mnc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mnc = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMnc() {
        
        mnc_ = getDefaultInstance().getMnc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string mnc = 3;</code>
       * @param value The bytes for mnc to set.
       * @return This builder for chaining.
       */
      public Builder setMncBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mnc_ = value;
        onChanged();
        return this;
      }

      private Object cellid_ = "";
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string cellid = 4;</code>
       * @return The cellid.
       */
      public String getCellid() {
        Object ref = cellid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          cellid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string cellid = 4;</code>
       * @return The bytes for cellid.
       */
      public com.google.protobuf.ByteString
          getCellidBytes() {
        Object ref = cellid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          cellid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string cellid = 4;</code>
       * @param value The cellid to set.
       * @return This builder for chaining.
       */
      public Builder setCellid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cellid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string cellid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCellid() {
        
        cellid_ = getDefaultInstance().getCellid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string cellid = 4;</code>
       * @param value The bytes for cellid to set.
       * @return This builder for chaining.
       */
      public Builder setCellidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cellid_ = value;
        onChanged();
        return this;
      }

      private Object pcid_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string pcid = 5;</code>
       * @return The pcid.
       */
      public String getPcid() {
        Object ref = pcid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          pcid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string pcid = 5;</code>
       * @return The bytes for pcid.
       */
      public com.google.protobuf.ByteString
          getPcidBytes() {
        Object ref = pcid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          pcid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string pcid = 5;</code>
       * @param value The pcid to set.
       * @return This builder for chaining.
       */
      public Builder setPcid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pcid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string pcid = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPcid() {
        
        pcid_ = getDefaultInstance().getPcid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string pcid = 5;</code>
       * @param value The bytes for pcid to set.
       * @return This builder for chaining.
       */
      public Builder setPcidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pcid_ = value;
        onChanged();
        return this;
      }

      private Object tac_ = "";
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tac = 6;</code>
       * @return The tac.
       */
      public String getTac() {
        Object ref = tac_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          tac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tac = 6;</code>
       * @return The bytes for tac.
       */
      public com.google.protobuf.ByteString
          getTacBytes() {
        Object ref = tac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          tac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tac = 6;</code>
       * @param value The tac to set.
       * @return This builder for chaining.
       */
      public Builder setTac(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tac_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tac = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTac() {
        
        tac_ = getDefaultInstance().getTac();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tac = 6;</code>
       * @param value The bytes for tac to set.
       * @return This builder for chaining.
       */
      public Builder setTacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tac_ = value;
        onChanged();
        return this;
      }

      private Object arfcn_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string arfcn = 7;</code>
       * @return The arfcn.
       */
      public String getArfcn() {
        Object ref = arfcn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          arfcn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string arfcn = 7;</code>
       * @return The bytes for arfcn.
       */
      public com.google.protobuf.ByteString
          getArfcnBytes() {
        Object ref = arfcn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          arfcn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string arfcn = 7;</code>
       * @param value The arfcn to set.
       * @return This builder for chaining.
       */
      public Builder setArfcn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        arfcn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string arfcn = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearArfcn() {
        
        arfcn_ = getDefaultInstance().getArfcn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string arfcn = 7;</code>
       * @param value The bytes for arfcn to set.
       * @return This builder for chaining.
       */
      public Builder setArfcnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        arfcn_ = value;
        onChanged();
        return this;
      }

      private Object band_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string band = 8;</code>
       * @return The band.
       */
      public String getBand() {
        Object ref = band_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          band_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string band = 8;</code>
       * @return The bytes for band.
       */
      public com.google.protobuf.ByteString
          getBandBytes() {
        Object ref = band_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          band_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string band = 8;</code>
       * @param value The band to set.
       * @return This builder for chaining.
       */
      public Builder setBand(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        band_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string band = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBand() {
        
        band_ = getDefaultInstance().getBand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA
       * </pre>
       *
       * <code>string band = 8;</code>
       * @param value The bytes for band to set.
       * @return This builder for chaining.
       */
      public Builder setBandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        band_ = value;
        onChanged();
        return this;
      }

      private Object nrDlBandwidth_ = "";
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string nr_dl_bandwidth = 9;</code>
       * @return The nrDlBandwidth.
       */
      public String getNrDlBandwidth() {
        Object ref = nrDlBandwidth_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          nrDlBandwidth_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string nr_dl_bandwidth = 9;</code>
       * @return The bytes for nrDlBandwidth.
       */
      public com.google.protobuf.ByteString
          getNrDlBandwidthBytes() {
        Object ref = nrDlBandwidth_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          nrDlBandwidth_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string nr_dl_bandwidth = 9;</code>
       * @param value The nrDlBandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setNrDlBandwidth(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nrDlBandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string nr_dl_bandwidth = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearNrDlBandwidth() {
        
        nrDlBandwidth_ = getDefaultInstance().getNrDlBandwidth();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string nr_dl_bandwidth = 9;</code>
       * @param value The bytes for nrDlBandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setNrDlBandwidthBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nrDlBandwidth_ = value;
        onChanged();
        return this;
      }

      private Object rsrp_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrp = 10;</code>
       * @return The rsrp.
       */
      public String getRsrp() {
        Object ref = rsrp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rsrp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrp = 10;</code>
       * @return The bytes for rsrp.
       */
      public com.google.protobuf.ByteString
          getRsrpBytes() {
        Object ref = rsrp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rsrp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrp = 10;</code>
       * @param value The rsrp to set.
       * @return This builder for chaining.
       */
      public Builder setRsrp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rsrp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrp = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearRsrp() {
        
        rsrp_ = getDefaultInstance().getRsrp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrp = 10;</code>
       * @param value The bytes for rsrp to set.
       * @return This builder for chaining.
       */
      public Builder setRsrpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rsrp_ = value;
        onChanged();
        return this;
      }

      private Object rsrq_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrq = 11;</code>
       * @return The rsrq.
       */
      public String getRsrq() {
        Object ref = rsrq_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rsrq_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrq = 11;</code>
       * @return The bytes for rsrq.
       */
      public com.google.protobuf.ByteString
          getRsrqBytes() {
        Object ref = rsrq_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rsrq_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrq = 11;</code>
       * @param value The rsrq to set.
       * @return This builder for chaining.
       */
      public Builder setRsrq(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rsrq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrq = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRsrq() {
        
        rsrq_ = getDefaultInstance().getRsrq();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string rsrq = 11;</code>
       * @param value The bytes for rsrq to set.
       * @return This builder for chaining.
       */
      public Builder setRsrqBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rsrq_ = value;
        onChanged();
        return this;
      }

      private Object sinr_ = "";
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string sinr = 12;</code>
       * @return The sinr.
       */
      public String getSinr() {
        Object ref = sinr_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sinr_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string sinr = 12;</code>
       * @return The bytes for sinr.
       */
      public com.google.protobuf.ByteString
          getSinrBytes() {
        Object ref = sinr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sinr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string sinr = 12;</code>
       * @param value The sinr to set.
       * @return This builder for chaining.
       */
      public Builder setSinr(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sinr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string sinr = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSinr() {
        
        sinr_ = getDefaultInstance().getSinr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,NR5G-NSA,LTE
       * </pre>
       *
       * <code>string sinr = 12;</code>
       * @param value The bytes for sinr to set.
       * @return This builder for chaining.
       */
      public Builder setSinrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sinr_ = value;
        onChanged();
        return this;
      }

      private Object txPower_ = "";
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tx_power = 13;</code>
       * @return The txPower.
       */
      public String getTxPower() {
        Object ref = txPower_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          txPower_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tx_power = 13;</code>
       * @return The bytes for txPower.
       */
      public com.google.protobuf.ByteString
          getTxPowerBytes() {
        Object ref = txPower_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          txPower_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tx_power = 13;</code>
       * @param value The txPower to set.
       * @return This builder for chaining.
       */
      public Builder setTxPower(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        txPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tx_power = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxPower() {
        
        txPower_ = getDefaultInstance().getTxPower();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string tx_power = 13;</code>
       * @param value The bytes for txPower to set.
       * @return This builder for chaining.
       */
      public Builder setTxPowerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        txPower_ = value;
        onChanged();
        return this;
      }

      private Object srxlev_ = "";
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string srxlev = 14;</code>
       * @return The srxlev.
       */
      public String getSrxlev() {
        Object ref = srxlev_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          srxlev_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string srxlev = 14;</code>
       * @return The bytes for srxlev.
       */
      public com.google.protobuf.ByteString
          getSrxlevBytes() {
        Object ref = srxlev_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          srxlev_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string srxlev = 14;</code>
       * @param value The srxlev to set.
       * @return This builder for chaining.
       */
      public Builder setSrxlev(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srxlev_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string srxlev = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrxlev() {
        
        srxlev_ = getDefaultInstance().getSrxlev();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA,LTE
       * </pre>
       *
       * <code>string srxlev = 14;</code>
       * @param value The bytes for srxlev to set.
       * @return This builder for chaining.
       */
      public Builder setSrxlevBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srxlev_ = value;
        onChanged();
        return this;
      }

      private Object cqi_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string cqi = 15;</code>
       * @return The cqi.
       */
      public String getCqi() {
        Object ref = cqi_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          cqi_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string cqi = 15;</code>
       * @return The bytes for cqi.
       */
      public com.google.protobuf.ByteString
          getCqiBytes() {
        Object ref = cqi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          cqi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string cqi = 15;</code>
       * @param value The cqi to set.
       * @return This builder for chaining.
       */
      public Builder setCqi(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cqi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string cqi = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearCqi() {
        
        cqi_ = getDefaultInstance().getCqi();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string cqi = 15;</code>
       * @param value The bytes for cqi to set.
       * @return This builder for chaining.
       */
      public Builder setCqiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cqi_ = value;
        onChanged();
        return this;
      }

      private Object earfcn_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string earfcn = 16;</code>
       * @return The earfcn.
       */
      public String getEarfcn() {
        Object ref = earfcn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          earfcn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string earfcn = 16;</code>
       * @return The bytes for earfcn.
       */
      public com.google.protobuf.ByteString
          getEarfcnBytes() {
        Object ref = earfcn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          earfcn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string earfcn = 16;</code>
       * @param value The earfcn to set.
       * @return This builder for chaining.
       */
      public Builder setEarfcn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        earfcn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string earfcn = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearEarfcn() {
        
        earfcn_ = getDefaultInstance().getEarfcn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string earfcn = 16;</code>
       * @param value The bytes for earfcn to set.
       * @return This builder for chaining.
       */
      public Builder setEarfcnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        earfcn_ = value;
        onChanged();
        return this;
      }

      private Object freqBandInd_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string freq_band_ind = 17;</code>
       * @return The freqBandInd.
       */
      public String getFreqBandInd() {
        Object ref = freqBandInd_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          freqBandInd_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string freq_band_ind = 17;</code>
       * @return The bytes for freqBandInd.
       */
      public com.google.protobuf.ByteString
          getFreqBandIndBytes() {
        Object ref = freqBandInd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          freqBandInd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string freq_band_ind = 17;</code>
       * @param value The freqBandInd to set.
       * @return This builder for chaining.
       */
      public Builder setFreqBandInd(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        freqBandInd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string freq_band_ind = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreqBandInd() {
        
        freqBandInd_ = getDefaultInstance().getFreqBandInd();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string freq_band_ind = 17;</code>
       * @param value The bytes for freqBandInd to set.
       * @return This builder for chaining.
       */
      public Builder setFreqBandIndBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        freqBandInd_ = value;
        onChanged();
        return this;
      }

      private Object ulBandwidth_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string ul_bandwidth = 18;</code>
       * @return The ulBandwidth.
       */
      public String getUlBandwidth() {
        Object ref = ulBandwidth_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          ulBandwidth_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string ul_bandwidth = 18;</code>
       * @return The bytes for ulBandwidth.
       */
      public com.google.protobuf.ByteString
          getUlBandwidthBytes() {
        Object ref = ulBandwidth_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ulBandwidth_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string ul_bandwidth = 18;</code>
       * @param value The ulBandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setUlBandwidth(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ulBandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string ul_bandwidth = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlBandwidth() {
        
        ulBandwidth_ = getDefaultInstance().getUlBandwidth();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string ul_bandwidth = 18;</code>
       * @param value The bytes for ulBandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setUlBandwidthBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ulBandwidth_ = value;
        onChanged();
        return this;
      }

      private Object dlBandwidth_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string dl_bandwidth = 19;</code>
       * @return The dlBandwidth.
       */
      public String getDlBandwidth() {
        Object ref = dlBandwidth_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dlBandwidth_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string dl_bandwidth = 19;</code>
       * @return The bytes for dlBandwidth.
       */
      public com.google.protobuf.ByteString
          getDlBandwidthBytes() {
        Object ref = dlBandwidth_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dlBandwidth_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string dl_bandwidth = 19;</code>
       * @param value The dlBandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setDlBandwidth(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dlBandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string dl_bandwidth = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearDlBandwidth() {
        
        dlBandwidth_ = getDefaultInstance().getDlBandwidth();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string dl_bandwidth = 19;</code>
       * @param value The bytes for dlBandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setDlBandwidthBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dlBandwidth_ = value;
        onChanged();
        return this;
      }

      private Object isTdd_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string is_tdd = 20;</code>
       * @return The isTdd.
       */
      public String getIsTdd() {
        Object ref = isTdd_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          isTdd_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string is_tdd = 20;</code>
       * @return The bytes for isTdd.
       */
      public com.google.protobuf.ByteString
          getIsTddBytes() {
        Object ref = isTdd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          isTdd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string is_tdd = 20;</code>
       * @param value The isTdd to set.
       * @return This builder for chaining.
       */
      public Builder setIsTdd(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        isTdd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string is_tdd = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsTdd() {
        
        isTdd_ = getDefaultInstance().getIsTdd();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string is_tdd = 20;</code>
       * @param value The bytes for isTdd to set.
       * @return This builder for chaining.
       */
      public Builder setIsTddBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        isTdd_ = value;
        onChanged();
        return this;
      }

      private Object rssi_ = "";
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string rssi = 21;</code>
       * @return The rssi.
       */
      public String getRssi() {
        Object ref = rssi_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rssi_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string rssi = 21;</code>
       * @return The bytes for rssi.
       */
      public com.google.protobuf.ByteString
          getRssiBytes() {
        Object ref = rssi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rssi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string rssi = 21;</code>
       * @param value The rssi to set.
       * @return This builder for chaining.
       */
      public Builder setRssi(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string rssi = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearRssi() {
        
        rssi_ = getDefaultInstance().getRssi();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LTE
       * </pre>
       *
       * <code>string rssi = 21;</code>
       * @param value The bytes for rssi to set.
       * @return This builder for chaining.
       */
      public Builder setRssiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rssi_ = value;
        onChanged();
        return this;
      }

      private Object duplexMode_ = "";
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string duplex_mode = 22;</code>
       * @return The duplexMode.
       */
      public String getDuplexMode() {
        Object ref = duplexMode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          duplexMode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string duplex_mode = 22;</code>
       * @return The bytes for duplexMode.
       */
      public com.google.protobuf.ByteString
          getDuplexModeBytes() {
        Object ref = duplexMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          duplexMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string duplex_mode = 22;</code>
       * @param value The duplexMode to set.
       * @return This builder for chaining.
       */
      public Builder setDuplexMode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        duplexMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string duplex_mode = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuplexMode() {
        
        duplexMode_ = getDefaultInstance().getDuplexMode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *NR5G-SA
       * </pre>
       *
       * <code>string duplex_mode = 22;</code>
       * @param value The bytes for duplexMode to set.
       * @return This builder for chaining.
       */
      public Builder setDuplexModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        duplexMode_ = value;
        onChanged();
        return this;
      }

      private double lng_ ;
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 23;</code>
       * @return The lng.
       */
      @Override
      public double getLng() {
        return lng_;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 23;</code>
       * @param value The lng to set.
       * @return This builder for chaining.
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 24;</code>
       * @return The lat.
       */
      @Override
      public double getLat() {
        return lat_;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 24;</code>
       * @param value The lat to set.
       * @return This builder for chaining.
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <pre>
       *高度(单位:米)
       * </pre>
       *
       * <code>float height = 25;</code>
       * @return The height.
       */
      @Override
      public float getHeight() {
        return height_;
      }
      /**
       * <pre>
       *高度(单位:米)
       * </pre>
       *
       * <code>float height = 25;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高度(单位:米)
       * </pre>
       *
       * <code>float height = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <pre>
       *时间戳(单位:秒)
       * </pre>
       *
       * <code>uint32 timestamp = 26;</code>
       * @return The timestamp.
       */
      @Override
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳(单位:秒)
       * </pre>
       *
       * <code>uint32 timestamp = 26;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(int value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳(单位:秒)
       * </pre>
       *
       * <code>uint32 timestamp = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int boxstate_ ;
      /**
       * <pre>
       *1=线缆故障，2=OSDK未激活，3=正常，4=云盒固件更新
       * </pre>
       *
       * <code>uint32 boxstate = 27;</code>
       * @return The boxstate.
       */
      @Override
      public int getBoxstate() {
        return boxstate_;
      }
      /**
       * <pre>
       *1=线缆故障，2=OSDK未激活，3=正常，4=云盒固件更新
       * </pre>
       *
       * <code>uint32 boxstate = 27;</code>
       * @param value The boxstate to set.
       * @return This builder for chaining.
       */
      public Builder setBoxstate(int value) {
        
        boxstate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *1=线缆故障，2=OSDK未激活，3=正常，4=云盒固件更新
       * </pre>
       *
       * <code>uint32 boxstate = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoxstate() {
        
        boxstate_ = 0;
        onChanged();
        return this;
      }

      private Object isp_ = "";
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>string isp = 28;</code>
       * @return The isp.
       */
      public String getIsp() {
        Object ref = isp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          isp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>string isp = 28;</code>
       * @return The bytes for isp.
       */
      public com.google.protobuf.ByteString
          getIspBytes() {
        Object ref = isp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          isp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>string isp = 28;</code>
       * @param value The isp to set.
       * @return This builder for chaining.
       */
      public Builder setIsp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        isp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>string isp = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsp() {
        
        isp_ = getDefaultInstance().getIsp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>string isp = 28;</code>
       * @param value The bytes for isp to set.
       * @return This builder for chaining.
       */
      public Builder setIspBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        isp_ = value;
        onChanged();
        return this;
      }

      private int tempMax_ ;
      /**
       * <pre>
       *模组芯片温度(单位:摄氏度)
       * </pre>
       *
       * <code>int32 tempMax = 29;</code>
       * @return The tempMax.
       */
      @Override
      public int getTempMax() {
        return tempMax_;
      }
      /**
       * <pre>
       *模组芯片温度(单位:摄氏度)
       * </pre>
       *
       * <code>int32 tempMax = 29;</code>
       * @param value The tempMax to set.
       * @return This builder for chaining.
       */
      public Builder setTempMax(int value) {
        
        tempMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *模组芯片温度(单位:摄氏度)
       * </pre>
       *
       * <code>int32 tempMax = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearTempMax() {
        
        tempMax_ = 0;
        onChanged();
        return this;
      }

      private Object prxRsrp_ = "";
      /**
       * <pre>
       *prx路径的rsrp值
       * </pre>
       *
       * <code>string prx_rsrp = 30;</code>
       * @return The prxRsrp.
       */
      public String getPrxRsrp() {
        Object ref = prxRsrp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          prxRsrp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *prx路径的rsrp值
       * </pre>
       *
       * <code>string prx_rsrp = 30;</code>
       * @return The bytes for prxRsrp.
       */
      public com.google.protobuf.ByteString
          getPrxRsrpBytes() {
        Object ref = prxRsrp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          prxRsrp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *prx路径的rsrp值
       * </pre>
       *
       * <code>string prx_rsrp = 30;</code>
       * @param value The prxRsrp to set.
       * @return This builder for chaining.
       */
      public Builder setPrxRsrp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        prxRsrp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *prx路径的rsrp值
       * </pre>
       *
       * <code>string prx_rsrp = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrxRsrp() {
        
        prxRsrp_ = getDefaultInstance().getPrxRsrp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *prx路径的rsrp值
       * </pre>
       *
       * <code>string prx_rsrp = 30;</code>
       * @param value The bytes for prxRsrp to set.
       * @return This builder for chaining.
       */
      public Builder setPrxRsrpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        prxRsrp_ = value;
        onChanged();
        return this;
      }

      private Object drxRsrp_ = "";
      /**
       * <pre>
       *drx路径的rsrp值
       * </pre>
       *
       * <code>string drx_rsrp = 31;</code>
       * @return The drxRsrp.
       */
      public String getDrxRsrp() {
        Object ref = drxRsrp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          drxRsrp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *drx路径的rsrp值
       * </pre>
       *
       * <code>string drx_rsrp = 31;</code>
       * @return The bytes for drxRsrp.
       */
      public com.google.protobuf.ByteString
          getDrxRsrpBytes() {
        Object ref = drxRsrp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          drxRsrp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *drx路径的rsrp值
       * </pre>
       *
       * <code>string drx_rsrp = 31;</code>
       * @param value The drxRsrp to set.
       * @return This builder for chaining.
       */
      public Builder setDrxRsrp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        drxRsrp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *drx路径的rsrp值
       * </pre>
       *
       * <code>string drx_rsrp = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearDrxRsrp() {
        
        drxRsrp_ = getDefaultInstance().getDrxRsrp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *drx路径的rsrp值
       * </pre>
       *
       * <code>string drx_rsrp = 31;</code>
       * @param value The bytes for drxRsrp to set.
       * @return This builder for chaining.
       */
      public Builder setDrxRsrpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        drxRsrp_ = value;
        onChanged();
        return this;
      }

      private Object rx2Rsrp_ = "";
      /**
       * <pre>
       *rx2路径的rsrp值
       * </pre>
       *
       * <code>string rx2_rsrp = 32;</code>
       * @return The rx2Rsrp.
       */
      public String getRx2Rsrp() {
        Object ref = rx2Rsrp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rx2Rsrp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *rx2路径的rsrp值
       * </pre>
       *
       * <code>string rx2_rsrp = 32;</code>
       * @return The bytes for rx2Rsrp.
       */
      public com.google.protobuf.ByteString
          getRx2RsrpBytes() {
        Object ref = rx2Rsrp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rx2Rsrp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *rx2路径的rsrp值
       * </pre>
       *
       * <code>string rx2_rsrp = 32;</code>
       * @param value The rx2Rsrp to set.
       * @return This builder for chaining.
       */
      public Builder setRx2Rsrp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rx2Rsrp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rx2路径的rsrp值
       * </pre>
       *
       * <code>string rx2_rsrp = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearRx2Rsrp() {
        
        rx2Rsrp_ = getDefaultInstance().getRx2Rsrp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rx2路径的rsrp值
       * </pre>
       *
       * <code>string rx2_rsrp = 32;</code>
       * @param value The bytes for rx2Rsrp to set.
       * @return This builder for chaining.
       */
      public Builder setRx2RsrpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rx2Rsrp_ = value;
        onChanged();
        return this;
      }

      private Object rx3Rsrp_ = "";
      /**
       * <pre>
       *rx3路径的rsrp值
       * </pre>
       *
       * <code>string rx3_rsrp = 33;</code>
       * @return The rx3Rsrp.
       */
      public String getRx3Rsrp() {
        Object ref = rx3Rsrp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rx3Rsrp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *rx3路径的rsrp值
       * </pre>
       *
       * <code>string rx3_rsrp = 33;</code>
       * @return The bytes for rx3Rsrp.
       */
      public com.google.protobuf.ByteString
          getRx3RsrpBytes() {
        Object ref = rx3Rsrp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rx3Rsrp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *rx3路径的rsrp值
       * </pre>
       *
       * <code>string rx3_rsrp = 33;</code>
       * @param value The rx3Rsrp to set.
       * @return This builder for chaining.
       */
      public Builder setRx3Rsrp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rx3Rsrp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rx3路径的rsrp值
       * </pre>
       *
       * <code>string rx3_rsrp = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearRx3Rsrp() {
        
        rx3Rsrp_ = getDefaultInstance().getRx3Rsrp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rx3路径的rsrp值
       * </pre>
       *
       * <code>string rx3_rsrp = 33;</code>
       * @param value The bytes for rx3Rsrp to set.
       * @return This builder for chaining.
       */
      public Builder setRx3RsrpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rx3Rsrp_ = value;
        onChanged();
        return this;
      }

      private Object boxSn_ = "";
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string box_sn = 34;</code>
       * @return The boxSn.
       */
      public String getBoxSn() {
        Object ref = boxSn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          boxSn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string box_sn = 34;</code>
       * @return The bytes for boxSn.
       */
      public com.google.protobuf.ByteString
          getBoxSnBytes() {
        Object ref = boxSn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          boxSn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string box_sn = 34;</code>
       * @param value The boxSn to set.
       * @return This builder for chaining.
       */
      public Builder setBoxSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boxSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string box_sn = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoxSn() {
        
        boxSn_ = getDefaultInstance().getBoxSn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string box_sn = 34;</code>
       * @param value The bytes for boxSn to set.
       * @return This builder for chaining.
       */
      public Builder setBoxSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boxSn_ = value;
        onChanged();
        return this;
      }

      private int simUseSeat_ ;
      /**
       * <pre>
       *当前使用的SIM卡在卡槽中的位置：1或2
       * </pre>
       *
       * <code>uint32 sim_use_seat = 35;</code>
       * @return The simUseSeat.
       */
      @Override
      public int getSimUseSeat() {
        return simUseSeat_;
      }
      /**
       * <pre>
       *当前使用的SIM卡在卡槽中的位置：1或2
       * </pre>
       *
       * <code>uint32 sim_use_seat = 35;</code>
       * @param value The simUseSeat to set.
       * @return This builder for chaining.
       */
      public Builder setSimUseSeat(int value) {
        
        simUseSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前使用的SIM卡在卡槽中的位置：1或2
       * </pre>
       *
       * <code>uint32 sim_use_seat = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearSimUseSeat() {
        
        simUseSeat_ = 0;
        onChanged();
        return this;
      }

      private int networkMode_ ;
      /**
       * <pre>
       *云盒入网方式 1-sim卡 2-网线【自组网或有线网】
       * </pre>
       *
       * <code>uint32 networkMode = 36;</code>
       * @return The networkMode.
       */
      @Override
      public int getNetworkMode() {
        return networkMode_;
      }
      /**
       * <pre>
       *云盒入网方式 1-sim卡 2-网线【自组网或有线网】
       * </pre>
       *
       * <code>uint32 networkMode = 36;</code>
       * @param value The networkMode to set.
       * @return This builder for chaining.
       */
      public Builder setNetworkMode(int value) {
        
        networkMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒入网方式 1-sim卡 2-网线【自组网或有线网】
       * </pre>
       *
       * <code>uint32 networkMode = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetworkMode() {
        
        networkMode_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SignalInfo)
    }

    // @@protoc_insertion_point(class_scope:SignalInfo)
    private static final SignalInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SignalInfo();
    }

    public static SignalInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalInfo>
        PARSER = new com.google.protobuf.AbstractParser<SignalInfo>() {
      @Override
      public SignalInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SignalInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public SignalInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SignalList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    java.util.List<SignalInfo>
        getSignalInfoList();
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    SignalInfo getSignalInfo(int index);
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    int getSignalInfoCount();
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    java.util.List<? extends SignalInfoOrBuilder>
        getSignalInfoOrBuilderList();
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    SignalInfoOrBuilder getSignalInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SignalList}
   */
  public static final class SignalList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SignalList)
      SignalListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalList.newBuilder() to construct.
    private SignalList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalList() {
      signalInfo_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signalInfo_ = new java.util.ArrayList<SignalInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              signalInfo_.add(
                  input.readMessage(SignalInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signalInfo_ = java.util.Collections.unmodifiableList(signalInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_SignalList_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_SignalList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SignalList.class, Builder.class);
    }

    public static final int SIGNALINFO_FIELD_NUMBER = 1;
    private java.util.List<SignalInfo> signalInfo_;
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    @Override
    public java.util.List<SignalInfo> getSignalInfoList() {
      return signalInfo_;
    }
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    @Override
    public java.util.List<? extends SignalInfoOrBuilder>
        getSignalInfoOrBuilderList() {
      return signalInfo_;
    }
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    @Override
    public int getSignalInfoCount() {
      return signalInfo_.size();
    }
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    @Override
    public SignalInfo getSignalInfo(int index) {
      return signalInfo_.get(index);
    }
    /**
     * <code>repeated .SignalInfo signalInfo = 1;</code>
     */
    @Override
    public SignalInfoOrBuilder getSignalInfoOrBuilder(
        int index) {
      return signalInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < signalInfo_.size(); i++) {
        output.writeMessage(1, signalInfo_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < signalInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, signalInfo_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SignalList)) {
        return super.equals(obj);
      }
      SignalList other = (SignalList) obj;

      if (!getSignalInfoList()
          .equals(other.getSignalInfoList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSignalInfoCount() > 0) {
        hash = (37 * hash) + SIGNALINFO_FIELD_NUMBER;
        hash = (53 * hash) + getSignalInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SignalList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignalList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignalList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignalList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignalList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignalList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignalList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SignalList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SignalList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SignalList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SignalList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SignalList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SignalList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SignalList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SignalList)
        SignalListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_SignalList_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_SignalList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SignalList.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.SignalList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignalInfoFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (signalInfoBuilder_ == null) {
          signalInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signalInfoBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_SignalList_descriptor;
      }

      @Override
      public SignalList getDefaultInstanceForType() {
        return SignalList.getDefaultInstance();
      }

      @Override
      public SignalList build() {
        SignalList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SignalList buildPartial() {
        SignalList result = new SignalList(this);
        int from_bitField0_ = bitField0_;
        if (signalInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signalInfo_ = java.util.Collections.unmodifiableList(signalInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signalInfo_ = signalInfo_;
        } else {
          result.signalInfo_ = signalInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SignalList) {
          return mergeFrom((SignalList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SignalList other) {
        if (other == SignalList.getDefaultInstance()) return this;
        if (signalInfoBuilder_ == null) {
          if (!other.signalInfo_.isEmpty()) {
            if (signalInfo_.isEmpty()) {
              signalInfo_ = other.signalInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignalInfoIsMutable();
              signalInfo_.addAll(other.signalInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.signalInfo_.isEmpty()) {
            if (signalInfoBuilder_.isEmpty()) {
              signalInfoBuilder_.dispose();
              signalInfoBuilder_ = null;
              signalInfo_ = other.signalInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signalInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignalInfoFieldBuilder() : null;
            } else {
              signalInfoBuilder_.addAllMessages(other.signalInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SignalList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SignalList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SignalInfo> signalInfo_ =
        java.util.Collections.emptyList();
      private void ensureSignalInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signalInfo_ = new java.util.ArrayList<SignalInfo>(signalInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SignalInfo, SignalInfo.Builder, SignalInfoOrBuilder> signalInfoBuilder_;

      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public java.util.List<SignalInfo> getSignalInfoList() {
        if (signalInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signalInfo_);
        } else {
          return signalInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public int getSignalInfoCount() {
        if (signalInfoBuilder_ == null) {
          return signalInfo_.size();
        } else {
          return signalInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public SignalInfo getSignalInfo(int index) {
        if (signalInfoBuilder_ == null) {
          return signalInfo_.get(index);
        } else {
          return signalInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder setSignalInfo(
          int index, SignalInfo value) {
        if (signalInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalInfoIsMutable();
          signalInfo_.set(index, value);
          onChanged();
        } else {
          signalInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder setSignalInfo(
          int index, SignalInfo.Builder builderForValue) {
        if (signalInfoBuilder_ == null) {
          ensureSignalInfoIsMutable();
          signalInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder addSignalInfo(SignalInfo value) {
        if (signalInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalInfoIsMutable();
          signalInfo_.add(value);
          onChanged();
        } else {
          signalInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder addSignalInfo(
          int index, SignalInfo value) {
        if (signalInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalInfoIsMutable();
          signalInfo_.add(index, value);
          onChanged();
        } else {
          signalInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder addSignalInfo(
          SignalInfo.Builder builderForValue) {
        if (signalInfoBuilder_ == null) {
          ensureSignalInfoIsMutable();
          signalInfo_.add(builderForValue.build());
          onChanged();
        } else {
          signalInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder addSignalInfo(
          int index, SignalInfo.Builder builderForValue) {
        if (signalInfoBuilder_ == null) {
          ensureSignalInfoIsMutable();
          signalInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder addAllSignalInfo(
          Iterable<? extends SignalInfo> values) {
        if (signalInfoBuilder_ == null) {
          ensureSignalInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signalInfo_);
          onChanged();
        } else {
          signalInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder clearSignalInfo() {
        if (signalInfoBuilder_ == null) {
          signalInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signalInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public Builder removeSignalInfo(int index) {
        if (signalInfoBuilder_ == null) {
          ensureSignalInfoIsMutable();
          signalInfo_.remove(index);
          onChanged();
        } else {
          signalInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public SignalInfo.Builder getSignalInfoBuilder(
          int index) {
        return getSignalInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public SignalInfoOrBuilder getSignalInfoOrBuilder(
          int index) {
        if (signalInfoBuilder_ == null) {
          return signalInfo_.get(index);  } else {
          return signalInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public java.util.List<? extends SignalInfoOrBuilder>
           getSignalInfoOrBuilderList() {
        if (signalInfoBuilder_ != null) {
          return signalInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signalInfo_);
        }
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public SignalInfo.Builder addSignalInfoBuilder() {
        return getSignalInfoFieldBuilder().addBuilder(
            SignalInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public SignalInfo.Builder addSignalInfoBuilder(
          int index) {
        return getSignalInfoFieldBuilder().addBuilder(
            index, SignalInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SignalInfo signalInfo = 1;</code>
       */
      public java.util.List<SignalInfo.Builder>
           getSignalInfoBuilderList() {
        return getSignalInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SignalInfo, SignalInfo.Builder, SignalInfoOrBuilder>
          getSignalInfoFieldBuilder() {
        if (signalInfoBuilder_ == null) {
          signalInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SignalInfo, SignalInfo.Builder, SignalInfoOrBuilder>(
                  signalInfo_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signalInfo_ = null;
        }
        return signalInfoBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SignalList)
    }

    // @@protoc_insertion_point(class_scope:SignalList)
    private static final SignalList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SignalList();
    }

    public static SignalList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalList>
        PARSER = new com.google.protobuf.AbstractParser<SignalList>() {
      @Override
      public SignalList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SignalList> getParserForType() {
      return PARSER;
    }

    @Override
    public SignalList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UavStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UavState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *飞控状态
     * </pre>
     *
     * <code>.FlightControllerState flightControllerState = 1;</code>
     * @return Whether the flightControllerState field is set.
     */
    boolean hasFlightControllerState();
    /**
     * <pre>
     *飞控状态
     * </pre>
     *
     * <code>.FlightControllerState flightControllerState = 1;</code>
     * @return The flightControllerState.
     */
    FlightControllerState getFlightControllerState();
    /**
     * <pre>
     *飞控状态
     * </pre>
     *
     * <code>.FlightControllerState flightControllerState = 1;</code>
     */
    FlightControllerStateOrBuilder getFlightControllerStateOrBuilder();

    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * <code>.BatteryState batteryState = 2;</code>
     * @return Whether the batteryState field is set.
     */
    boolean hasBatteryState();
    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * <code>.BatteryState batteryState = 2;</code>
     * @return The batteryState.
     */
    BatteryState getBatteryState();
    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * <code>.BatteryState batteryState = 2;</code>
     */
    BatteryStateOrBuilder getBatteryStateOrBuilder();

    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * <code>.PtzState ptzState = 3;</code>
     * @return Whether the ptzState field is set.
     */
    boolean hasPtzState();
    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * <code>.PtzState ptzState = 3;</code>
     * @return The ptzState.
     */
    PtzState getPtzState();
    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * <code>.PtzState ptzState = 3;</code>
     */
    PtzStateOrBuilder getPtzStateOrBuilder();

    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * <code>.CameraState cameraState = 4;</code>
     * @return Whether the cameraState field is set.
     */
    boolean hasCameraState();
    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * <code>.CameraState cameraState = 4;</code>
     * @return The cameraState.
     */
    CameraState getCameraState();
    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * <code>.CameraState cameraState = 4;</code>
     */
    CameraStateOrBuilder getCameraStateOrBuilder();

    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.MissionState missionState = 5;</code>
     * @return Whether the missionState field is set.
     */
    boolean hasMissionState();
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.MissionState missionState = 5;</code>
     * @return The missionState.
     */
    MissionState getMissionState();
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.MissionState missionState = 5;</code>
     */
    MissionStateOrBuilder getMissionStateOrBuilder();

    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string boxSn = 6;</code>
     * @return The boxSn.
     */
    String getBoxSn();
    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string boxSn = 6;</code>
     * @return The bytes for boxSn.
     */
    com.google.protobuf.ByteString
        getBoxSnBytes();

    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * <code>.AvoidanceData avoidanceData = 7;</code>
     * @return Whether the avoidanceData field is set.
     */
    boolean hasAvoidanceData();
    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * <code>.AvoidanceData avoidanceData = 7;</code>
     * @return The avoidanceData.
     */
    AvoidanceData getAvoidanceData();
    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * <code>.AvoidanceData avoidanceData = 7;</code>
     */
    AvoidanceDataOrBuilder getAvoidanceDataOrBuilder();

    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    java.util.List<HmsAlarmData>
        getHmsAlarmDataList();
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    HmsAlarmData getHmsAlarmData(int index);
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    int getHmsAlarmDataCount();
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    java.util.List<? extends HmsAlarmDataOrBuilder>
        getHmsAlarmDataOrBuilderList();
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    HmsAlarmDataOrBuilder getHmsAlarmDataOrBuilder(
        int index);

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>uint64 timestamp = 9;</code>
     * @return The timestamp.
     */
    long getTimestamp();
  }
  /**
   * <pre>
   *无人机状态对象
   * </pre>
   *
   * Protobuf type {@code UavState}
   */
  public static final class UavState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UavState)
      UavStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UavState.newBuilder() to construct.
    private UavState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UavState() {
      boxSn_ = "";
      hmsAlarmData_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new UavState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UavState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              FlightControllerState.Builder subBuilder = null;
              if (flightControllerState_ != null) {
                subBuilder = flightControllerState_.toBuilder();
              }
              flightControllerState_ = input.readMessage(FlightControllerState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flightControllerState_);
                flightControllerState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              BatteryState.Builder subBuilder = null;
              if (batteryState_ != null) {
                subBuilder = batteryState_.toBuilder();
              }
              batteryState_ = input.readMessage(BatteryState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(batteryState_);
                batteryState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              PtzState.Builder subBuilder = null;
              if (ptzState_ != null) {
                subBuilder = ptzState_.toBuilder();
              }
              ptzState_ = input.readMessage(PtzState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ptzState_);
                ptzState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              CameraState.Builder subBuilder = null;
              if (cameraState_ != null) {
                subBuilder = cameraState_.toBuilder();
              }
              cameraState_ = input.readMessage(CameraState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cameraState_);
                cameraState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              MissionState.Builder subBuilder = null;
              if (missionState_ != null) {
                subBuilder = missionState_.toBuilder();
              }
              missionState_ = input.readMessage(MissionState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(missionState_);
                missionState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              boxSn_ = s;
              break;
            }
            case 58: {
              AvoidanceData.Builder subBuilder = null;
              if (avoidanceData_ != null) {
                subBuilder = avoidanceData_.toBuilder();
              }
              avoidanceData_ = input.readMessage(AvoidanceData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(avoidanceData_);
                avoidanceData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hmsAlarmData_ = new java.util.ArrayList<HmsAlarmData>();
                mutable_bitField0_ |= 0x00000001;
              }
              hmsAlarmData_.add(
                  input.readMessage(HmsAlarmData.parser(), extensionRegistry));
              break;
            }
            case 72: {

              timestamp_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hmsAlarmData_ = java.util.Collections.unmodifiableList(hmsAlarmData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_UavState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_UavState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UavState.class, Builder.class);
    }

    public static final int FLIGHTCONTROLLERSTATE_FIELD_NUMBER = 1;
    private FlightControllerState flightControllerState_;
    /**
     * <pre>
     *飞控状态
     * </pre>
     *
     * <code>.FlightControllerState flightControllerState = 1;</code>
     * @return Whether the flightControllerState field is set.
     */
    @Override
    public boolean hasFlightControllerState() {
      return flightControllerState_ != null;
    }
    /**
     * <pre>
     *飞控状态
     * </pre>
     *
     * <code>.FlightControllerState flightControllerState = 1;</code>
     * @return The flightControllerState.
     */
    @Override
    public FlightControllerState getFlightControllerState() {
      return flightControllerState_ == null ? FlightControllerState.getDefaultInstance() : flightControllerState_;
    }
    /**
     * <pre>
     *飞控状态
     * </pre>
     *
     * <code>.FlightControllerState flightControllerState = 1;</code>
     */
    @Override
    public FlightControllerStateOrBuilder getFlightControllerStateOrBuilder() {
      return getFlightControllerState();
    }

    public static final int BATTERYSTATE_FIELD_NUMBER = 2;
    private BatteryState batteryState_;
    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * <code>.BatteryState batteryState = 2;</code>
     * @return Whether the batteryState field is set.
     */
    @Override
    public boolean hasBatteryState() {
      return batteryState_ != null;
    }
    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * <code>.BatteryState batteryState = 2;</code>
     * @return The batteryState.
     */
    @Override
    public BatteryState getBatteryState() {
      return batteryState_ == null ? BatteryState.getDefaultInstance() : batteryState_;
    }
    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * <code>.BatteryState batteryState = 2;</code>
     */
    @Override
    public BatteryStateOrBuilder getBatteryStateOrBuilder() {
      return getBatteryState();
    }

    public static final int PTZSTATE_FIELD_NUMBER = 3;
    private PtzState ptzState_;
    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * <code>.PtzState ptzState = 3;</code>
     * @return Whether the ptzState field is set.
     */
    @Override
    public boolean hasPtzState() {
      return ptzState_ != null;
    }
    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * <code>.PtzState ptzState = 3;</code>
     * @return The ptzState.
     */
    @Override
    public PtzState getPtzState() {
      return ptzState_ == null ? PtzState.getDefaultInstance() : ptzState_;
    }
    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * <code>.PtzState ptzState = 3;</code>
     */
    @Override
    public PtzStateOrBuilder getPtzStateOrBuilder() {
      return getPtzState();
    }

    public static final int CAMERASTATE_FIELD_NUMBER = 4;
    private CameraState cameraState_;
    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * <code>.CameraState cameraState = 4;</code>
     * @return Whether the cameraState field is set.
     */
    @Override
    public boolean hasCameraState() {
      return cameraState_ != null;
    }
    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * <code>.CameraState cameraState = 4;</code>
     * @return The cameraState.
     */
    @Override
    public CameraState getCameraState() {
      return cameraState_ == null ? CameraState.getDefaultInstance() : cameraState_;
    }
    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * <code>.CameraState cameraState = 4;</code>
     */
    @Override
    public CameraStateOrBuilder getCameraStateOrBuilder() {
      return getCameraState();
    }

    public static final int MISSIONSTATE_FIELD_NUMBER = 5;
    private MissionState missionState_;
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.MissionState missionState = 5;</code>
     * @return Whether the missionState field is set.
     */
    @Override
    public boolean hasMissionState() {
      return missionState_ != null;
    }
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.MissionState missionState = 5;</code>
     * @return The missionState.
     */
    @Override
    public MissionState getMissionState() {
      return missionState_ == null ? MissionState.getDefaultInstance() : missionState_;
    }
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.MissionState missionState = 5;</code>
     */
    @Override
    public MissionStateOrBuilder getMissionStateOrBuilder() {
      return getMissionState();
    }

    public static final int BOXSN_FIELD_NUMBER = 6;
    private volatile Object boxSn_;
    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string boxSn = 6;</code>
     * @return The boxSn.
     */
    @Override
    public String getBoxSn() {
      Object ref = boxSn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        boxSn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *云盒编号
     * </pre>
     *
     * <code>string boxSn = 6;</code>
     * @return The bytes for boxSn.
     */
    @Override
    public com.google.protobuf.ByteString
        getBoxSnBytes() {
      Object ref = boxSn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        boxSn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AVOIDANCEDATA_FIELD_NUMBER = 7;
    private AvoidanceData avoidanceData_;
    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * <code>.AvoidanceData avoidanceData = 7;</code>
     * @return Whether the avoidanceData field is set.
     */
    @Override
    public boolean hasAvoidanceData() {
      return avoidanceData_ != null;
    }
    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * <code>.AvoidanceData avoidanceData = 7;</code>
     * @return The avoidanceData.
     */
    @Override
    public AvoidanceData getAvoidanceData() {
      return avoidanceData_ == null ? AvoidanceData.getDefaultInstance() : avoidanceData_;
    }
    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * <code>.AvoidanceData avoidanceData = 7;</code>
     */
    @Override
    public AvoidanceDataOrBuilder getAvoidanceDataOrBuilder() {
      return getAvoidanceData();
    }

    public static final int HMSALARMDATA_FIELD_NUMBER = 8;
    private java.util.List<HmsAlarmData> hmsAlarmData_;
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    @Override
    public java.util.List<HmsAlarmData> getHmsAlarmDataList() {
      return hmsAlarmData_;
    }
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    @Override
    public java.util.List<? extends HmsAlarmDataOrBuilder>
        getHmsAlarmDataOrBuilderList() {
      return hmsAlarmData_;
    }
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    @Override
    public int getHmsAlarmDataCount() {
      return hmsAlarmData_.size();
    }
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    @Override
    public HmsAlarmData getHmsAlarmData(int index) {
      return hmsAlarmData_.get(index);
    }
    /**
     * <pre>
     *Hms报警信息[飞机告警信息]
     * </pre>
     *
     * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
     */
    @Override
    public HmsAlarmDataOrBuilder getHmsAlarmDataOrBuilder(
        int index) {
      return hmsAlarmData_.get(index);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 9;
    private long timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>uint64 timestamp = 9;</code>
     * @return The timestamp.
     */
    @Override
    public long getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (flightControllerState_ != null) {
        output.writeMessage(1, getFlightControllerState());
      }
      if (batteryState_ != null) {
        output.writeMessage(2, getBatteryState());
      }
      if (ptzState_ != null) {
        output.writeMessage(3, getPtzState());
      }
      if (cameraState_ != null) {
        output.writeMessage(4, getCameraState());
      }
      if (missionState_ != null) {
        output.writeMessage(5, getMissionState());
      }
      if (!getBoxSnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, boxSn_);
      }
      if (avoidanceData_ != null) {
        output.writeMessage(7, getAvoidanceData());
      }
      for (int i = 0; i < hmsAlarmData_.size(); i++) {
        output.writeMessage(8, hmsAlarmData_.get(i));
      }
      if (timestamp_ != 0L) {
        output.writeUInt64(9, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (flightControllerState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFlightControllerState());
      }
      if (batteryState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBatteryState());
      }
      if (ptzState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPtzState());
      }
      if (cameraState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCameraState());
      }
      if (missionState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMissionState());
      }
      if (!getBoxSnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, boxSn_);
      }
      if (avoidanceData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getAvoidanceData());
      }
      for (int i = 0; i < hmsAlarmData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, hmsAlarmData_.get(i));
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UavState)) {
        return super.equals(obj);
      }
      UavState other = (UavState) obj;

      if (hasFlightControllerState() != other.hasFlightControllerState()) return false;
      if (hasFlightControllerState()) {
        if (!getFlightControllerState()
            .equals(other.getFlightControllerState())) return false;
      }
      if (hasBatteryState() != other.hasBatteryState()) return false;
      if (hasBatteryState()) {
        if (!getBatteryState()
            .equals(other.getBatteryState())) return false;
      }
      if (hasPtzState() != other.hasPtzState()) return false;
      if (hasPtzState()) {
        if (!getPtzState()
            .equals(other.getPtzState())) return false;
      }
      if (hasCameraState() != other.hasCameraState()) return false;
      if (hasCameraState()) {
        if (!getCameraState()
            .equals(other.getCameraState())) return false;
      }
      if (hasMissionState() != other.hasMissionState()) return false;
      if (hasMissionState()) {
        if (!getMissionState()
            .equals(other.getMissionState())) return false;
      }
      if (!getBoxSn()
          .equals(other.getBoxSn())) return false;
      if (hasAvoidanceData() != other.hasAvoidanceData()) return false;
      if (hasAvoidanceData()) {
        if (!getAvoidanceData()
            .equals(other.getAvoidanceData())) return false;
      }
      if (!getHmsAlarmDataList()
          .equals(other.getHmsAlarmDataList())) return false;
      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFlightControllerState()) {
        hash = (37 * hash) + FLIGHTCONTROLLERSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getFlightControllerState().hashCode();
      }
      if (hasBatteryState()) {
        hash = (37 * hash) + BATTERYSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getBatteryState().hashCode();
      }
      if (hasPtzState()) {
        hash = (37 * hash) + PTZSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getPtzState().hashCode();
      }
      if (hasCameraState()) {
        hash = (37 * hash) + CAMERASTATE_FIELD_NUMBER;
        hash = (53 * hash) + getCameraState().hashCode();
      }
      if (hasMissionState()) {
        hash = (37 * hash) + MISSIONSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getMissionState().hashCode();
      }
      hash = (37 * hash) + BOXSN_FIELD_NUMBER;
      hash = (53 * hash) + getBoxSn().hashCode();
      if (hasAvoidanceData()) {
        hash = (37 * hash) + AVOIDANCEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getAvoidanceData().hashCode();
      }
      if (getHmsAlarmDataCount() > 0) {
        hash = (37 * hash) + HMSALARMDATA_FIELD_NUMBER;
        hash = (53 * hash) + getHmsAlarmDataList().hashCode();
      }
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UavState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UavState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UavState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UavState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UavState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UavState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UavState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *无人机状态对象
     * </pre>
     *
     * Protobuf type {@code UavState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UavState)
        UavStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_UavState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_UavState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UavState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.UavState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHmsAlarmDataFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (flightControllerStateBuilder_ == null) {
          flightControllerState_ = null;
        } else {
          flightControllerState_ = null;
          flightControllerStateBuilder_ = null;
        }
        if (batteryStateBuilder_ == null) {
          batteryState_ = null;
        } else {
          batteryState_ = null;
          batteryStateBuilder_ = null;
        }
        if (ptzStateBuilder_ == null) {
          ptzState_ = null;
        } else {
          ptzState_ = null;
          ptzStateBuilder_ = null;
        }
        if (cameraStateBuilder_ == null) {
          cameraState_ = null;
        } else {
          cameraState_ = null;
          cameraStateBuilder_ = null;
        }
        if (missionStateBuilder_ == null) {
          missionState_ = null;
        } else {
          missionState_ = null;
          missionStateBuilder_ = null;
        }
        boxSn_ = "";

        if (avoidanceDataBuilder_ == null) {
          avoidanceData_ = null;
        } else {
          avoidanceData_ = null;
          avoidanceDataBuilder_ = null;
        }
        if (hmsAlarmDataBuilder_ == null) {
          hmsAlarmData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hmsAlarmDataBuilder_.clear();
        }
        timestamp_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_UavState_descriptor;
      }

      @Override
      public UavState getDefaultInstanceForType() {
        return UavState.getDefaultInstance();
      }

      @Override
      public UavState build() {
        UavState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public UavState buildPartial() {
        UavState result = new UavState(this);
        int from_bitField0_ = bitField0_;
        if (flightControllerStateBuilder_ == null) {
          result.flightControllerState_ = flightControllerState_;
        } else {
          result.flightControllerState_ = flightControllerStateBuilder_.build();
        }
        if (batteryStateBuilder_ == null) {
          result.batteryState_ = batteryState_;
        } else {
          result.batteryState_ = batteryStateBuilder_.build();
        }
        if (ptzStateBuilder_ == null) {
          result.ptzState_ = ptzState_;
        } else {
          result.ptzState_ = ptzStateBuilder_.build();
        }
        if (cameraStateBuilder_ == null) {
          result.cameraState_ = cameraState_;
        } else {
          result.cameraState_ = cameraStateBuilder_.build();
        }
        if (missionStateBuilder_ == null) {
          result.missionState_ = missionState_;
        } else {
          result.missionState_ = missionStateBuilder_.build();
        }
        result.boxSn_ = boxSn_;
        if (avoidanceDataBuilder_ == null) {
          result.avoidanceData_ = avoidanceData_;
        } else {
          result.avoidanceData_ = avoidanceDataBuilder_.build();
        }
        if (hmsAlarmDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            hmsAlarmData_ = java.util.Collections.unmodifiableList(hmsAlarmData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hmsAlarmData_ = hmsAlarmData_;
        } else {
          result.hmsAlarmData_ = hmsAlarmDataBuilder_.build();
        }
        result.timestamp_ = timestamp_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UavState) {
          return mergeFrom((UavState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UavState other) {
        if (other == UavState.getDefaultInstance()) return this;
        if (other.hasFlightControllerState()) {
          mergeFlightControllerState(other.getFlightControllerState());
        }
        if (other.hasBatteryState()) {
          mergeBatteryState(other.getBatteryState());
        }
        if (other.hasPtzState()) {
          mergePtzState(other.getPtzState());
        }
        if (other.hasCameraState()) {
          mergeCameraState(other.getCameraState());
        }
        if (other.hasMissionState()) {
          mergeMissionState(other.getMissionState());
        }
        if (!other.getBoxSn().isEmpty()) {
          boxSn_ = other.boxSn_;
          onChanged();
        }
        if (other.hasAvoidanceData()) {
          mergeAvoidanceData(other.getAvoidanceData());
        }
        if (hmsAlarmDataBuilder_ == null) {
          if (!other.hmsAlarmData_.isEmpty()) {
            if (hmsAlarmData_.isEmpty()) {
              hmsAlarmData_ = other.hmsAlarmData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHmsAlarmDataIsMutable();
              hmsAlarmData_.addAll(other.hmsAlarmData_);
            }
            onChanged();
          }
        } else {
          if (!other.hmsAlarmData_.isEmpty()) {
            if (hmsAlarmDataBuilder_.isEmpty()) {
              hmsAlarmDataBuilder_.dispose();
              hmsAlarmDataBuilder_ = null;
              hmsAlarmData_ = other.hmsAlarmData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hmsAlarmDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHmsAlarmDataFieldBuilder() : null;
            } else {
              hmsAlarmDataBuilder_.addAllMessages(other.hmsAlarmData_);
            }
          }
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UavState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UavState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private FlightControllerState flightControllerState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          FlightControllerState, FlightControllerState.Builder, FlightControllerStateOrBuilder> flightControllerStateBuilder_;
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       * @return Whether the flightControllerState field is set.
       */
      public boolean hasFlightControllerState() {
        return flightControllerStateBuilder_ != null || flightControllerState_ != null;
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       * @return The flightControllerState.
       */
      public FlightControllerState getFlightControllerState() {
        if (flightControllerStateBuilder_ == null) {
          return flightControllerState_ == null ? FlightControllerState.getDefaultInstance() : flightControllerState_;
        } else {
          return flightControllerStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      public Builder setFlightControllerState(FlightControllerState value) {
        if (flightControllerStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flightControllerState_ = value;
          onChanged();
        } else {
          flightControllerStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      public Builder setFlightControllerState(
          FlightControllerState.Builder builderForValue) {
        if (flightControllerStateBuilder_ == null) {
          flightControllerState_ = builderForValue.build();
          onChanged();
        } else {
          flightControllerStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      public Builder mergeFlightControllerState(FlightControllerState value) {
        if (flightControllerStateBuilder_ == null) {
          if (flightControllerState_ != null) {
            flightControllerState_ =
              FlightControllerState.newBuilder(flightControllerState_).mergeFrom(value).buildPartial();
          } else {
            flightControllerState_ = value;
          }
          onChanged();
        } else {
          flightControllerStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      public Builder clearFlightControllerState() {
        if (flightControllerStateBuilder_ == null) {
          flightControllerState_ = null;
          onChanged();
        } else {
          flightControllerState_ = null;
          flightControllerStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      public FlightControllerState.Builder getFlightControllerStateBuilder() {
        
        onChanged();
        return getFlightControllerStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      public FlightControllerStateOrBuilder getFlightControllerStateOrBuilder() {
        if (flightControllerStateBuilder_ != null) {
          return flightControllerStateBuilder_.getMessageOrBuilder();
        } else {
          return flightControllerState_ == null ?
              FlightControllerState.getDefaultInstance() : flightControllerState_;
        }
      }
      /**
       * <pre>
       *飞控状态
       * </pre>
       *
       * <code>.FlightControllerState flightControllerState = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          FlightControllerState, FlightControllerState.Builder, FlightControllerStateOrBuilder>
          getFlightControllerStateFieldBuilder() {
        if (flightControllerStateBuilder_ == null) {
          flightControllerStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              FlightControllerState, FlightControllerState.Builder, FlightControllerStateOrBuilder>(
                  getFlightControllerState(),
                  getParentForChildren(),
                  isClean());
          flightControllerState_ = null;
        }
        return flightControllerStateBuilder_;
      }

      private BatteryState batteryState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          BatteryState, BatteryState.Builder, BatteryStateOrBuilder> batteryStateBuilder_;
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       * @return Whether the batteryState field is set.
       */
      public boolean hasBatteryState() {
        return batteryStateBuilder_ != null || batteryState_ != null;
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       * @return The batteryState.
       */
      public BatteryState getBatteryState() {
        if (batteryStateBuilder_ == null) {
          return batteryState_ == null ? BatteryState.getDefaultInstance() : batteryState_;
        } else {
          return batteryStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      public Builder setBatteryState(BatteryState value) {
        if (batteryStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          batteryState_ = value;
          onChanged();
        } else {
          batteryStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      public Builder setBatteryState(
          BatteryState.Builder builderForValue) {
        if (batteryStateBuilder_ == null) {
          batteryState_ = builderForValue.build();
          onChanged();
        } else {
          batteryStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      public Builder mergeBatteryState(BatteryState value) {
        if (batteryStateBuilder_ == null) {
          if (batteryState_ != null) {
            batteryState_ =
              BatteryState.newBuilder(batteryState_).mergeFrom(value).buildPartial();
          } else {
            batteryState_ = value;
          }
          onChanged();
        } else {
          batteryStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      public Builder clearBatteryState() {
        if (batteryStateBuilder_ == null) {
          batteryState_ = null;
          onChanged();
        } else {
          batteryState_ = null;
          batteryStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      public BatteryState.Builder getBatteryStateBuilder() {
        
        onChanged();
        return getBatteryStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      public BatteryStateOrBuilder getBatteryStateOrBuilder() {
        if (batteryStateBuilder_ != null) {
          return batteryStateBuilder_.getMessageOrBuilder();
        } else {
          return batteryState_ == null ?
              BatteryState.getDefaultInstance() : batteryState_;
        }
      }
      /**
       * <pre>
       *电池状态
       * </pre>
       *
       * <code>.BatteryState batteryState = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BatteryState, BatteryState.Builder, BatteryStateOrBuilder>
          getBatteryStateFieldBuilder() {
        if (batteryStateBuilder_ == null) {
          batteryStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BatteryState, BatteryState.Builder, BatteryStateOrBuilder>(
                  getBatteryState(),
                  getParentForChildren(),
                  isClean());
          batteryState_ = null;
        }
        return batteryStateBuilder_;
      }

      private PtzState ptzState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          PtzState, PtzState.Builder, PtzStateOrBuilder> ptzStateBuilder_;
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       * @return Whether the ptzState field is set.
       */
      public boolean hasPtzState() {
        return ptzStateBuilder_ != null || ptzState_ != null;
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       * @return The ptzState.
       */
      public PtzState getPtzState() {
        if (ptzStateBuilder_ == null) {
          return ptzState_ == null ? PtzState.getDefaultInstance() : ptzState_;
        } else {
          return ptzStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      public Builder setPtzState(PtzState value) {
        if (ptzStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ptzState_ = value;
          onChanged();
        } else {
          ptzStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      public Builder setPtzState(
          PtzState.Builder builderForValue) {
        if (ptzStateBuilder_ == null) {
          ptzState_ = builderForValue.build();
          onChanged();
        } else {
          ptzStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      public Builder mergePtzState(PtzState value) {
        if (ptzStateBuilder_ == null) {
          if (ptzState_ != null) {
            ptzState_ =
              PtzState.newBuilder(ptzState_).mergeFrom(value).buildPartial();
          } else {
            ptzState_ = value;
          }
          onChanged();
        } else {
          ptzStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      public Builder clearPtzState() {
        if (ptzStateBuilder_ == null) {
          ptzState_ = null;
          onChanged();
        } else {
          ptzState_ = null;
          ptzStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      public PtzState.Builder getPtzStateBuilder() {
        
        onChanged();
        return getPtzStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      public PtzStateOrBuilder getPtzStateOrBuilder() {
        if (ptzStateBuilder_ != null) {
          return ptzStateBuilder_.getMessageOrBuilder();
        } else {
          return ptzState_ == null ?
              PtzState.getDefaultInstance() : ptzState_;
        }
      }
      /**
       * <pre>
       *云台状态
       * </pre>
       *
       * <code>.PtzState ptzState = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          PtzState, PtzState.Builder, PtzStateOrBuilder>
          getPtzStateFieldBuilder() {
        if (ptzStateBuilder_ == null) {
          ptzStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              PtzState, PtzState.Builder, PtzStateOrBuilder>(
                  getPtzState(),
                  getParentForChildren(),
                  isClean());
          ptzState_ = null;
        }
        return ptzStateBuilder_;
      }

      private CameraState cameraState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          CameraState, CameraState.Builder, CameraStateOrBuilder> cameraStateBuilder_;
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       * @return Whether the cameraState field is set.
       */
      public boolean hasCameraState() {
        return cameraStateBuilder_ != null || cameraState_ != null;
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       * @return The cameraState.
       */
      public CameraState getCameraState() {
        if (cameraStateBuilder_ == null) {
          return cameraState_ == null ? CameraState.getDefaultInstance() : cameraState_;
        } else {
          return cameraStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      public Builder setCameraState(CameraState value) {
        if (cameraStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cameraState_ = value;
          onChanged();
        } else {
          cameraStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      public Builder setCameraState(
          CameraState.Builder builderForValue) {
        if (cameraStateBuilder_ == null) {
          cameraState_ = builderForValue.build();
          onChanged();
        } else {
          cameraStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      public Builder mergeCameraState(CameraState value) {
        if (cameraStateBuilder_ == null) {
          if (cameraState_ != null) {
            cameraState_ =
              CameraState.newBuilder(cameraState_).mergeFrom(value).buildPartial();
          } else {
            cameraState_ = value;
          }
          onChanged();
        } else {
          cameraStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      public Builder clearCameraState() {
        if (cameraStateBuilder_ == null) {
          cameraState_ = null;
          onChanged();
        } else {
          cameraState_ = null;
          cameraStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      public CameraState.Builder getCameraStateBuilder() {
        
        onChanged();
        return getCameraStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      public CameraStateOrBuilder getCameraStateOrBuilder() {
        if (cameraStateBuilder_ != null) {
          return cameraStateBuilder_.getMessageOrBuilder();
        } else {
          return cameraState_ == null ?
              CameraState.getDefaultInstance() : cameraState_;
        }
      }
      /**
       * <pre>
       *相机状态
       * </pre>
       *
       * <code>.CameraState cameraState = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          CameraState, CameraState.Builder, CameraStateOrBuilder>
          getCameraStateFieldBuilder() {
        if (cameraStateBuilder_ == null) {
          cameraStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              CameraState, CameraState.Builder, CameraStateOrBuilder>(
                  getCameraState(),
                  getParentForChildren(),
                  isClean());
          cameraState_ = null;
        }
        return cameraStateBuilder_;
      }

      private MissionState missionState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MissionState, MissionState.Builder, MissionStateOrBuilder> missionStateBuilder_;
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       * @return Whether the missionState field is set.
       */
      public boolean hasMissionState() {
        return missionStateBuilder_ != null || missionState_ != null;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       * @return The missionState.
       */
      public MissionState getMissionState() {
        if (missionStateBuilder_ == null) {
          return missionState_ == null ? MissionState.getDefaultInstance() : missionState_;
        } else {
          return missionStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      public Builder setMissionState(MissionState value) {
        if (missionStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          missionState_ = value;
          onChanged();
        } else {
          missionStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      public Builder setMissionState(
          MissionState.Builder builderForValue) {
        if (missionStateBuilder_ == null) {
          missionState_ = builderForValue.build();
          onChanged();
        } else {
          missionStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      public Builder mergeMissionState(MissionState value) {
        if (missionStateBuilder_ == null) {
          if (missionState_ != null) {
            missionState_ =
              MissionState.newBuilder(missionState_).mergeFrom(value).buildPartial();
          } else {
            missionState_ = value;
          }
          onChanged();
        } else {
          missionStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      public Builder clearMissionState() {
        if (missionStateBuilder_ == null) {
          missionState_ = null;
          onChanged();
        } else {
          missionState_ = null;
          missionStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      public MissionState.Builder getMissionStateBuilder() {
        
        onChanged();
        return getMissionStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      public MissionStateOrBuilder getMissionStateOrBuilder() {
        if (missionStateBuilder_ != null) {
          return missionStateBuilder_.getMessageOrBuilder();
        } else {
          return missionState_ == null ?
              MissionState.getDefaultInstance() : missionState_;
        }
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.MissionState missionState = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MissionState, MissionState.Builder, MissionStateOrBuilder>
          getMissionStateFieldBuilder() {
        if (missionStateBuilder_ == null) {
          missionStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MissionState, MissionState.Builder, MissionStateOrBuilder>(
                  getMissionState(),
                  getParentForChildren(),
                  isClean());
          missionState_ = null;
        }
        return missionStateBuilder_;
      }

      private Object boxSn_ = "";
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string boxSn = 6;</code>
       * @return The boxSn.
       */
      public String getBoxSn() {
        Object ref = boxSn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          boxSn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string boxSn = 6;</code>
       * @return The bytes for boxSn.
       */
      public com.google.protobuf.ByteString
          getBoxSnBytes() {
        Object ref = boxSn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          boxSn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string boxSn = 6;</code>
       * @param value The boxSn to set.
       * @return This builder for chaining.
       */
      public Builder setBoxSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boxSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string boxSn = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoxSn() {
        
        boxSn_ = getDefaultInstance().getBoxSn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒编号
       * </pre>
       *
       * <code>string boxSn = 6;</code>
       * @param value The bytes for boxSn to set.
       * @return This builder for chaining.
       */
      public Builder setBoxSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boxSn_ = value;
        onChanged();
        return this;
      }

      private AvoidanceData avoidanceData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          AvoidanceData, AvoidanceData.Builder, AvoidanceDataOrBuilder> avoidanceDataBuilder_;
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       * @return Whether the avoidanceData field is set.
       */
      public boolean hasAvoidanceData() {
        return avoidanceDataBuilder_ != null || avoidanceData_ != null;
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       * @return The avoidanceData.
       */
      public AvoidanceData getAvoidanceData() {
        if (avoidanceDataBuilder_ == null) {
          return avoidanceData_ == null ? AvoidanceData.getDefaultInstance() : avoidanceData_;
        } else {
          return avoidanceDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      public Builder setAvoidanceData(AvoidanceData value) {
        if (avoidanceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          avoidanceData_ = value;
          onChanged();
        } else {
          avoidanceDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      public Builder setAvoidanceData(
          AvoidanceData.Builder builderForValue) {
        if (avoidanceDataBuilder_ == null) {
          avoidanceData_ = builderForValue.build();
          onChanged();
        } else {
          avoidanceDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      public Builder mergeAvoidanceData(AvoidanceData value) {
        if (avoidanceDataBuilder_ == null) {
          if (avoidanceData_ != null) {
            avoidanceData_ =
              AvoidanceData.newBuilder(avoidanceData_).mergeFrom(value).buildPartial();
          } else {
            avoidanceData_ = value;
          }
          onChanged();
        } else {
          avoidanceDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      public Builder clearAvoidanceData() {
        if (avoidanceDataBuilder_ == null) {
          avoidanceData_ = null;
          onChanged();
        } else {
          avoidanceData_ = null;
          avoidanceDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      public AvoidanceData.Builder getAvoidanceDataBuilder() {
        
        onChanged();
        return getAvoidanceDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      public AvoidanceDataOrBuilder getAvoidanceDataOrBuilder() {
        if (avoidanceDataBuilder_ != null) {
          return avoidanceDataBuilder_.getMessageOrBuilder();
        } else {
          return avoidanceData_ == null ?
              AvoidanceData.getDefaultInstance() : avoidanceData_;
        }
      }
      /**
       * <pre>
       *避障数据
       * </pre>
       *
       * <code>.AvoidanceData avoidanceData = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          AvoidanceData, AvoidanceData.Builder, AvoidanceDataOrBuilder>
          getAvoidanceDataFieldBuilder() {
        if (avoidanceDataBuilder_ == null) {
          avoidanceDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              AvoidanceData, AvoidanceData.Builder, AvoidanceDataOrBuilder>(
                  getAvoidanceData(),
                  getParentForChildren(),
                  isClean());
          avoidanceData_ = null;
        }
        return avoidanceDataBuilder_;
      }

      private java.util.List<HmsAlarmData> hmsAlarmData_ =
        java.util.Collections.emptyList();
      private void ensureHmsAlarmDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hmsAlarmData_ = new java.util.ArrayList<HmsAlarmData>(hmsAlarmData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          HmsAlarmData, HmsAlarmData.Builder, HmsAlarmDataOrBuilder> hmsAlarmDataBuilder_;

      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public java.util.List<HmsAlarmData> getHmsAlarmDataList() {
        if (hmsAlarmDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hmsAlarmData_);
        } else {
          return hmsAlarmDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public int getHmsAlarmDataCount() {
        if (hmsAlarmDataBuilder_ == null) {
          return hmsAlarmData_.size();
        } else {
          return hmsAlarmDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public HmsAlarmData getHmsAlarmData(int index) {
        if (hmsAlarmDataBuilder_ == null) {
          return hmsAlarmData_.get(index);
        } else {
          return hmsAlarmDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder setHmsAlarmData(
          int index, HmsAlarmData value) {
        if (hmsAlarmDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.set(index, value);
          onChanged();
        } else {
          hmsAlarmDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder setHmsAlarmData(
          int index, HmsAlarmData.Builder builderForValue) {
        if (hmsAlarmDataBuilder_ == null) {
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.set(index, builderForValue.build());
          onChanged();
        } else {
          hmsAlarmDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder addHmsAlarmData(HmsAlarmData value) {
        if (hmsAlarmDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.add(value);
          onChanged();
        } else {
          hmsAlarmDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder addHmsAlarmData(
          int index, HmsAlarmData value) {
        if (hmsAlarmDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.add(index, value);
          onChanged();
        } else {
          hmsAlarmDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder addHmsAlarmData(
          HmsAlarmData.Builder builderForValue) {
        if (hmsAlarmDataBuilder_ == null) {
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.add(builderForValue.build());
          onChanged();
        } else {
          hmsAlarmDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder addHmsAlarmData(
          int index, HmsAlarmData.Builder builderForValue) {
        if (hmsAlarmDataBuilder_ == null) {
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.add(index, builderForValue.build());
          onChanged();
        } else {
          hmsAlarmDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder addAllHmsAlarmData(
          Iterable<? extends HmsAlarmData> values) {
        if (hmsAlarmDataBuilder_ == null) {
          ensureHmsAlarmDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hmsAlarmData_);
          onChanged();
        } else {
          hmsAlarmDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder clearHmsAlarmData() {
        if (hmsAlarmDataBuilder_ == null) {
          hmsAlarmData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hmsAlarmDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public Builder removeHmsAlarmData(int index) {
        if (hmsAlarmDataBuilder_ == null) {
          ensureHmsAlarmDataIsMutable();
          hmsAlarmData_.remove(index);
          onChanged();
        } else {
          hmsAlarmDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public HmsAlarmData.Builder getHmsAlarmDataBuilder(
          int index) {
        return getHmsAlarmDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public HmsAlarmDataOrBuilder getHmsAlarmDataOrBuilder(
          int index) {
        if (hmsAlarmDataBuilder_ == null) {
          return hmsAlarmData_.get(index);  } else {
          return hmsAlarmDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public java.util.List<? extends HmsAlarmDataOrBuilder>
           getHmsAlarmDataOrBuilderList() {
        if (hmsAlarmDataBuilder_ != null) {
          return hmsAlarmDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hmsAlarmData_);
        }
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public HmsAlarmData.Builder addHmsAlarmDataBuilder() {
        return getHmsAlarmDataFieldBuilder().addBuilder(
            HmsAlarmData.getDefaultInstance());
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public HmsAlarmData.Builder addHmsAlarmDataBuilder(
          int index) {
        return getHmsAlarmDataFieldBuilder().addBuilder(
            index, HmsAlarmData.getDefaultInstance());
      }
      /**
       * <pre>
       *Hms报警信息[飞机告警信息]
       * </pre>
       *
       * <code>repeated .HmsAlarmData hmsAlarmData = 8;</code>
       */
      public java.util.List<HmsAlarmData.Builder>
           getHmsAlarmDataBuilderList() {
        return getHmsAlarmDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          HmsAlarmData, HmsAlarmData.Builder, HmsAlarmDataOrBuilder>
          getHmsAlarmDataFieldBuilder() {
        if (hmsAlarmDataBuilder_ == null) {
          hmsAlarmDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              HmsAlarmData, HmsAlarmData.Builder, HmsAlarmDataOrBuilder>(
                  hmsAlarmData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          hmsAlarmData_ = null;
        }
        return hmsAlarmDataBuilder_;
      }

      private long timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>uint64 timestamp = 9;</code>
       * @return The timestamp.
       */
      @Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>uint64 timestamp = 9;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>uint64 timestamp = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:UavState)
    }

    // @@protoc_insertion_point(class_scope:UavState)
    private static final UavState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UavState();
    }

    public static UavState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UavState>
        PARSER = new com.google.protobuf.AbstractParser<UavState>() {
      @Override
      public UavState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UavState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UavState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UavState> getParserForType() {
      return PARSER;
    }

    @Override
    public UavState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlightControllerStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FlightControllerState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *卫星计数
     * </pre>
     *
     * <code>uint32 satelliteCount = 1;</code>
     * @return The satelliteCount.
     */
    int getSatelliteCount();

    /**
     * <pre>
     *GPS信号级别,0~5[4,5等级可以执行航线]
     * </pre>
     *
     * <code>uint32 gpsSignalLevel = 2;</code>
     * @return The gpsSignalLevel.
     */
    int getGpsSignalLevel();

    /**
     * <pre>
     *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
     * </pre>
     *
     * <code>uint32 flightMode = 3;</code>
     * @return The flightMode.
     */
    int getFlightMode();

    /**
     * <pre>
     *飞行状态:0=电机未启动(地面)，1=电机启动未起飞(地面)，2=起飞在空中(空中)
     * </pre>
     *
     * <code>uint32 flightStatus = 4;</code>
     * @return The flightStatus.
     */
    int getFlightStatus();

    /**
     * <pre>
     *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
     * </pre>
     *
     * <code>.PointData startPoint = 5;</code>
     * @return Whether the startPoint field is set.
     */
    boolean hasStartPoint();
    /**
     * <pre>
     *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
     * </pre>
     *
     * <code>.PointData startPoint = 5;</code>
     * @return The startPoint.
     */
    PointData getStartPoint();
    /**
     * <pre>
     *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
     * </pre>
     *
     * <code>.PointData startPoint = 5;</code>
     */
    PointDataOrBuilder getStartPointOrBuilder();

    /**
     * <pre>
     *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
     * </pre>
     *
     * <code>.PointData homePoint = 6;</code>
     * @return Whether the homePoint field is set.
     */
    boolean hasHomePoint();
    /**
     * <pre>
     *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
     * </pre>
     *
     * <code>.PointData homePoint = 6;</code>
     * @return The homePoint.
     */
    PointData getHomePoint();
    /**
     * <pre>
     *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
     * </pre>
     *
     * <code>.PointData homePoint = 6;</code>
     */
    PointDataOrBuilder getHomePointOrBuilder();

    /**
     * <pre>
     *返航高度(单位:米)
     * </pre>
     *
     * <code>int32 homeHeight = 7;</code>
     * @return The homeHeight.
     */
    int getHomeHeight();

    /**
     * <pre>
     *打点飞行模式：0=节能模式【飞机直线飞到目标点，需飞机在空中并且有控制权】，1=安全模式【飞机飞行至目标点高度再平飞到目标点，飞机可以在地面】 默认为节能模式
     * </pre>
     *
     * <code>uint32 safeLine = 8;</code>
     * @return The safeLine.
     */
    int getSafeLine();

    /**
     * <pre>
     *控制权状态:0=遥控器，1=msdk，4=云盒[此控制权只针对虚拟摇杆控制权，起飞、降落、强制降落、航线操作、返航不需要此控制权，但是遥控器断连情况下，如果云盒没有控制权，飞机会执行遥控器的失联策略]
     * </pre>
     *
     * <code>uint32 deviceStatus = 9;</code>
     * @return The deviceStatus.
     */
    int getDeviceStatus();

    /**
     * <pre>
     *UWB星数(只有等于4时，才可以开启uwb精准降落模式)
     * </pre>
     *
     * <code>uint32 uwbNodeCount = 10;</code>
     * @return The uwbNodeCount.
     */
    int getUwbNodeCount();

    /**
     * <pre>
     *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
     * </pre>
     *
     * <code>string rcMode = 11;</code>
     * @return The rcMode.
     */
    String getRcMode();
    /**
     * <pre>
     *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
     * </pre>
     *
     * <code>string rcMode = 11;</code>
     * @return The bytes for rcMode.
     */
    com.google.protobuf.ByteString
        getRcModeBytes();

    /**
     * <pre>
     *是否紧急制动中，0=否，1=是 【飞行器在地面限制起飞，飞行器在空中限制飞行.如果想操作飞行,请先解除紧急制动】
     * </pre>
     *
     * <code>uint32 isEmergencyBrakeing = 12;</code>
     * @return The isEmergencyBrakeing.
     */
    int getIsEmergencyBrakeing();

    /**
     * <pre>
     *飞行器是否在所有自定义电子围栏外，0=电子围栏内 1=电子围栏外
     * </pre>
     *
     * <code>uint32 outFlyAreaFlag = 13;</code>
     * @return The outFlyAreaFlag.
     */
    int getOutFlyAreaFlag();

    /**
     * <pre>
     *飞行器是否在自定义禁飞区内，0=禁飞区外 1=禁飞区内
     * </pre>
     *
     * <code>uint32 inNoFlyAreaFlag = 14;</code>
     * @return The inNoFlyAreaFlag.
     */
    int getInNoFlyAreaFlag();

    /**
     * <pre>
     *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
     * </pre>
     *
     * <code>.PointData targetPoint = 15;</code>
     * @return Whether the targetPoint field is set.
     */
    boolean hasTargetPoint();
    /**
     * <pre>
     *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
     * </pre>
     *
     * <code>.PointData targetPoint = 15;</code>
     * @return The targetPoint.
     */
    PointData getTargetPoint();
    /**
     * <pre>
     *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
     * </pre>
     *
     * <code>.PointData targetPoint = 15;</code>
     */
    PointDataOrBuilder getTargetPointOrBuilder();

    /**
     * <pre>
     *自动返航电量
     * </pre>
     *
     * <code>uint32 batteryGohome = 16;</code>
     * @return The batteryGohome.
     */
    int getBatteryGohome();

    /**
     * <pre>
     *是否开启低电量智能返航标志：0-未开启，1=开启【飞机电量小于云盒实时计算的最小返航电量百分比会自动返航】
     * </pre>
     *
     * <code>uint32 autoLowGohome = 17;</code>
     * @return The autoLowGohome.
     */
    int getAutoLowGohome();

    /**
     * <pre>
     *遥控器与飞机连接状态：0-未连接 1-连接
     * </pre>
     *
     * <code>uint32 rcConnected = 18;</code>
     * @return The rcConnected.
     */
    int getRcConnected();
  }
  /**
   * Protobuf type {@code FlightControllerState}
   */
  public static final class FlightControllerState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FlightControllerState)
      FlightControllerStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlightControllerState.newBuilder() to construct.
    private FlightControllerState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlightControllerState() {
      rcMode_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlightControllerState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlightControllerState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              satelliteCount_ = input.readUInt32();
              break;
            }
            case 16: {

              gpsSignalLevel_ = input.readUInt32();
              break;
            }
            case 24: {

              flightMode_ = input.readUInt32();
              break;
            }
            case 32: {

              flightStatus_ = input.readUInt32();
              break;
            }
            case 42: {
              PointData.Builder subBuilder = null;
              if (startPoint_ != null) {
                subBuilder = startPoint_.toBuilder();
              }
              startPoint_ = input.readMessage(PointData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startPoint_);
                startPoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              PointData.Builder subBuilder = null;
              if (homePoint_ != null) {
                subBuilder = homePoint_.toBuilder();
              }
              homePoint_ = input.readMessage(PointData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(homePoint_);
                homePoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              homeHeight_ = input.readInt32();
              break;
            }
            case 64: {

              safeLine_ = input.readUInt32();
              break;
            }
            case 72: {

              deviceStatus_ = input.readUInt32();
              break;
            }
            case 80: {

              uwbNodeCount_ = input.readUInt32();
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              rcMode_ = s;
              break;
            }
            case 96: {

              isEmergencyBrakeing_ = input.readUInt32();
              break;
            }
            case 104: {

              outFlyAreaFlag_ = input.readUInt32();
              break;
            }
            case 112: {

              inNoFlyAreaFlag_ = input.readUInt32();
              break;
            }
            case 122: {
              PointData.Builder subBuilder = null;
              if (targetPoint_ != null) {
                subBuilder = targetPoint_.toBuilder();
              }
              targetPoint_ = input.readMessage(PointData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetPoint_);
                targetPoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 128: {

              batteryGohome_ = input.readUInt32();
              break;
            }
            case 136: {

              autoLowGohome_ = input.readUInt32();
              break;
            }
            case 144: {

              rcConnected_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_FlightControllerState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_FlightControllerState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FlightControllerState.class, Builder.class);
    }

    public static final int SATELLITECOUNT_FIELD_NUMBER = 1;
    private int satelliteCount_;
    /**
     * <pre>
     *卫星计数
     * </pre>
     *
     * <code>uint32 satelliteCount = 1;</code>
     * @return The satelliteCount.
     */
    @Override
    public int getSatelliteCount() {
      return satelliteCount_;
    }

    public static final int GPSSIGNALLEVEL_FIELD_NUMBER = 2;
    private int gpsSignalLevel_;
    /**
     * <pre>
     *GPS信号级别,0~5[4,5等级可以执行航线]
     * </pre>
     *
     * <code>uint32 gpsSignalLevel = 2;</code>
     * @return The gpsSignalLevel.
     */
    @Override
    public int getGpsSignalLevel() {
      return gpsSignalLevel_;
    }

    public static final int FLIGHTMODE_FIELD_NUMBER = 3;
    private int flightMode_;
    /**
     * <pre>
     *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
     * </pre>
     *
     * <code>uint32 flightMode = 3;</code>
     * @return The flightMode.
     */
    @Override
    public int getFlightMode() {
      return flightMode_;
    }

    public static final int FLIGHTSTATUS_FIELD_NUMBER = 4;
    private int flightStatus_;
    /**
     * <pre>
     *飞行状态:0=电机未启动(地面)，1=电机启动未起飞(地面)，2=起飞在空中(空中)
     * </pre>
     *
     * <code>uint32 flightStatus = 4;</code>
     * @return The flightStatus.
     */
    @Override
    public int getFlightStatus() {
      return flightStatus_;
    }

    public static final int STARTPOINT_FIELD_NUMBER = 5;
    private PointData startPoint_;
    /**
     * <pre>
     *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
     * </pre>
     *
     * <code>.PointData startPoint = 5;</code>
     * @return Whether the startPoint field is set.
     */
    @Override
    public boolean hasStartPoint() {
      return startPoint_ != null;
    }
    /**
     * <pre>
     *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
     * </pre>
     *
     * <code>.PointData startPoint = 5;</code>
     * @return The startPoint.
     */
    @Override
    public PointData getStartPoint() {
      return startPoint_ == null ? PointData.getDefaultInstance() : startPoint_;
    }
    /**
     * <pre>
     *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
     * </pre>
     *
     * <code>.PointData startPoint = 5;</code>
     */
    @Override
    public PointDataOrBuilder getStartPointOrBuilder() {
      return getStartPoint();
    }

    public static final int HOMEPOINT_FIELD_NUMBER = 6;
    private PointData homePoint_;
    /**
     * <pre>
     *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
     * </pre>
     *
     * <code>.PointData homePoint = 6;</code>
     * @return Whether the homePoint field is set.
     */
    @Override
    public boolean hasHomePoint() {
      return homePoint_ != null;
    }
    /**
     * <pre>
     *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
     * </pre>
     *
     * <code>.PointData homePoint = 6;</code>
     * @return The homePoint.
     */
    @Override
    public PointData getHomePoint() {
      return homePoint_ == null ? PointData.getDefaultInstance() : homePoint_;
    }
    /**
     * <pre>
     *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
     * </pre>
     *
     * <code>.PointData homePoint = 6;</code>
     */
    @Override
    public PointDataOrBuilder getHomePointOrBuilder() {
      return getHomePoint();
    }

    public static final int HOMEHEIGHT_FIELD_NUMBER = 7;
    private int homeHeight_;
    /**
     * <pre>
     *返航高度(单位:米)
     * </pre>
     *
     * <code>int32 homeHeight = 7;</code>
     * @return The homeHeight.
     */
    @Override
    public int getHomeHeight() {
      return homeHeight_;
    }

    public static final int SAFELINE_FIELD_NUMBER = 8;
    private int safeLine_;
    /**
     * <pre>
     *打点飞行模式：0=节能模式【飞机直线飞到目标点，需飞机在空中并且有控制权】，1=安全模式【飞机飞行至目标点高度再平飞到目标点，飞机可以在地面】 默认为节能模式
     * </pre>
     *
     * <code>uint32 safeLine = 8;</code>
     * @return The safeLine.
     */
    @Override
    public int getSafeLine() {
      return safeLine_;
    }

    public static final int DEVICESTATUS_FIELD_NUMBER = 9;
    private int deviceStatus_;
    /**
     * <pre>
     *控制权状态:0=遥控器，1=msdk，4=云盒[此控制权只针对虚拟摇杆控制权，起飞、降落、强制降落、航线操作、返航不需要此控制权，但是遥控器断连情况下，如果云盒没有控制权，飞机会执行遥控器的失联策略]
     * </pre>
     *
     * <code>uint32 deviceStatus = 9;</code>
     * @return The deviceStatus.
     */
    @Override
    public int getDeviceStatus() {
      return deviceStatus_;
    }

    public static final int UWBNODECOUNT_FIELD_NUMBER = 10;
    private int uwbNodeCount_;
    /**
     * <pre>
     *UWB星数(只有等于4时，才可以开启uwb精准降落模式)
     * </pre>
     *
     * <code>uint32 uwbNodeCount = 10;</code>
     * @return The uwbNodeCount.
     */
    @Override
    public int getUwbNodeCount() {
      return uwbNodeCount_;
    }

    public static final int RCMODE_FIELD_NUMBER = 11;
    private volatile Object rcMode_;
    /**
     * <pre>
     *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
     * </pre>
     *
     * <code>string rcMode = 11;</code>
     * @return The rcMode.
     */
    @Override
    public String getRcMode() {
      Object ref = rcMode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rcMode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
     * </pre>
     *
     * <code>string rcMode = 11;</code>
     * @return The bytes for rcMode.
     */
    @Override
    public com.google.protobuf.ByteString
        getRcModeBytes() {
      Object ref = rcMode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rcMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISEMERGENCYBRAKEING_FIELD_NUMBER = 12;
    private int isEmergencyBrakeing_;
    /**
     * <pre>
     *是否紧急制动中，0=否，1=是 【飞行器在地面限制起飞，飞行器在空中限制飞行.如果想操作飞行,请先解除紧急制动】
     * </pre>
     *
     * <code>uint32 isEmergencyBrakeing = 12;</code>
     * @return The isEmergencyBrakeing.
     */
    @Override
    public int getIsEmergencyBrakeing() {
      return isEmergencyBrakeing_;
    }

    public static final int OUTFLYAREAFLAG_FIELD_NUMBER = 13;
    private int outFlyAreaFlag_;
    /**
     * <pre>
     *飞行器是否在所有自定义电子围栏外，0=电子围栏内 1=电子围栏外
     * </pre>
     *
     * <code>uint32 outFlyAreaFlag = 13;</code>
     * @return The outFlyAreaFlag.
     */
    @Override
    public int getOutFlyAreaFlag() {
      return outFlyAreaFlag_;
    }

    public static final int INNOFLYAREAFLAG_FIELD_NUMBER = 14;
    private int inNoFlyAreaFlag_;
    /**
     * <pre>
     *飞行器是否在自定义禁飞区内，0=禁飞区外 1=禁飞区内
     * </pre>
     *
     * <code>uint32 inNoFlyAreaFlag = 14;</code>
     * @return The inNoFlyAreaFlag.
     */
    @Override
    public int getInNoFlyAreaFlag() {
      return inNoFlyAreaFlag_;
    }

    public static final int TARGETPOINT_FIELD_NUMBER = 15;
    private PointData targetPoint_;
    /**
     * <pre>
     *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
     * </pre>
     *
     * <code>.PointData targetPoint = 15;</code>
     * @return Whether the targetPoint field is set.
     */
    @Override
    public boolean hasTargetPoint() {
      return targetPoint_ != null;
    }
    /**
     * <pre>
     *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
     * </pre>
     *
     * <code>.PointData targetPoint = 15;</code>
     * @return The targetPoint.
     */
    @Override
    public PointData getTargetPoint() {
      return targetPoint_ == null ? PointData.getDefaultInstance() : targetPoint_;
    }
    /**
     * <pre>
     *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
     * </pre>
     *
     * <code>.PointData targetPoint = 15;</code>
     */
    @Override
    public PointDataOrBuilder getTargetPointOrBuilder() {
      return getTargetPoint();
    }

    public static final int BATTERYGOHOME_FIELD_NUMBER = 16;
    private int batteryGohome_;
    /**
     * <pre>
     *自动返航电量
     * </pre>
     *
     * <code>uint32 batteryGohome = 16;</code>
     * @return The batteryGohome.
     */
    @Override
    public int getBatteryGohome() {
      return batteryGohome_;
    }

    public static final int AUTOLOWGOHOME_FIELD_NUMBER = 17;
    private int autoLowGohome_;
    /**
     * <pre>
     *是否开启低电量智能返航标志：0-未开启，1=开启【飞机电量小于云盒实时计算的最小返航电量百分比会自动返航】
     * </pre>
     *
     * <code>uint32 autoLowGohome = 17;</code>
     * @return The autoLowGohome.
     */
    @Override
    public int getAutoLowGohome() {
      return autoLowGohome_;
    }

    public static final int RCCONNECTED_FIELD_NUMBER = 18;
    private int rcConnected_;
    /**
     * <pre>
     *遥控器与飞机连接状态：0-未连接 1-连接
     * </pre>
     *
     * <code>uint32 rcConnected = 18;</code>
     * @return The rcConnected.
     */
    @Override
    public int getRcConnected() {
      return rcConnected_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (satelliteCount_ != 0) {
        output.writeUInt32(1, satelliteCount_);
      }
      if (gpsSignalLevel_ != 0) {
        output.writeUInt32(2, gpsSignalLevel_);
      }
      if (flightMode_ != 0) {
        output.writeUInt32(3, flightMode_);
      }
      if (flightStatus_ != 0) {
        output.writeUInt32(4, flightStatus_);
      }
      if (startPoint_ != null) {
        output.writeMessage(5, getStartPoint());
      }
      if (homePoint_ != null) {
        output.writeMessage(6, getHomePoint());
      }
      if (homeHeight_ != 0) {
        output.writeInt32(7, homeHeight_);
      }
      if (safeLine_ != 0) {
        output.writeUInt32(8, safeLine_);
      }
      if (deviceStatus_ != 0) {
        output.writeUInt32(9, deviceStatus_);
      }
      if (uwbNodeCount_ != 0) {
        output.writeUInt32(10, uwbNodeCount_);
      }
      if (!getRcModeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, rcMode_);
      }
      if (isEmergencyBrakeing_ != 0) {
        output.writeUInt32(12, isEmergencyBrakeing_);
      }
      if (outFlyAreaFlag_ != 0) {
        output.writeUInt32(13, outFlyAreaFlag_);
      }
      if (inNoFlyAreaFlag_ != 0) {
        output.writeUInt32(14, inNoFlyAreaFlag_);
      }
      if (targetPoint_ != null) {
        output.writeMessage(15, getTargetPoint());
      }
      if (batteryGohome_ != 0) {
        output.writeUInt32(16, batteryGohome_);
      }
      if (autoLowGohome_ != 0) {
        output.writeUInt32(17, autoLowGohome_);
      }
      if (rcConnected_ != 0) {
        output.writeUInt32(18, rcConnected_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (satelliteCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, satelliteCount_);
      }
      if (gpsSignalLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gpsSignalLevel_);
      }
      if (flightMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, flightMode_);
      }
      if (flightStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, flightStatus_);
      }
      if (startPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getStartPoint());
      }
      if (homePoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getHomePoint());
      }
      if (homeHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, homeHeight_);
      }
      if (safeLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, safeLine_);
      }
      if (deviceStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, deviceStatus_);
      }
      if (uwbNodeCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, uwbNodeCount_);
      }
      if (!getRcModeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, rcMode_);
      }
      if (isEmergencyBrakeing_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, isEmergencyBrakeing_);
      }
      if (outFlyAreaFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, outFlyAreaFlag_);
      }
      if (inNoFlyAreaFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, inNoFlyAreaFlag_);
      }
      if (targetPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTargetPoint());
      }
      if (batteryGohome_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, batteryGohome_);
      }
      if (autoLowGohome_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, autoLowGohome_);
      }
      if (rcConnected_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, rcConnected_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FlightControllerState)) {
        return super.equals(obj);
      }
      FlightControllerState other = (FlightControllerState) obj;

      if (getSatelliteCount()
          != other.getSatelliteCount()) return false;
      if (getGpsSignalLevel()
          != other.getGpsSignalLevel()) return false;
      if (getFlightMode()
          != other.getFlightMode()) return false;
      if (getFlightStatus()
          != other.getFlightStatus()) return false;
      if (hasStartPoint() != other.hasStartPoint()) return false;
      if (hasStartPoint()) {
        if (!getStartPoint()
            .equals(other.getStartPoint())) return false;
      }
      if (hasHomePoint() != other.hasHomePoint()) return false;
      if (hasHomePoint()) {
        if (!getHomePoint()
            .equals(other.getHomePoint())) return false;
      }
      if (getHomeHeight()
          != other.getHomeHeight()) return false;
      if (getSafeLine()
          != other.getSafeLine()) return false;
      if (getDeviceStatus()
          != other.getDeviceStatus()) return false;
      if (getUwbNodeCount()
          != other.getUwbNodeCount()) return false;
      if (!getRcMode()
          .equals(other.getRcMode())) return false;
      if (getIsEmergencyBrakeing()
          != other.getIsEmergencyBrakeing()) return false;
      if (getOutFlyAreaFlag()
          != other.getOutFlyAreaFlag()) return false;
      if (getInNoFlyAreaFlag()
          != other.getInNoFlyAreaFlag()) return false;
      if (hasTargetPoint() != other.hasTargetPoint()) return false;
      if (hasTargetPoint()) {
        if (!getTargetPoint()
            .equals(other.getTargetPoint())) return false;
      }
      if (getBatteryGohome()
          != other.getBatteryGohome()) return false;
      if (getAutoLowGohome()
          != other.getAutoLowGohome()) return false;
      if (getRcConnected()
          != other.getRcConnected()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SATELLITECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getSatelliteCount();
      hash = (37 * hash) + GPSSIGNALLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getGpsSignalLevel();
      hash = (37 * hash) + FLIGHTMODE_FIELD_NUMBER;
      hash = (53 * hash) + getFlightMode();
      hash = (37 * hash) + FLIGHTSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getFlightStatus();
      if (hasStartPoint()) {
        hash = (37 * hash) + STARTPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getStartPoint().hashCode();
      }
      if (hasHomePoint()) {
        hash = (37 * hash) + HOMEPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getHomePoint().hashCode();
      }
      hash = (37 * hash) + HOMEHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHomeHeight();
      hash = (37 * hash) + SAFELINE_FIELD_NUMBER;
      hash = (53 * hash) + getSafeLine();
      hash = (37 * hash) + DEVICESTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceStatus();
      hash = (37 * hash) + UWBNODECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getUwbNodeCount();
      hash = (37 * hash) + RCMODE_FIELD_NUMBER;
      hash = (53 * hash) + getRcMode().hashCode();
      hash = (37 * hash) + ISEMERGENCYBRAKEING_FIELD_NUMBER;
      hash = (53 * hash) + getIsEmergencyBrakeing();
      hash = (37 * hash) + OUTFLYAREAFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getOutFlyAreaFlag();
      hash = (37 * hash) + INNOFLYAREAFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getInNoFlyAreaFlag();
      if (hasTargetPoint()) {
        hash = (37 * hash) + TARGETPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getTargetPoint().hashCode();
      }
      hash = (37 * hash) + BATTERYGOHOME_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryGohome();
      hash = (37 * hash) + AUTOLOWGOHOME_FIELD_NUMBER;
      hash = (53 * hash) + getAutoLowGohome();
      hash = (37 * hash) + RCCONNECTED_FIELD_NUMBER;
      hash = (53 * hash) + getRcConnected();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FlightControllerState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FlightControllerState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FlightControllerState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FlightControllerState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FlightControllerState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FlightControllerState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FlightControllerState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FlightControllerState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FlightControllerState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FlightControllerState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FlightControllerState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FlightControllerState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FlightControllerState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FlightControllerState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FlightControllerState)
        FlightControllerStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_FlightControllerState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_FlightControllerState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FlightControllerState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.FlightControllerState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        satelliteCount_ = 0;

        gpsSignalLevel_ = 0;

        flightMode_ = 0;

        flightStatus_ = 0;

        if (startPointBuilder_ == null) {
          startPoint_ = null;
        } else {
          startPoint_ = null;
          startPointBuilder_ = null;
        }
        if (homePointBuilder_ == null) {
          homePoint_ = null;
        } else {
          homePoint_ = null;
          homePointBuilder_ = null;
        }
        homeHeight_ = 0;

        safeLine_ = 0;

        deviceStatus_ = 0;

        uwbNodeCount_ = 0;

        rcMode_ = "";

        isEmergencyBrakeing_ = 0;

        outFlyAreaFlag_ = 0;

        inNoFlyAreaFlag_ = 0;

        if (targetPointBuilder_ == null) {
          targetPoint_ = null;
        } else {
          targetPoint_ = null;
          targetPointBuilder_ = null;
        }
        batteryGohome_ = 0;

        autoLowGohome_ = 0;

        rcConnected_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_FlightControllerState_descriptor;
      }

      @Override
      public FlightControllerState getDefaultInstanceForType() {
        return FlightControllerState.getDefaultInstance();
      }

      @Override
      public FlightControllerState build() {
        FlightControllerState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public FlightControllerState buildPartial() {
        FlightControllerState result = new FlightControllerState(this);
        result.satelliteCount_ = satelliteCount_;
        result.gpsSignalLevel_ = gpsSignalLevel_;
        result.flightMode_ = flightMode_;
        result.flightStatus_ = flightStatus_;
        if (startPointBuilder_ == null) {
          result.startPoint_ = startPoint_;
        } else {
          result.startPoint_ = startPointBuilder_.build();
        }
        if (homePointBuilder_ == null) {
          result.homePoint_ = homePoint_;
        } else {
          result.homePoint_ = homePointBuilder_.build();
        }
        result.homeHeight_ = homeHeight_;
        result.safeLine_ = safeLine_;
        result.deviceStatus_ = deviceStatus_;
        result.uwbNodeCount_ = uwbNodeCount_;
        result.rcMode_ = rcMode_;
        result.isEmergencyBrakeing_ = isEmergencyBrakeing_;
        result.outFlyAreaFlag_ = outFlyAreaFlag_;
        result.inNoFlyAreaFlag_ = inNoFlyAreaFlag_;
        if (targetPointBuilder_ == null) {
          result.targetPoint_ = targetPoint_;
        } else {
          result.targetPoint_ = targetPointBuilder_.build();
        }
        result.batteryGohome_ = batteryGohome_;
        result.autoLowGohome_ = autoLowGohome_;
        result.rcConnected_ = rcConnected_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FlightControllerState) {
          return mergeFrom((FlightControllerState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FlightControllerState other) {
        if (other == FlightControllerState.getDefaultInstance()) return this;
        if (other.getSatelliteCount() != 0) {
          setSatelliteCount(other.getSatelliteCount());
        }
        if (other.getGpsSignalLevel() != 0) {
          setGpsSignalLevel(other.getGpsSignalLevel());
        }
        if (other.getFlightMode() != 0) {
          setFlightMode(other.getFlightMode());
        }
        if (other.getFlightStatus() != 0) {
          setFlightStatus(other.getFlightStatus());
        }
        if (other.hasStartPoint()) {
          mergeStartPoint(other.getStartPoint());
        }
        if (other.hasHomePoint()) {
          mergeHomePoint(other.getHomePoint());
        }
        if (other.getHomeHeight() != 0) {
          setHomeHeight(other.getHomeHeight());
        }
        if (other.getSafeLine() != 0) {
          setSafeLine(other.getSafeLine());
        }
        if (other.getDeviceStatus() != 0) {
          setDeviceStatus(other.getDeviceStatus());
        }
        if (other.getUwbNodeCount() != 0) {
          setUwbNodeCount(other.getUwbNodeCount());
        }
        if (!other.getRcMode().isEmpty()) {
          rcMode_ = other.rcMode_;
          onChanged();
        }
        if (other.getIsEmergencyBrakeing() != 0) {
          setIsEmergencyBrakeing(other.getIsEmergencyBrakeing());
        }
        if (other.getOutFlyAreaFlag() != 0) {
          setOutFlyAreaFlag(other.getOutFlyAreaFlag());
        }
        if (other.getInNoFlyAreaFlag() != 0) {
          setInNoFlyAreaFlag(other.getInNoFlyAreaFlag());
        }
        if (other.hasTargetPoint()) {
          mergeTargetPoint(other.getTargetPoint());
        }
        if (other.getBatteryGohome() != 0) {
          setBatteryGohome(other.getBatteryGohome());
        }
        if (other.getAutoLowGohome() != 0) {
          setAutoLowGohome(other.getAutoLowGohome());
        }
        if (other.getRcConnected() != 0) {
          setRcConnected(other.getRcConnected());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FlightControllerState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FlightControllerState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int satelliteCount_ ;
      /**
       * <pre>
       *卫星计数
       * </pre>
       *
       * <code>uint32 satelliteCount = 1;</code>
       * @return The satelliteCount.
       */
      @Override
      public int getSatelliteCount() {
        return satelliteCount_;
      }
      /**
       * <pre>
       *卫星计数
       * </pre>
       *
       * <code>uint32 satelliteCount = 1;</code>
       * @param value The satelliteCount to set.
       * @return This builder for chaining.
       */
      public Builder setSatelliteCount(int value) {
        
        satelliteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卫星计数
       * </pre>
       *
       * <code>uint32 satelliteCount = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSatelliteCount() {
        
        satelliteCount_ = 0;
        onChanged();
        return this;
      }

      private int gpsSignalLevel_ ;
      /**
       * <pre>
       *GPS信号级别,0~5[4,5等级可以执行航线]
       * </pre>
       *
       * <code>uint32 gpsSignalLevel = 2;</code>
       * @return The gpsSignalLevel.
       */
      @Override
      public int getGpsSignalLevel() {
        return gpsSignalLevel_;
      }
      /**
       * <pre>
       *GPS信号级别,0~5[4,5等级可以执行航线]
       * </pre>
       *
       * <code>uint32 gpsSignalLevel = 2;</code>
       * @param value The gpsSignalLevel to set.
       * @return This builder for chaining.
       */
      public Builder setGpsSignalLevel(int value) {
        
        gpsSignalLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *GPS信号级别,0~5[4,5等级可以执行航线]
       * </pre>
       *
       * <code>uint32 gpsSignalLevel = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpsSignalLevel() {
        
        gpsSignalLevel_ = 0;
        onChanged();
        return this;
      }

      private int flightMode_ ;
      /**
       * <pre>
       *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
       * </pre>
       *
       * <code>uint32 flightMode = 3;</code>
       * @return The flightMode.
       */
      @Override
      public int getFlightMode() {
        return flightMode_;
      }
      /**
       * <pre>
       *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
       * </pre>
       *
       * <code>uint32 flightMode = 3;</code>
       * @param value The flightMode to set.
       * @return This builder for chaining.
       */
      public Builder setFlightMode(int value) {
        
        flightMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行模式：1=手动控制模式，2=姿态模式，6=MODE_P_GPS，9=热点任务中，11=自动起飞中，12=降落中，14=航线中，15=返航中，17=虚拟摇杆控制中，33=强制降落中，41=解锁电机准备起飞中
       * </pre>
       *
       * <code>uint32 flightMode = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightMode() {
        
        flightMode_ = 0;
        onChanged();
        return this;
      }

      private int flightStatus_ ;
      /**
       * <pre>
       *飞行状态:0=电机未启动(地面)，1=电机启动未起飞(地面)，2=起飞在空中(空中)
       * </pre>
       *
       * <code>uint32 flightStatus = 4;</code>
       * @return The flightStatus.
       */
      @Override
      public int getFlightStatus() {
        return flightStatus_;
      }
      /**
       * <pre>
       *飞行状态:0=电机未启动(地面)，1=电机启动未起飞(地面)，2=起飞在空中(空中)
       * </pre>
       *
       * <code>uint32 flightStatus = 4;</code>
       * @param value The flightStatus to set.
       * @return This builder for chaining.
       */
      public Builder setFlightStatus(int value) {
        
        flightStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行状态:0=电机未启动(地面)，1=电机启动未起飞(地面)，2=起飞在空中(空中)
       * </pre>
       *
       * <code>uint32 flightStatus = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightStatus() {
        
        flightStatus_ = 0;
        onChanged();
        return this;
      }

      private PointData startPoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> startPointBuilder_;
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       * @return Whether the startPoint field is set.
       */
      public boolean hasStartPoint() {
        return startPointBuilder_ != null || startPoint_ != null;
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       * @return The startPoint.
       */
      public PointData getStartPoint() {
        if (startPointBuilder_ == null) {
          return startPoint_ == null ? PointData.getDefaultInstance() : startPoint_;
        } else {
          return startPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      public Builder setStartPoint(PointData value) {
        if (startPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startPoint_ = value;
          onChanged();
        } else {
          startPointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      public Builder setStartPoint(
          PointData.Builder builderForValue) {
        if (startPointBuilder_ == null) {
          startPoint_ = builderForValue.build();
          onChanged();
        } else {
          startPointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      public Builder mergeStartPoint(PointData value) {
        if (startPointBuilder_ == null) {
          if (startPoint_ != null) {
            startPoint_ =
              PointData.newBuilder(startPoint_).mergeFrom(value).buildPartial();
          } else {
            startPoint_ = value;
          }
          onChanged();
        } else {
          startPointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      public Builder clearStartPoint() {
        if (startPointBuilder_ == null) {
          startPoint_ = null;
          onChanged();
        } else {
          startPoint_ = null;
          startPointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      public PointData.Builder getStartPointBuilder() {
        
        onChanged();
        return getStartPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      public PointDataOrBuilder getStartPointOrBuilder() {
        if (startPointBuilder_ != null) {
          return startPointBuilder_.getMessageOrBuilder();
        } else {
          return startPoint_ == null ?
              PointData.getDefaultInstance() : startPoint_;
        }
      }
      /**
       * <pre>
       *起飞点(只包含lat【起飞点纬度】、lng【起飞点经度】、height【起飞点海拔高度】信息)
       * </pre>
       *
       * <code>.PointData startPoint = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getStartPointFieldBuilder() {
        if (startPointBuilder_ == null) {
          startPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  getStartPoint(),
                  getParentForChildren(),
                  isClean());
          startPoint_ = null;
        }
        return startPointBuilder_;
      }

      private PointData homePoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> homePointBuilder_;
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       * @return Whether the homePoint field is set.
       */
      public boolean hasHomePoint() {
        return homePointBuilder_ != null || homePoint_ != null;
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       * @return The homePoint.
       */
      public PointData getHomePoint() {
        if (homePointBuilder_ == null) {
          return homePoint_ == null ? PointData.getDefaultInstance() : homePoint_;
        } else {
          return homePointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      public Builder setHomePoint(PointData value) {
        if (homePointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          homePoint_ = value;
          onChanged();
        } else {
          homePointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      public Builder setHomePoint(
          PointData.Builder builderForValue) {
        if (homePointBuilder_ == null) {
          homePoint_ = builderForValue.build();
          onChanged();
        } else {
          homePointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      public Builder mergeHomePoint(PointData value) {
        if (homePointBuilder_ == null) {
          if (homePoint_ != null) {
            homePoint_ =
              PointData.newBuilder(homePoint_).mergeFrom(value).buildPartial();
          } else {
            homePoint_ = value;
          }
          onChanged();
        } else {
          homePointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      public Builder clearHomePoint() {
        if (homePointBuilder_ == null) {
          homePoint_ = null;
          onChanged();
        } else {
          homePoint_ = null;
          homePointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      public PointData.Builder getHomePointBuilder() {
        
        onChanged();
        return getHomePointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      public PointDataOrBuilder getHomePointOrBuilder() {
        if (homePointBuilder_ != null) {
          return homePointBuilder_.getMessageOrBuilder();
        } else {
          return homePoint_ == null ?
              PointData.getDefaultInstance() : homePoint_;
        }
      }
      /**
       * <pre>
       *返航点(只包含lat【HOME点纬度】、lng【HOME点经度】信息)
       * </pre>
       *
       * <code>.PointData homePoint = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getHomePointFieldBuilder() {
        if (homePointBuilder_ == null) {
          homePointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  getHomePoint(),
                  getParentForChildren(),
                  isClean());
          homePoint_ = null;
        }
        return homePointBuilder_;
      }

      private int homeHeight_ ;
      /**
       * <pre>
       *返航高度(单位:米)
       * </pre>
       *
       * <code>int32 homeHeight = 7;</code>
       * @return The homeHeight.
       */
      @Override
      public int getHomeHeight() {
        return homeHeight_;
      }
      /**
       * <pre>
       *返航高度(单位:米)
       * </pre>
       *
       * <code>int32 homeHeight = 7;</code>
       * @param value The homeHeight to set.
       * @return This builder for chaining.
       */
      public Builder setHomeHeight(int value) {
        
        homeHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返航高度(单位:米)
       * </pre>
       *
       * <code>int32 homeHeight = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearHomeHeight() {
        
        homeHeight_ = 0;
        onChanged();
        return this;
      }

      private int safeLine_ ;
      /**
       * <pre>
       *打点飞行模式：0=节能模式【飞机直线飞到目标点，需飞机在空中并且有控制权】，1=安全模式【飞机飞行至目标点高度再平飞到目标点，飞机可以在地面】 默认为节能模式
       * </pre>
       *
       * <code>uint32 safeLine = 8;</code>
       * @return The safeLine.
       */
      @Override
      public int getSafeLine() {
        return safeLine_;
      }
      /**
       * <pre>
       *打点飞行模式：0=节能模式【飞机直线飞到目标点，需飞机在空中并且有控制权】，1=安全模式【飞机飞行至目标点高度再平飞到目标点，飞机可以在地面】 默认为节能模式
       * </pre>
       *
       * <code>uint32 safeLine = 8;</code>
       * @param value The safeLine to set.
       * @return This builder for chaining.
       */
      public Builder setSafeLine(int value) {
        
        safeLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *打点飞行模式：0=节能模式【飞机直线飞到目标点，需飞机在空中并且有控制权】，1=安全模式【飞机飞行至目标点高度再平飞到目标点，飞机可以在地面】 默认为节能模式
       * </pre>
       *
       * <code>uint32 safeLine = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSafeLine() {
        
        safeLine_ = 0;
        onChanged();
        return this;
      }

      private int deviceStatus_ ;
      /**
       * <pre>
       *控制权状态:0=遥控器，1=msdk，4=云盒[此控制权只针对虚拟摇杆控制权，起飞、降落、强制降落、航线操作、返航不需要此控制权，但是遥控器断连情况下，如果云盒没有控制权，飞机会执行遥控器的失联策略]
       * </pre>
       *
       * <code>uint32 deviceStatus = 9;</code>
       * @return The deviceStatus.
       */
      @Override
      public int getDeviceStatus() {
        return deviceStatus_;
      }
      /**
       * <pre>
       *控制权状态:0=遥控器，1=msdk，4=云盒[此控制权只针对虚拟摇杆控制权，起飞、降落、强制降落、航线操作、返航不需要此控制权，但是遥控器断连情况下，如果云盒没有控制权，飞机会执行遥控器的失联策略]
       * </pre>
       *
       * <code>uint32 deviceStatus = 9;</code>
       * @param value The deviceStatus to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceStatus(int value) {
        
        deviceStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *控制权状态:0=遥控器，1=msdk，4=云盒[此控制权只针对虚拟摇杆控制权，起飞、降落、强制降落、航线操作、返航不需要此控制权，但是遥控器断连情况下，如果云盒没有控制权，飞机会执行遥控器的失联策略]
       * </pre>
       *
       * <code>uint32 deviceStatus = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceStatus() {
        
        deviceStatus_ = 0;
        onChanged();
        return this;
      }

      private int uwbNodeCount_ ;
      /**
       * <pre>
       *UWB星数(只有等于4时，才可以开启uwb精准降落模式)
       * </pre>
       *
       * <code>uint32 uwbNodeCount = 10;</code>
       * @return The uwbNodeCount.
       */
      @Override
      public int getUwbNodeCount() {
        return uwbNodeCount_;
      }
      /**
       * <pre>
       *UWB星数(只有等于4时，才可以开启uwb精准降落模式)
       * </pre>
       *
       * <code>uint32 uwbNodeCount = 10;</code>
       * @param value The uwbNodeCount to set.
       * @return This builder for chaining.
       */
      public Builder setUwbNodeCount(int value) {
        
        uwbNodeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *UWB星数(只有等于4时，才可以开启uwb精准降落模式)
       * </pre>
       *
       * <code>uint32 uwbNodeCount = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearUwbNodeCount() {
        
        uwbNodeCount_ = 0;
        onChanged();
        return this;
      }

      private Object rcMode_ = "";
      /**
       * <pre>
       *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
       * </pre>
       *
       * <code>string rcMode = 11;</code>
       * @return The rcMode.
       */
      public String getRcMode() {
        Object ref = rcMode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rcMode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
       * </pre>
       *
       * <code>string rcMode = 11;</code>
       * @return The bytes for rcMode.
       */
      public com.google.protobuf.ByteString
          getRcModeBytes() {
        Object ref = rcMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rcMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
       * </pre>
       *
       * <code>string rcMode = 11;</code>
       * @param value The rcMode to set.
       * @return This builder for chaining.
       */
      public Builder setRcMode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rcMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
       * </pre>
       *
       * <code>string rcMode = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRcMode() {
        
        rcMode_ = getDefaultInstance().getRcMode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *遥控器档位模式(说明：1.遥控器与飞机正常连接:(M300:T-P-S/M30:F-S-N/M3:F-N-S)，2.遥控器与飞机未连接:W，3.只有在M300-P挡、M30-N挡、M3-N挡下云盒才能正常控制无人机)    
       * </pre>
       *
       * <code>string rcMode = 11;</code>
       * @param value The bytes for rcMode to set.
       * @return This builder for chaining.
       */
      public Builder setRcModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rcMode_ = value;
        onChanged();
        return this;
      }

      private int isEmergencyBrakeing_ ;
      /**
       * <pre>
       *是否紧急制动中，0=否，1=是 【飞行器在地面限制起飞，飞行器在空中限制飞行.如果想操作飞行,请先解除紧急制动】
       * </pre>
       *
       * <code>uint32 isEmergencyBrakeing = 12;</code>
       * @return The isEmergencyBrakeing.
       */
      @Override
      public int getIsEmergencyBrakeing() {
        return isEmergencyBrakeing_;
      }
      /**
       * <pre>
       *是否紧急制动中，0=否，1=是 【飞行器在地面限制起飞，飞行器在空中限制飞行.如果想操作飞行,请先解除紧急制动】
       * </pre>
       *
       * <code>uint32 isEmergencyBrakeing = 12;</code>
       * @param value The isEmergencyBrakeing to set.
       * @return This builder for chaining.
       */
      public Builder setIsEmergencyBrakeing(int value) {
        
        isEmergencyBrakeing_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否紧急制动中，0=否，1=是 【飞行器在地面限制起飞，飞行器在空中限制飞行.如果想操作飞行,请先解除紧急制动】
       * </pre>
       *
       * <code>uint32 isEmergencyBrakeing = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsEmergencyBrakeing() {
        
        isEmergencyBrakeing_ = 0;
        onChanged();
        return this;
      }

      private int outFlyAreaFlag_ ;
      /**
       * <pre>
       *飞行器是否在所有自定义电子围栏外，0=电子围栏内 1=电子围栏外
       * </pre>
       *
       * <code>uint32 outFlyAreaFlag = 13;</code>
       * @return The outFlyAreaFlag.
       */
      @Override
      public int getOutFlyAreaFlag() {
        return outFlyAreaFlag_;
      }
      /**
       * <pre>
       *飞行器是否在所有自定义电子围栏外，0=电子围栏内 1=电子围栏外
       * </pre>
       *
       * <code>uint32 outFlyAreaFlag = 13;</code>
       * @param value The outFlyAreaFlag to set.
       * @return This builder for chaining.
       */
      public Builder setOutFlyAreaFlag(int value) {
        
        outFlyAreaFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行器是否在所有自定义电子围栏外，0=电子围栏内 1=电子围栏外
       * </pre>
       *
       * <code>uint32 outFlyAreaFlag = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutFlyAreaFlag() {
        
        outFlyAreaFlag_ = 0;
        onChanged();
        return this;
      }

      private int inNoFlyAreaFlag_ ;
      /**
       * <pre>
       *飞行器是否在自定义禁飞区内，0=禁飞区外 1=禁飞区内
       * </pre>
       *
       * <code>uint32 inNoFlyAreaFlag = 14;</code>
       * @return The inNoFlyAreaFlag.
       */
      @Override
      public int getInNoFlyAreaFlag() {
        return inNoFlyAreaFlag_;
      }
      /**
       * <pre>
       *飞行器是否在自定义禁飞区内，0=禁飞区外 1=禁飞区内
       * </pre>
       *
       * <code>uint32 inNoFlyAreaFlag = 14;</code>
       * @param value The inNoFlyAreaFlag to set.
       * @return This builder for chaining.
       */
      public Builder setInNoFlyAreaFlag(int value) {
        
        inNoFlyAreaFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞行器是否在自定义禁飞区内，0=禁飞区外 1=禁飞区内
       * </pre>
       *
       * <code>uint32 inNoFlyAreaFlag = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearInNoFlyAreaFlag() {
        
        inNoFlyAreaFlag_ = 0;
        onChanged();
        return this;
      }

      private PointData targetPoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> targetPointBuilder_;
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       * @return Whether the targetPoint field is set.
       */
      public boolean hasTargetPoint() {
        return targetPointBuilder_ != null || targetPoint_ != null;
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       * @return The targetPoint.
       */
      public PointData getTargetPoint() {
        if (targetPointBuilder_ == null) {
          return targetPoint_ == null ? PointData.getDefaultInstance() : targetPoint_;
        } else {
          return targetPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      public Builder setTargetPoint(PointData value) {
        if (targetPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetPoint_ = value;
          onChanged();
        } else {
          targetPointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      public Builder setTargetPoint(
          PointData.Builder builderForValue) {
        if (targetPointBuilder_ == null) {
          targetPoint_ = builderForValue.build();
          onChanged();
        } else {
          targetPointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      public Builder mergeTargetPoint(PointData value) {
        if (targetPointBuilder_ == null) {
          if (targetPoint_ != null) {
            targetPoint_ =
              PointData.newBuilder(targetPoint_).mergeFrom(value).buildPartial();
          } else {
            targetPoint_ = value;
          }
          onChanged();
        } else {
          targetPointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      public Builder clearTargetPoint() {
        if (targetPointBuilder_ == null) {
          targetPoint_ = null;
          onChanged();
        } else {
          targetPoint_ = null;
          targetPointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      public PointData.Builder getTargetPointBuilder() {
        
        onChanged();
        return getTargetPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      public PointDataOrBuilder getTargetPointOrBuilder() {
        if (targetPointBuilder_ != null) {
          return targetPointBuilder_.getMessageOrBuilder();
        } else {
          return targetPoint_ == null ?
              PointData.getDefaultInstance() : targetPoint_;
        }
      }
      /**
       * <pre>
       *目标点(打点飞行目标点和航线最后一个航点，只包含lat【目标点纬度】、lng【目标点经度】、height【目标点相对高度】信息)
       * </pre>
       *
       * <code>.PointData targetPoint = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getTargetPointFieldBuilder() {
        if (targetPointBuilder_ == null) {
          targetPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  getTargetPoint(),
                  getParentForChildren(),
                  isClean());
          targetPoint_ = null;
        }
        return targetPointBuilder_;
      }

      private int batteryGohome_ ;
      /**
       * <pre>
       *自动返航电量
       * </pre>
       *
       * <code>uint32 batteryGohome = 16;</code>
       * @return The batteryGohome.
       */
      @Override
      public int getBatteryGohome() {
        return batteryGohome_;
      }
      /**
       * <pre>
       *自动返航电量
       * </pre>
       *
       * <code>uint32 batteryGohome = 16;</code>
       * @param value The batteryGohome to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryGohome(int value) {
        
        batteryGohome_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *自动返航电量
       * </pre>
       *
       * <code>uint32 batteryGohome = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryGohome() {
        
        batteryGohome_ = 0;
        onChanged();
        return this;
      }

      private int autoLowGohome_ ;
      /**
       * <pre>
       *是否开启低电量智能返航标志：0-未开启，1=开启【飞机电量小于云盒实时计算的最小返航电量百分比会自动返航】
       * </pre>
       *
       * <code>uint32 autoLowGohome = 17;</code>
       * @return The autoLowGohome.
       */
      @Override
      public int getAutoLowGohome() {
        return autoLowGohome_;
      }
      /**
       * <pre>
       *是否开启低电量智能返航标志：0-未开启，1=开启【飞机电量小于云盒实时计算的最小返航电量百分比会自动返航】
       * </pre>
       *
       * <code>uint32 autoLowGohome = 17;</code>
       * @param value The autoLowGohome to set.
       * @return This builder for chaining.
       */
      public Builder setAutoLowGohome(int value) {
        
        autoLowGohome_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否开启低电量智能返航标志：0-未开启，1=开启【飞机电量小于云盒实时计算的最小返航电量百分比会自动返航】
       * </pre>
       *
       * <code>uint32 autoLowGohome = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoLowGohome() {
        
        autoLowGohome_ = 0;
        onChanged();
        return this;
      }

      private int rcConnected_ ;
      /**
       * <pre>
       *遥控器与飞机连接状态：0-未连接 1-连接
       * </pre>
       *
       * <code>uint32 rcConnected = 18;</code>
       * @return The rcConnected.
       */
      @Override
      public int getRcConnected() {
        return rcConnected_;
      }
      /**
       * <pre>
       *遥控器与飞机连接状态：0-未连接 1-连接
       * </pre>
       *
       * <code>uint32 rcConnected = 18;</code>
       * @param value The rcConnected to set.
       * @return This builder for chaining.
       */
      public Builder setRcConnected(int value) {
        
        rcConnected_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *遥控器与飞机连接状态：0-未连接 1-连接
       * </pre>
       *
       * <code>uint32 rcConnected = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearRcConnected() {
        
        rcConnected_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FlightControllerState)
    }

    // @@protoc_insertion_point(class_scope:FlightControllerState)
    private static final FlightControllerState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FlightControllerState();
    }

    public static FlightControllerState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlightControllerState>
        PARSER = new com.google.protobuf.AbstractParser<FlightControllerState>() {
      @Override
      public FlightControllerState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlightControllerState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlightControllerState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FlightControllerState> getParserForType() {
      return PARSER;
    }

    @Override
    public FlightControllerState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatteryStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BatteryState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *电池数量
     * </pre>
     *
     * <code>uint32 batteryNum = 1;</code>
     * @return The batteryNum.
     */
    int getBatteryNum();

    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 2;</code>
     * @return The batteryPower.
     */
    String getBatteryPower();
    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 2;</code>
     * @return The bytes for batteryPower.
     */
    com.google.protobuf.ByteString
        getBatteryPowerBytes();

    /**
     * <pre>
     *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
     * </pre>
     *
     * <code>string batteryVoltage = 3;</code>
     * @return The batteryVoltage.
     */
    String getBatteryVoltage();
    /**
     * <pre>
     *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
     * </pre>
     *
     * <code>string batteryVoltage = 3;</code>
     * @return The bytes for batteryVoltage.
     */
    com.google.protobuf.ByteString
        getBatteryVoltageBytes();

    /**
     * <pre>
     *第一块电池状态信息(安装在飞机左边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
     * @return Whether the firstBatteryInfo field is set.
     */
    boolean hasFirstBatteryInfo();
    /**
     * <pre>
     *第一块电池状态信息(安装在飞机左边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
     * @return The firstBatteryInfo.
     */
    BatteryStateInfo getFirstBatteryInfo();
    /**
     * <pre>
     *第一块电池状态信息(安装在飞机左边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
     */
    BatteryStateInfoOrBuilder getFirstBatteryInfoOrBuilder();

    /**
     * <pre>
     *第二块电池状态信息(安装在飞机右边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
     * @return Whether the secondBatteryInfo field is set.
     */
    boolean hasSecondBatteryInfo();
    /**
     * <pre>
     *第二块电池状态信息(安装在飞机右边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
     * @return The secondBatteryInfo.
     */
    BatteryStateInfo getSecondBatteryInfo();
    /**
     * <pre>
     *第二块电池状态信息(安装在飞机右边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
     */
    BatteryStateInfoOrBuilder getSecondBatteryInfoOrBuilder();
  }
  /**
   * <pre>
   *电池状态
   * </pre>
   *
   * Protobuf type {@code BatteryState}
   */
  public static final class BatteryState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BatteryState)
      BatteryStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatteryState.newBuilder() to construct.
    private BatteryState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatteryState() {
      batteryPower_ = "";
      batteryVoltage_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatteryState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              batteryNum_ = input.readUInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              batteryPower_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              batteryVoltage_ = s;
              break;
            }
            case 34: {
              BatteryStateInfo.Builder subBuilder = null;
              if (firstBatteryInfo_ != null) {
                subBuilder = firstBatteryInfo_.toBuilder();
              }
              firstBatteryInfo_ = input.readMessage(BatteryStateInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(firstBatteryInfo_);
                firstBatteryInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              BatteryStateInfo.Builder subBuilder = null;
              if (secondBatteryInfo_ != null) {
                subBuilder = secondBatteryInfo_.toBuilder();
              }
              secondBatteryInfo_ = input.readMessage(BatteryStateInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(secondBatteryInfo_);
                secondBatteryInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_BatteryState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_BatteryState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BatteryState.class, Builder.class);
    }

    public static final int BATTERYNUM_FIELD_NUMBER = 1;
    private int batteryNum_;
    /**
     * <pre>
     *电池数量
     * </pre>
     *
     * <code>uint32 batteryNum = 1;</code>
     * @return The batteryNum.
     */
    @Override
    public int getBatteryNum() {
      return batteryNum_;
    }

    public static final int BATTERYPOWER_FIELD_NUMBER = 2;
    private volatile Object batteryPower_;
    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 2;</code>
     * @return The batteryPower.
     */
    @Override
    public String getBatteryPower() {
      Object ref = batteryPower_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        batteryPower_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *电池电量,多个电池以下划线分割,如：80_60
     * </pre>
     *
     * <code>string batteryPower = 2;</code>
     * @return The bytes for batteryPower.
     */
    @Override
    public com.google.protobuf.ByteString
        getBatteryPowerBytes() {
      Object ref = batteryPower_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        batteryPower_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BATTERYVOLTAGE_FIELD_NUMBER = 3;
    private volatile Object batteryVoltage_;
    /**
     * <pre>
     *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
     * </pre>
     *
     * <code>string batteryVoltage = 3;</code>
     * @return The batteryVoltage.
     */
    @Override
    public String getBatteryVoltage() {
      Object ref = batteryVoltage_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        batteryVoltage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
     * </pre>
     *
     * <code>string batteryVoltage = 3;</code>
     * @return The bytes for batteryVoltage.
     */
    @Override
    public com.google.protobuf.ByteString
        getBatteryVoltageBytes() {
      Object ref = batteryVoltage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        batteryVoltage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIRSTBATTERYINFO_FIELD_NUMBER = 4;
    private BatteryStateInfo firstBatteryInfo_;
    /**
     * <pre>
     *第一块电池状态信息(安装在飞机左边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
     * @return Whether the firstBatteryInfo field is set.
     */
    @Override
    public boolean hasFirstBatteryInfo() {
      return firstBatteryInfo_ != null;
    }
    /**
     * <pre>
     *第一块电池状态信息(安装在飞机左边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
     * @return The firstBatteryInfo.
     */
    @Override
    public BatteryStateInfo getFirstBatteryInfo() {
      return firstBatteryInfo_ == null ? BatteryStateInfo.getDefaultInstance() : firstBatteryInfo_;
    }
    /**
     * <pre>
     *第一块电池状态信息(安装在飞机左边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
     */
    @Override
    public BatteryStateInfoOrBuilder getFirstBatteryInfoOrBuilder() {
      return getFirstBatteryInfo();
    }

    public static final int SECONDBATTERYINFO_FIELD_NUMBER = 5;
    private BatteryStateInfo secondBatteryInfo_;
    /**
     * <pre>
     *第二块电池状态信息(安装在飞机右边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
     * @return Whether the secondBatteryInfo field is set.
     */
    @Override
    public boolean hasSecondBatteryInfo() {
      return secondBatteryInfo_ != null;
    }
    /**
     * <pre>
     *第二块电池状态信息(安装在飞机右边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
     * @return The secondBatteryInfo.
     */
    @Override
    public BatteryStateInfo getSecondBatteryInfo() {
      return secondBatteryInfo_ == null ? BatteryStateInfo.getDefaultInstance() : secondBatteryInfo_;
    }
    /**
     * <pre>
     *第二块电池状态信息(安装在飞机右边电池槽)
     * </pre>
     *
     * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
     */
    @Override
    public BatteryStateInfoOrBuilder getSecondBatteryInfoOrBuilder() {
      return getSecondBatteryInfo();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (batteryNum_ != 0) {
        output.writeUInt32(1, batteryNum_);
      }
      if (!getBatteryPowerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, batteryPower_);
      }
      if (!getBatteryVoltageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, batteryVoltage_);
      }
      if (firstBatteryInfo_ != null) {
        output.writeMessage(4, getFirstBatteryInfo());
      }
      if (secondBatteryInfo_ != null) {
        output.writeMessage(5, getSecondBatteryInfo());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (batteryNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, batteryNum_);
      }
      if (!getBatteryPowerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, batteryPower_);
      }
      if (!getBatteryVoltageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, batteryVoltage_);
      }
      if (firstBatteryInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFirstBatteryInfo());
      }
      if (secondBatteryInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSecondBatteryInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BatteryState)) {
        return super.equals(obj);
      }
      BatteryState other = (BatteryState) obj;

      if (getBatteryNum()
          != other.getBatteryNum()) return false;
      if (!getBatteryPower()
          .equals(other.getBatteryPower())) return false;
      if (!getBatteryVoltage()
          .equals(other.getBatteryVoltage())) return false;
      if (hasFirstBatteryInfo() != other.hasFirstBatteryInfo()) return false;
      if (hasFirstBatteryInfo()) {
        if (!getFirstBatteryInfo()
            .equals(other.getFirstBatteryInfo())) return false;
      }
      if (hasSecondBatteryInfo() != other.hasSecondBatteryInfo()) return false;
      if (hasSecondBatteryInfo()) {
        if (!getSecondBatteryInfo()
            .equals(other.getSecondBatteryInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BATTERYNUM_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryNum();
      hash = (37 * hash) + BATTERYPOWER_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryPower().hashCode();
      hash = (37 * hash) + BATTERYVOLTAGE_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryVoltage().hashCode();
      if (hasFirstBatteryInfo()) {
        hash = (37 * hash) + FIRSTBATTERYINFO_FIELD_NUMBER;
        hash = (53 * hash) + getFirstBatteryInfo().hashCode();
      }
      if (hasSecondBatteryInfo()) {
        hash = (37 * hash) + SECONDBATTERYINFO_FIELD_NUMBER;
        hash = (53 * hash) + getSecondBatteryInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BatteryState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BatteryState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BatteryState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BatteryState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BatteryState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BatteryState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BatteryState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BatteryState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BatteryState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BatteryState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BatteryState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BatteryState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BatteryState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *电池状态
     * </pre>
     *
     * Protobuf type {@code BatteryState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BatteryState)
        BatteryStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_BatteryState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_BatteryState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BatteryState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.BatteryState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        batteryNum_ = 0;

        batteryPower_ = "";

        batteryVoltage_ = "";

        if (firstBatteryInfoBuilder_ == null) {
          firstBatteryInfo_ = null;
        } else {
          firstBatteryInfo_ = null;
          firstBatteryInfoBuilder_ = null;
        }
        if (secondBatteryInfoBuilder_ == null) {
          secondBatteryInfo_ = null;
        } else {
          secondBatteryInfo_ = null;
          secondBatteryInfoBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_BatteryState_descriptor;
      }

      @Override
      public BatteryState getDefaultInstanceForType() {
        return BatteryState.getDefaultInstance();
      }

      @Override
      public BatteryState build() {
        BatteryState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BatteryState buildPartial() {
        BatteryState result = new BatteryState(this);
        result.batteryNum_ = batteryNum_;
        result.batteryPower_ = batteryPower_;
        result.batteryVoltage_ = batteryVoltage_;
        if (firstBatteryInfoBuilder_ == null) {
          result.firstBatteryInfo_ = firstBatteryInfo_;
        } else {
          result.firstBatteryInfo_ = firstBatteryInfoBuilder_.build();
        }
        if (secondBatteryInfoBuilder_ == null) {
          result.secondBatteryInfo_ = secondBatteryInfo_;
        } else {
          result.secondBatteryInfo_ = secondBatteryInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BatteryState) {
          return mergeFrom((BatteryState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BatteryState other) {
        if (other == BatteryState.getDefaultInstance()) return this;
        if (other.getBatteryNum() != 0) {
          setBatteryNum(other.getBatteryNum());
        }
        if (!other.getBatteryPower().isEmpty()) {
          batteryPower_ = other.batteryPower_;
          onChanged();
        }
        if (!other.getBatteryVoltage().isEmpty()) {
          batteryVoltage_ = other.batteryVoltage_;
          onChanged();
        }
        if (other.hasFirstBatteryInfo()) {
          mergeFirstBatteryInfo(other.getFirstBatteryInfo());
        }
        if (other.hasSecondBatteryInfo()) {
          mergeSecondBatteryInfo(other.getSecondBatteryInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BatteryState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BatteryState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int batteryNum_ ;
      /**
       * <pre>
       *电池数量
       * </pre>
       *
       * <code>uint32 batteryNum = 1;</code>
       * @return The batteryNum.
       */
      @Override
      public int getBatteryNum() {
        return batteryNum_;
      }
      /**
       * <pre>
       *电池数量
       * </pre>
       *
       * <code>uint32 batteryNum = 1;</code>
       * @param value The batteryNum to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryNum(int value) {
        
        batteryNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池数量
       * </pre>
       *
       * <code>uint32 batteryNum = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryNum() {
        
        batteryNum_ = 0;
        onChanged();
        return this;
      }

      private Object batteryPower_ = "";
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 2;</code>
       * @return The batteryPower.
       */
      public String getBatteryPower() {
        Object ref = batteryPower_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          batteryPower_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 2;</code>
       * @return The bytes for batteryPower.
       */
      public com.google.protobuf.ByteString
          getBatteryPowerBytes() {
        Object ref = batteryPower_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          batteryPower_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 2;</code>
       * @param value The batteryPower to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryPower(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        batteryPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryPower() {
        
        batteryPower_ = getDefaultInstance().getBatteryPower();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量,多个电池以下划线分割,如：80_60
       * </pre>
       *
       * <code>string batteryPower = 2;</code>
       * @param value The bytes for batteryPower to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryPowerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        batteryPower_ = value;
        onChanged();
        return this;
      }

      private Object batteryVoltage_ = "";
      /**
       * <pre>
       *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
       * </pre>
       *
       * <code>string batteryVoltage = 3;</code>
       * @return The batteryVoltage.
       */
      public String getBatteryVoltage() {
        Object ref = batteryVoltage_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          batteryVoltage_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
       * </pre>
       *
       * <code>string batteryVoltage = 3;</code>
       * @return The bytes for batteryVoltage.
       */
      public com.google.protobuf.ByteString
          getBatteryVoltageBytes() {
        Object ref = batteryVoltage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          batteryVoltage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
       * </pre>
       *
       * <code>string batteryVoltage = 3;</code>
       * @param value The batteryVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryVoltage(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        batteryVoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
       * </pre>
       *
       * <code>string batteryVoltage = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryVoltage() {
        
        batteryVoltage_ = getDefaultInstance().getBatteryVoltage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电压,多个电池以下划线分割,如：40_30(单位:V)[注意：如果2块电池电压差大于0.7V，飞机限制起飞]
       * </pre>
       *
       * <code>string batteryVoltage = 3;</code>
       * @param value The bytes for batteryVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryVoltageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        batteryVoltage_ = value;
        onChanged();
        return this;
      }

      private BatteryStateInfo firstBatteryInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          BatteryStateInfo, BatteryStateInfo.Builder, BatteryStateInfoOrBuilder> firstBatteryInfoBuilder_;
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       * @return Whether the firstBatteryInfo field is set.
       */
      public boolean hasFirstBatteryInfo() {
        return firstBatteryInfoBuilder_ != null || firstBatteryInfo_ != null;
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       * @return The firstBatteryInfo.
       */
      public BatteryStateInfo getFirstBatteryInfo() {
        if (firstBatteryInfoBuilder_ == null) {
          return firstBatteryInfo_ == null ? BatteryStateInfo.getDefaultInstance() : firstBatteryInfo_;
        } else {
          return firstBatteryInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      public Builder setFirstBatteryInfo(BatteryStateInfo value) {
        if (firstBatteryInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          firstBatteryInfo_ = value;
          onChanged();
        } else {
          firstBatteryInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      public Builder setFirstBatteryInfo(
          BatteryStateInfo.Builder builderForValue) {
        if (firstBatteryInfoBuilder_ == null) {
          firstBatteryInfo_ = builderForValue.build();
          onChanged();
        } else {
          firstBatteryInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      public Builder mergeFirstBatteryInfo(BatteryStateInfo value) {
        if (firstBatteryInfoBuilder_ == null) {
          if (firstBatteryInfo_ != null) {
            firstBatteryInfo_ =
              BatteryStateInfo.newBuilder(firstBatteryInfo_).mergeFrom(value).buildPartial();
          } else {
            firstBatteryInfo_ = value;
          }
          onChanged();
        } else {
          firstBatteryInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      public Builder clearFirstBatteryInfo() {
        if (firstBatteryInfoBuilder_ == null) {
          firstBatteryInfo_ = null;
          onChanged();
        } else {
          firstBatteryInfo_ = null;
          firstBatteryInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      public BatteryStateInfo.Builder getFirstBatteryInfoBuilder() {
        
        onChanged();
        return getFirstBatteryInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      public BatteryStateInfoOrBuilder getFirstBatteryInfoOrBuilder() {
        if (firstBatteryInfoBuilder_ != null) {
          return firstBatteryInfoBuilder_.getMessageOrBuilder();
        } else {
          return firstBatteryInfo_ == null ?
              BatteryStateInfo.getDefaultInstance() : firstBatteryInfo_;
        }
      }
      /**
       * <pre>
       *第一块电池状态信息(安装在飞机左边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo firstBatteryInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BatteryStateInfo, BatteryStateInfo.Builder, BatteryStateInfoOrBuilder>
          getFirstBatteryInfoFieldBuilder() {
        if (firstBatteryInfoBuilder_ == null) {
          firstBatteryInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BatteryStateInfo, BatteryStateInfo.Builder, BatteryStateInfoOrBuilder>(
                  getFirstBatteryInfo(),
                  getParentForChildren(),
                  isClean());
          firstBatteryInfo_ = null;
        }
        return firstBatteryInfoBuilder_;
      }

      private BatteryStateInfo secondBatteryInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          BatteryStateInfo, BatteryStateInfo.Builder, BatteryStateInfoOrBuilder> secondBatteryInfoBuilder_;
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       * @return Whether the secondBatteryInfo field is set.
       */
      public boolean hasSecondBatteryInfo() {
        return secondBatteryInfoBuilder_ != null || secondBatteryInfo_ != null;
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       * @return The secondBatteryInfo.
       */
      public BatteryStateInfo getSecondBatteryInfo() {
        if (secondBatteryInfoBuilder_ == null) {
          return secondBatteryInfo_ == null ? BatteryStateInfo.getDefaultInstance() : secondBatteryInfo_;
        } else {
          return secondBatteryInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      public Builder setSecondBatteryInfo(BatteryStateInfo value) {
        if (secondBatteryInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secondBatteryInfo_ = value;
          onChanged();
        } else {
          secondBatteryInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      public Builder setSecondBatteryInfo(
          BatteryStateInfo.Builder builderForValue) {
        if (secondBatteryInfoBuilder_ == null) {
          secondBatteryInfo_ = builderForValue.build();
          onChanged();
        } else {
          secondBatteryInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      public Builder mergeSecondBatteryInfo(BatteryStateInfo value) {
        if (secondBatteryInfoBuilder_ == null) {
          if (secondBatteryInfo_ != null) {
            secondBatteryInfo_ =
              BatteryStateInfo.newBuilder(secondBatteryInfo_).mergeFrom(value).buildPartial();
          } else {
            secondBatteryInfo_ = value;
          }
          onChanged();
        } else {
          secondBatteryInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      public Builder clearSecondBatteryInfo() {
        if (secondBatteryInfoBuilder_ == null) {
          secondBatteryInfo_ = null;
          onChanged();
        } else {
          secondBatteryInfo_ = null;
          secondBatteryInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      public BatteryStateInfo.Builder getSecondBatteryInfoBuilder() {
        
        onChanged();
        return getSecondBatteryInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      public BatteryStateInfoOrBuilder getSecondBatteryInfoOrBuilder() {
        if (secondBatteryInfoBuilder_ != null) {
          return secondBatteryInfoBuilder_.getMessageOrBuilder();
        } else {
          return secondBatteryInfo_ == null ?
              BatteryStateInfo.getDefaultInstance() : secondBatteryInfo_;
        }
      }
      /**
       * <pre>
       *第二块电池状态信息(安装在飞机右边电池槽)
       * </pre>
       *
       * <code>.BatteryStateInfo secondBatteryInfo = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BatteryStateInfo, BatteryStateInfo.Builder, BatteryStateInfoOrBuilder>
          getSecondBatteryInfoFieldBuilder() {
        if (secondBatteryInfoBuilder_ == null) {
          secondBatteryInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BatteryStateInfo, BatteryStateInfo.Builder, BatteryStateInfoOrBuilder>(
                  getSecondBatteryInfo(),
                  getParentForChildren(),
                  isClean());
          secondBatteryInfo_ = null;
        }
        return secondBatteryInfoBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BatteryState)
    }

    // @@protoc_insertion_point(class_scope:BatteryState)
    private static final BatteryState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BatteryState();
    }

    public static BatteryState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatteryState>
        PARSER = new com.google.protobuf.AbstractParser<BatteryState>() {
      @Override
      public BatteryState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BatteryState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BatteryState> getParserForType() {
      return PARSER;
    }

    @Override
    public BatteryState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatteryStateInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BatteryStateInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *电池插入飞机状态(注意：如果未插入所有电池信息不可用)：0=插入，1=未插入
     * </pre>
     *
     * <code>uint32 isBatteryEmbed = 1;</code>
     * @return The isBatteryEmbed.
     */
    int getIsBatteryEmbed();

    /**
     * <pre>
     *电池电量百分比
     * </pre>
     *
     * <code>uint32 batteryCapacityPercent = 2;</code>
     * @return The batteryCapacityPercent.
     */
    int getBatteryCapacityPercent();

    /**
     * <pre>
     *电池电压(单位:mV)
     * </pre>
     *
     * <code>int32 currentVoltage = 3;</code>
     * @return The currentVoltage.
     */
    int getCurrentVoltage();

    /**
     * <pre>
     *当前电池电流(单位:mA)
     * </pre>
     *
     * <code>int32 currentElectric = 4;</code>
     * @return The currentElectric.
     */
    int getCurrentElectric();

    /**
     * <pre>
     *满电池容量(单位:mAh)
     * </pre>
     *
     * <code>uint32 fullCapacity = 5;</code>
     * @return The fullCapacity.
     */
    int getFullCapacity();

    /**
     * <pre>
     *剩余电池容量(单位:mAh)
     * </pre>
     *
     * <code>uint32 remainedCapacity = 6;</code>
     * @return The remainedCapacity.
     */
    int getRemainedCapacity();

    /**
     * <pre>
     *电池温度(单位:摄氏度)
     * </pre>
     *
     * <code>float batteryTemperature = 7;</code>
     * @return The batteryTemperature.
     */
    float getBatteryTemperature();

    /**
     * <pre>
     *电池组数(电池硬件型号有关)
     * </pre>
     *
     * <code>uint32 cellCount = 8;</code>
     * @return The cellCount.
     */
    int getCellCount();

    /**
     * <pre>
     *电池循环健康状态：0=正常，1=警报，2=注意安全
     * </pre>
     *
     * <code>uint32 batSOHState = 9;</code>
     * @return The batSOHState.
     */
    int getBatSOHState();

    /**
     * <pre>
     *相对功率百分比(Relative power percentage)	
     * </pre>
     *
     * <code>uint32 sop = 10;</code>
     * @return The sop.
     */
    int getSop();

    /**
     * <pre>
     *电池加热状态：0=未加热，1=加热中，2=保持恒温
     * </pre>
     *
     * <code>uint32 heatState = 11;</code>
     * @return The heatState.
     */
    int getHeatState();

    /**
     * <pre>
     *电池SOC荷电状态: 0=SOC正常，1=SOC_ABNORMAL_HIGH，2=SOC_JUMP_DOWN，3=SOC_JUMP_UP，4=SOC_INVALID
     * </pre>
     *
     * <code>uint32 socState = 12;</code>
     * @return The socState.
     */
    int getSocState();

    /**
     * <pre>
     *电池自检错误标志(注意：如果此值非0，就是电池损坏需要维修)：0=正常，1=电池自检NTC异常，2=电池自检MOS异常，3=电池自检采样电阻异常，4=电池电芯损坏，5=电池未校准，6=电量计参数异常
     * </pre>
     *
     * <code>uint32 selfCheckError = 13;</code>
     * @return The selfCheckError.
     */
    int getSelfCheckError();
  }
  /**
   * <pre>
   *电池状态信息
   * </pre>
   *
   * Protobuf type {@code BatteryStateInfo}
   */
  public static final class BatteryStateInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BatteryStateInfo)
      BatteryStateInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatteryStateInfo.newBuilder() to construct.
    private BatteryStateInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatteryStateInfo() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatteryStateInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BatteryStateInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isBatteryEmbed_ = input.readUInt32();
              break;
            }
            case 16: {

              batteryCapacityPercent_ = input.readUInt32();
              break;
            }
            case 24: {

              currentVoltage_ = input.readInt32();
              break;
            }
            case 32: {

              currentElectric_ = input.readInt32();
              break;
            }
            case 40: {

              fullCapacity_ = input.readUInt32();
              break;
            }
            case 48: {

              remainedCapacity_ = input.readUInt32();
              break;
            }
            case 61: {

              batteryTemperature_ = input.readFloat();
              break;
            }
            case 64: {

              cellCount_ = input.readUInt32();
              break;
            }
            case 72: {

              batSOHState_ = input.readUInt32();
              break;
            }
            case 80: {

              sop_ = input.readUInt32();
              break;
            }
            case 88: {

              heatState_ = input.readUInt32();
              break;
            }
            case 96: {

              socState_ = input.readUInt32();
              break;
            }
            case 104: {

              selfCheckError_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_BatteryStateInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_BatteryStateInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BatteryStateInfo.class, Builder.class);
    }

    public static final int ISBATTERYEMBED_FIELD_NUMBER = 1;
    private int isBatteryEmbed_;
    /**
     * <pre>
     *电池插入飞机状态(注意：如果未插入所有电池信息不可用)：0=插入，1=未插入
     * </pre>
     *
     * <code>uint32 isBatteryEmbed = 1;</code>
     * @return The isBatteryEmbed.
     */
    @Override
    public int getIsBatteryEmbed() {
      return isBatteryEmbed_;
    }

    public static final int BATTERYCAPACITYPERCENT_FIELD_NUMBER = 2;
    private int batteryCapacityPercent_;
    /**
     * <pre>
     *电池电量百分比
     * </pre>
     *
     * <code>uint32 batteryCapacityPercent = 2;</code>
     * @return The batteryCapacityPercent.
     */
    @Override
    public int getBatteryCapacityPercent() {
      return batteryCapacityPercent_;
    }

    public static final int CURRENTVOLTAGE_FIELD_NUMBER = 3;
    private int currentVoltage_;
    /**
     * <pre>
     *电池电压(单位:mV)
     * </pre>
     *
     * <code>int32 currentVoltage = 3;</code>
     * @return The currentVoltage.
     */
    @Override
    public int getCurrentVoltage() {
      return currentVoltage_;
    }

    public static final int CURRENTELECTRIC_FIELD_NUMBER = 4;
    private int currentElectric_;
    /**
     * <pre>
     *当前电池电流(单位:mA)
     * </pre>
     *
     * <code>int32 currentElectric = 4;</code>
     * @return The currentElectric.
     */
    @Override
    public int getCurrentElectric() {
      return currentElectric_;
    }

    public static final int FULLCAPACITY_FIELD_NUMBER = 5;
    private int fullCapacity_;
    /**
     * <pre>
     *满电池容量(单位:mAh)
     * </pre>
     *
     * <code>uint32 fullCapacity = 5;</code>
     * @return The fullCapacity.
     */
    @Override
    public int getFullCapacity() {
      return fullCapacity_;
    }

    public static final int REMAINEDCAPACITY_FIELD_NUMBER = 6;
    private int remainedCapacity_;
    /**
     * <pre>
     *剩余电池容量(单位:mAh)
     * </pre>
     *
     * <code>uint32 remainedCapacity = 6;</code>
     * @return The remainedCapacity.
     */
    @Override
    public int getRemainedCapacity() {
      return remainedCapacity_;
    }

    public static final int BATTERYTEMPERATURE_FIELD_NUMBER = 7;
    private float batteryTemperature_;
    /**
     * <pre>
     *电池温度(单位:摄氏度)
     * </pre>
     *
     * <code>float batteryTemperature = 7;</code>
     * @return The batteryTemperature.
     */
    @Override
    public float getBatteryTemperature() {
      return batteryTemperature_;
    }

    public static final int CELLCOUNT_FIELD_NUMBER = 8;
    private int cellCount_;
    /**
     * <pre>
     *电池组数(电池硬件型号有关)
     * </pre>
     *
     * <code>uint32 cellCount = 8;</code>
     * @return The cellCount.
     */
    @Override
    public int getCellCount() {
      return cellCount_;
    }

    public static final int BATSOHSTATE_FIELD_NUMBER = 9;
    private int batSOHState_;
    /**
     * <pre>
     *电池循环健康状态：0=正常，1=警报，2=注意安全
     * </pre>
     *
     * <code>uint32 batSOHState = 9;</code>
     * @return The batSOHState.
     */
    @Override
    public int getBatSOHState() {
      return batSOHState_;
    }

    public static final int SOP_FIELD_NUMBER = 10;
    private int sop_;
    /**
     * <pre>
     *相对功率百分比(Relative power percentage)	
     * </pre>
     *
     * <code>uint32 sop = 10;</code>
     * @return The sop.
     */
    @Override
    public int getSop() {
      return sop_;
    }

    public static final int HEATSTATE_FIELD_NUMBER = 11;
    private int heatState_;
    /**
     * <pre>
     *电池加热状态：0=未加热，1=加热中，2=保持恒温
     * </pre>
     *
     * <code>uint32 heatState = 11;</code>
     * @return The heatState.
     */
    @Override
    public int getHeatState() {
      return heatState_;
    }

    public static final int SOCSTATE_FIELD_NUMBER = 12;
    private int socState_;
    /**
     * <pre>
     *电池SOC荷电状态: 0=SOC正常，1=SOC_ABNORMAL_HIGH，2=SOC_JUMP_DOWN，3=SOC_JUMP_UP，4=SOC_INVALID
     * </pre>
     *
     * <code>uint32 socState = 12;</code>
     * @return The socState.
     */
    @Override
    public int getSocState() {
      return socState_;
    }

    public static final int SELFCHECKERROR_FIELD_NUMBER = 13;
    private int selfCheckError_;
    /**
     * <pre>
     *电池自检错误标志(注意：如果此值非0，就是电池损坏需要维修)：0=正常，1=电池自检NTC异常，2=电池自检MOS异常，3=电池自检采样电阻异常，4=电池电芯损坏，5=电池未校准，6=电量计参数异常
     * </pre>
     *
     * <code>uint32 selfCheckError = 13;</code>
     * @return The selfCheckError.
     */
    @Override
    public int getSelfCheckError() {
      return selfCheckError_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isBatteryEmbed_ != 0) {
        output.writeUInt32(1, isBatteryEmbed_);
      }
      if (batteryCapacityPercent_ != 0) {
        output.writeUInt32(2, batteryCapacityPercent_);
      }
      if (currentVoltage_ != 0) {
        output.writeInt32(3, currentVoltage_);
      }
      if (currentElectric_ != 0) {
        output.writeInt32(4, currentElectric_);
      }
      if (fullCapacity_ != 0) {
        output.writeUInt32(5, fullCapacity_);
      }
      if (remainedCapacity_ != 0) {
        output.writeUInt32(6, remainedCapacity_);
      }
      if (batteryTemperature_ != 0F) {
        output.writeFloat(7, batteryTemperature_);
      }
      if (cellCount_ != 0) {
        output.writeUInt32(8, cellCount_);
      }
      if (batSOHState_ != 0) {
        output.writeUInt32(9, batSOHState_);
      }
      if (sop_ != 0) {
        output.writeUInt32(10, sop_);
      }
      if (heatState_ != 0) {
        output.writeUInt32(11, heatState_);
      }
      if (socState_ != 0) {
        output.writeUInt32(12, socState_);
      }
      if (selfCheckError_ != 0) {
        output.writeUInt32(13, selfCheckError_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isBatteryEmbed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, isBatteryEmbed_);
      }
      if (batteryCapacityPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, batteryCapacityPercent_);
      }
      if (currentVoltage_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentVoltage_);
      }
      if (currentElectric_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, currentElectric_);
      }
      if (fullCapacity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, fullCapacity_);
      }
      if (remainedCapacity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, remainedCapacity_);
      }
      if (batteryTemperature_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, batteryTemperature_);
      }
      if (cellCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, cellCount_);
      }
      if (batSOHState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, batSOHState_);
      }
      if (sop_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, sop_);
      }
      if (heatState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, heatState_);
      }
      if (socState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, socState_);
      }
      if (selfCheckError_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, selfCheckError_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BatteryStateInfo)) {
        return super.equals(obj);
      }
      BatteryStateInfo other = (BatteryStateInfo) obj;

      if (getIsBatteryEmbed()
          != other.getIsBatteryEmbed()) return false;
      if (getBatteryCapacityPercent()
          != other.getBatteryCapacityPercent()) return false;
      if (getCurrentVoltage()
          != other.getCurrentVoltage()) return false;
      if (getCurrentElectric()
          != other.getCurrentElectric()) return false;
      if (getFullCapacity()
          != other.getFullCapacity()) return false;
      if (getRemainedCapacity()
          != other.getRemainedCapacity()) return false;
      if (Float.floatToIntBits(getBatteryTemperature())
          != Float.floatToIntBits(
              other.getBatteryTemperature())) return false;
      if (getCellCount()
          != other.getCellCount()) return false;
      if (getBatSOHState()
          != other.getBatSOHState()) return false;
      if (getSop()
          != other.getSop()) return false;
      if (getHeatState()
          != other.getHeatState()) return false;
      if (getSocState()
          != other.getSocState()) return false;
      if (getSelfCheckError()
          != other.getSelfCheckError()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ISBATTERYEMBED_FIELD_NUMBER;
      hash = (53 * hash) + getIsBatteryEmbed();
      hash = (37 * hash) + BATTERYCAPACITYPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryCapacityPercent();
      hash = (37 * hash) + CURRENTVOLTAGE_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentVoltage();
      hash = (37 * hash) + CURRENTELECTRIC_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentElectric();
      hash = (37 * hash) + FULLCAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getFullCapacity();
      hash = (37 * hash) + REMAINEDCAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getRemainedCapacity();
      hash = (37 * hash) + BATTERYTEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getBatteryTemperature());
      hash = (37 * hash) + CELLCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCellCount();
      hash = (37 * hash) + BATSOHSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getBatSOHState();
      hash = (37 * hash) + SOP_FIELD_NUMBER;
      hash = (53 * hash) + getSop();
      hash = (37 * hash) + HEATSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getHeatState();
      hash = (37 * hash) + SOCSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getSocState();
      hash = (37 * hash) + SELFCHECKERROR_FIELD_NUMBER;
      hash = (53 * hash) + getSelfCheckError();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BatteryStateInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BatteryStateInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BatteryStateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BatteryStateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BatteryStateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BatteryStateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BatteryStateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BatteryStateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BatteryStateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BatteryStateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BatteryStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BatteryStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BatteryStateInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *电池状态信息
     * </pre>
     *
     * Protobuf type {@code BatteryStateInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BatteryStateInfo)
        BatteryStateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_BatteryStateInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_BatteryStateInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BatteryStateInfo.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.BatteryStateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        isBatteryEmbed_ = 0;

        batteryCapacityPercent_ = 0;

        currentVoltage_ = 0;

        currentElectric_ = 0;

        fullCapacity_ = 0;

        remainedCapacity_ = 0;

        batteryTemperature_ = 0F;

        cellCount_ = 0;

        batSOHState_ = 0;

        sop_ = 0;

        heatState_ = 0;

        socState_ = 0;

        selfCheckError_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_BatteryStateInfo_descriptor;
      }

      @Override
      public BatteryStateInfo getDefaultInstanceForType() {
        return BatteryStateInfo.getDefaultInstance();
      }

      @Override
      public BatteryStateInfo build() {
        BatteryStateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BatteryStateInfo buildPartial() {
        BatteryStateInfo result = new BatteryStateInfo(this);
        result.isBatteryEmbed_ = isBatteryEmbed_;
        result.batteryCapacityPercent_ = batteryCapacityPercent_;
        result.currentVoltage_ = currentVoltage_;
        result.currentElectric_ = currentElectric_;
        result.fullCapacity_ = fullCapacity_;
        result.remainedCapacity_ = remainedCapacity_;
        result.batteryTemperature_ = batteryTemperature_;
        result.cellCount_ = cellCount_;
        result.batSOHState_ = batSOHState_;
        result.sop_ = sop_;
        result.heatState_ = heatState_;
        result.socState_ = socState_;
        result.selfCheckError_ = selfCheckError_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BatteryStateInfo) {
          return mergeFrom((BatteryStateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BatteryStateInfo other) {
        if (other == BatteryStateInfo.getDefaultInstance()) return this;
        if (other.getIsBatteryEmbed() != 0) {
          setIsBatteryEmbed(other.getIsBatteryEmbed());
        }
        if (other.getBatteryCapacityPercent() != 0) {
          setBatteryCapacityPercent(other.getBatteryCapacityPercent());
        }
        if (other.getCurrentVoltage() != 0) {
          setCurrentVoltage(other.getCurrentVoltage());
        }
        if (other.getCurrentElectric() != 0) {
          setCurrentElectric(other.getCurrentElectric());
        }
        if (other.getFullCapacity() != 0) {
          setFullCapacity(other.getFullCapacity());
        }
        if (other.getRemainedCapacity() != 0) {
          setRemainedCapacity(other.getRemainedCapacity());
        }
        if (other.getBatteryTemperature() != 0F) {
          setBatteryTemperature(other.getBatteryTemperature());
        }
        if (other.getCellCount() != 0) {
          setCellCount(other.getCellCount());
        }
        if (other.getBatSOHState() != 0) {
          setBatSOHState(other.getBatSOHState());
        }
        if (other.getSop() != 0) {
          setSop(other.getSop());
        }
        if (other.getHeatState() != 0) {
          setHeatState(other.getHeatState());
        }
        if (other.getSocState() != 0) {
          setSocState(other.getSocState());
        }
        if (other.getSelfCheckError() != 0) {
          setSelfCheckError(other.getSelfCheckError());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BatteryStateInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BatteryStateInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int isBatteryEmbed_ ;
      /**
       * <pre>
       *电池插入飞机状态(注意：如果未插入所有电池信息不可用)：0=插入，1=未插入
       * </pre>
       *
       * <code>uint32 isBatteryEmbed = 1;</code>
       * @return The isBatteryEmbed.
       */
      @Override
      public int getIsBatteryEmbed() {
        return isBatteryEmbed_;
      }
      /**
       * <pre>
       *电池插入飞机状态(注意：如果未插入所有电池信息不可用)：0=插入，1=未插入
       * </pre>
       *
       * <code>uint32 isBatteryEmbed = 1;</code>
       * @param value The isBatteryEmbed to set.
       * @return This builder for chaining.
       */
      public Builder setIsBatteryEmbed(int value) {
        
        isBatteryEmbed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池插入飞机状态(注意：如果未插入所有电池信息不可用)：0=插入，1=未插入
       * </pre>
       *
       * <code>uint32 isBatteryEmbed = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsBatteryEmbed() {
        
        isBatteryEmbed_ = 0;
        onChanged();
        return this;
      }

      private int batteryCapacityPercent_ ;
      /**
       * <pre>
       *电池电量百分比
       * </pre>
       *
       * <code>uint32 batteryCapacityPercent = 2;</code>
       * @return The batteryCapacityPercent.
       */
      @Override
      public int getBatteryCapacityPercent() {
        return batteryCapacityPercent_;
      }
      /**
       * <pre>
       *电池电量百分比
       * </pre>
       *
       * <code>uint32 batteryCapacityPercent = 2;</code>
       * @param value The batteryCapacityPercent to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryCapacityPercent(int value) {
        
        batteryCapacityPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量百分比
       * </pre>
       *
       * <code>uint32 batteryCapacityPercent = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryCapacityPercent() {
        
        batteryCapacityPercent_ = 0;
        onChanged();
        return this;
      }

      private int currentVoltage_ ;
      /**
       * <pre>
       *电池电压(单位:mV)
       * </pre>
       *
       * <code>int32 currentVoltage = 3;</code>
       * @return The currentVoltage.
       */
      @Override
      public int getCurrentVoltage() {
        return currentVoltage_;
      }
      /**
       * <pre>
       *电池电压(单位:mV)
       * </pre>
       *
       * <code>int32 currentVoltage = 3;</code>
       * @param value The currentVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentVoltage(int value) {
        
        currentVoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电压(单位:mV)
       * </pre>
       *
       * <code>int32 currentVoltage = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentVoltage() {
        
        currentVoltage_ = 0;
        onChanged();
        return this;
      }

      private int currentElectric_ ;
      /**
       * <pre>
       *当前电池电流(单位:mA)
       * </pre>
       *
       * <code>int32 currentElectric = 4;</code>
       * @return The currentElectric.
       */
      @Override
      public int getCurrentElectric() {
        return currentElectric_;
      }
      /**
       * <pre>
       *当前电池电流(单位:mA)
       * </pre>
       *
       * <code>int32 currentElectric = 4;</code>
       * @param value The currentElectric to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentElectric(int value) {
        
        currentElectric_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前电池电流(单位:mA)
       * </pre>
       *
       * <code>int32 currentElectric = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentElectric() {
        
        currentElectric_ = 0;
        onChanged();
        return this;
      }

      private int fullCapacity_ ;
      /**
       * <pre>
       *满电池容量(单位:mAh)
       * </pre>
       *
       * <code>uint32 fullCapacity = 5;</code>
       * @return The fullCapacity.
       */
      @Override
      public int getFullCapacity() {
        return fullCapacity_;
      }
      /**
       * <pre>
       *满电池容量(单位:mAh)
       * </pre>
       *
       * <code>uint32 fullCapacity = 5;</code>
       * @param value The fullCapacity to set.
       * @return This builder for chaining.
       */
      public Builder setFullCapacity(int value) {
        
        fullCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *满电池容量(单位:mAh)
       * </pre>
       *
       * <code>uint32 fullCapacity = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFullCapacity() {
        
        fullCapacity_ = 0;
        onChanged();
        return this;
      }

      private int remainedCapacity_ ;
      /**
       * <pre>
       *剩余电池容量(单位:mAh)
       * </pre>
       *
       * <code>uint32 remainedCapacity = 6;</code>
       * @return The remainedCapacity.
       */
      @Override
      public int getRemainedCapacity() {
        return remainedCapacity_;
      }
      /**
       * <pre>
       *剩余电池容量(单位:mAh)
       * </pre>
       *
       * <code>uint32 remainedCapacity = 6;</code>
       * @param value The remainedCapacity to set.
       * @return This builder for chaining.
       */
      public Builder setRemainedCapacity(int value) {
        
        remainedCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *剩余电池容量(单位:mAh)
       * </pre>
       *
       * <code>uint32 remainedCapacity = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemainedCapacity() {
        
        remainedCapacity_ = 0;
        onChanged();
        return this;
      }

      private float batteryTemperature_ ;
      /**
       * <pre>
       *电池温度(单位:摄氏度)
       * </pre>
       *
       * <code>float batteryTemperature = 7;</code>
       * @return The batteryTemperature.
       */
      @Override
      public float getBatteryTemperature() {
        return batteryTemperature_;
      }
      /**
       * <pre>
       *电池温度(单位:摄氏度)
       * </pre>
       *
       * <code>float batteryTemperature = 7;</code>
       * @param value The batteryTemperature to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryTemperature(float value) {
        
        batteryTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池温度(单位:摄氏度)
       * </pre>
       *
       * <code>float batteryTemperature = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryTemperature() {
        
        batteryTemperature_ = 0F;
        onChanged();
        return this;
      }

      private int cellCount_ ;
      /**
       * <pre>
       *电池组数(电池硬件型号有关)
       * </pre>
       *
       * <code>uint32 cellCount = 8;</code>
       * @return The cellCount.
       */
      @Override
      public int getCellCount() {
        return cellCount_;
      }
      /**
       * <pre>
       *电池组数(电池硬件型号有关)
       * </pre>
       *
       * <code>uint32 cellCount = 8;</code>
       * @param value The cellCount to set.
       * @return This builder for chaining.
       */
      public Builder setCellCount(int value) {
        
        cellCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池组数(电池硬件型号有关)
       * </pre>
       *
       * <code>uint32 cellCount = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCellCount() {
        
        cellCount_ = 0;
        onChanged();
        return this;
      }

      private int batSOHState_ ;
      /**
       * <pre>
       *电池循环健康状态：0=正常，1=警报，2=注意安全
       * </pre>
       *
       * <code>uint32 batSOHState = 9;</code>
       * @return The batSOHState.
       */
      @Override
      public int getBatSOHState() {
        return batSOHState_;
      }
      /**
       * <pre>
       *电池循环健康状态：0=正常，1=警报，2=注意安全
       * </pre>
       *
       * <code>uint32 batSOHState = 9;</code>
       * @param value The batSOHState to set.
       * @return This builder for chaining.
       */
      public Builder setBatSOHState(int value) {
        
        batSOHState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池循环健康状态：0=正常，1=警报，2=注意安全
       * </pre>
       *
       * <code>uint32 batSOHState = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatSOHState() {
        
        batSOHState_ = 0;
        onChanged();
        return this;
      }

      private int sop_ ;
      /**
       * <pre>
       *相对功率百分比(Relative power percentage)	
       * </pre>
       *
       * <code>uint32 sop = 10;</code>
       * @return The sop.
       */
      @Override
      public int getSop() {
        return sop_;
      }
      /**
       * <pre>
       *相对功率百分比(Relative power percentage)	
       * </pre>
       *
       * <code>uint32 sop = 10;</code>
       * @param value The sop to set.
       * @return This builder for chaining.
       */
      public Builder setSop(int value) {
        
        sop_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相对功率百分比(Relative power percentage)	
       * </pre>
       *
       * <code>uint32 sop = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSop() {
        
        sop_ = 0;
        onChanged();
        return this;
      }

      private int heatState_ ;
      /**
       * <pre>
       *电池加热状态：0=未加热，1=加热中，2=保持恒温
       * </pre>
       *
       * <code>uint32 heatState = 11;</code>
       * @return The heatState.
       */
      @Override
      public int getHeatState() {
        return heatState_;
      }
      /**
       * <pre>
       *电池加热状态：0=未加热，1=加热中，2=保持恒温
       * </pre>
       *
       * <code>uint32 heatState = 11;</code>
       * @param value The heatState to set.
       * @return This builder for chaining.
       */
      public Builder setHeatState(int value) {
        
        heatState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池加热状态：0=未加热，1=加热中，2=保持恒温
       * </pre>
       *
       * <code>uint32 heatState = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeatState() {
        
        heatState_ = 0;
        onChanged();
        return this;
      }

      private int socState_ ;
      /**
       * <pre>
       *电池SOC荷电状态: 0=SOC正常，1=SOC_ABNORMAL_HIGH，2=SOC_JUMP_DOWN，3=SOC_JUMP_UP，4=SOC_INVALID
       * </pre>
       *
       * <code>uint32 socState = 12;</code>
       * @return The socState.
       */
      @Override
      public int getSocState() {
        return socState_;
      }
      /**
       * <pre>
       *电池SOC荷电状态: 0=SOC正常，1=SOC_ABNORMAL_HIGH，2=SOC_JUMP_DOWN，3=SOC_JUMP_UP，4=SOC_INVALID
       * </pre>
       *
       * <code>uint32 socState = 12;</code>
       * @param value The socState to set.
       * @return This builder for chaining.
       */
      public Builder setSocState(int value) {
        
        socState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池SOC荷电状态: 0=SOC正常，1=SOC_ABNORMAL_HIGH，2=SOC_JUMP_DOWN，3=SOC_JUMP_UP，4=SOC_INVALID
       * </pre>
       *
       * <code>uint32 socState = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSocState() {
        
        socState_ = 0;
        onChanged();
        return this;
      }

      private int selfCheckError_ ;
      /**
       * <pre>
       *电池自检错误标志(注意：如果此值非0，就是电池损坏需要维修)：0=正常，1=电池自检NTC异常，2=电池自检MOS异常，3=电池自检采样电阻异常，4=电池电芯损坏，5=电池未校准，6=电量计参数异常
       * </pre>
       *
       * <code>uint32 selfCheckError = 13;</code>
       * @return The selfCheckError.
       */
      @Override
      public int getSelfCheckError() {
        return selfCheckError_;
      }
      /**
       * <pre>
       *电池自检错误标志(注意：如果此值非0，就是电池损坏需要维修)：0=正常，1=电池自检NTC异常，2=电池自检MOS异常，3=电池自检采样电阻异常，4=电池电芯损坏，5=电池未校准，6=电量计参数异常
       * </pre>
       *
       * <code>uint32 selfCheckError = 13;</code>
       * @param value The selfCheckError to set.
       * @return This builder for chaining.
       */
      public Builder setSelfCheckError(int value) {
        
        selfCheckError_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池自检错误标志(注意：如果此值非0，就是电池损坏需要维修)：0=正常，1=电池自检NTC异常，2=电池自检MOS异常，3=电池自检采样电阻异常，4=电池电芯损坏，5=电池未校准，6=电量计参数异常
       * </pre>
       *
       * <code>uint32 selfCheckError = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearSelfCheckError() {
        
        selfCheckError_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BatteryStateInfo)
    }

    // @@protoc_insertion_point(class_scope:BatteryStateInfo)
    private static final BatteryStateInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BatteryStateInfo();
    }

    public static BatteryStateInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatteryStateInfo>
        PARSER = new com.google.protobuf.AbstractParser<BatteryStateInfo>() {
      @Override
      public BatteryStateInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BatteryStateInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BatteryStateInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BatteryStateInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public BatteryStateInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PtzStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PtzState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *俯仰角 范围：-120° ~ 30°
     * </pre>
     *
     * <code>float pitch = 1;</code>
     * @return The pitch.
     */
    float getPitch();

    /**
     * <pre>
     *横滚角 范围：-90° ~ 60°
     * </pre>
     *
     * <code>float roll = 2;</code>
     * @return The roll.
     */
    float getRoll();

    /**
     * <pre>
     *偏航角  范围：-180° ~ 180°
     * </pre>
     *
     * <code>float yaw = 3;</code>
     * @return The yaw.
     */
    float getYaw();

    /**
     * <pre>
     *云台模式 1=自由模式，2=跟随模式，3=FPV模式
     * </pre>
     *
     * <code>uint32 gimbalMode = 4;</code>
     * @return The gimbalMode.
     */
    int getGimbalMode();
  }
  /**
   * <pre>
   *云台状态
   * </pre>
   *
   * Protobuf type {@code PtzState}
   */
  public static final class PtzState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PtzState)
      PtzStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PtzState.newBuilder() to construct.
    private PtzState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PtzState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PtzState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PtzState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              pitch_ = input.readFloat();
              break;
            }
            case 21: {

              roll_ = input.readFloat();
              break;
            }
            case 29: {

              yaw_ = input.readFloat();
              break;
            }
            case 32: {

              gimbalMode_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_PtzState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_PtzState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PtzState.class, Builder.class);
    }

    public static final int PITCH_FIELD_NUMBER = 1;
    private float pitch_;
    /**
     * <pre>
     *俯仰角 范围：-120° ~ 30°
     * </pre>
     *
     * <code>float pitch = 1;</code>
     * @return The pitch.
     */
    @Override
    public float getPitch() {
      return pitch_;
    }

    public static final int ROLL_FIELD_NUMBER = 2;
    private float roll_;
    /**
     * <pre>
     *横滚角 范围：-90° ~ 60°
     * </pre>
     *
     * <code>float roll = 2;</code>
     * @return The roll.
     */
    @Override
    public float getRoll() {
      return roll_;
    }

    public static final int YAW_FIELD_NUMBER = 3;
    private float yaw_;
    /**
     * <pre>
     *偏航角  范围：-180° ~ 180°
     * </pre>
     *
     * <code>float yaw = 3;</code>
     * @return The yaw.
     */
    @Override
    public float getYaw() {
      return yaw_;
    }

    public static final int GIMBALMODE_FIELD_NUMBER = 4;
    private int gimbalMode_;
    /**
     * <pre>
     *云台模式 1=自由模式，2=跟随模式，3=FPV模式
     * </pre>
     *
     * <code>uint32 gimbalMode = 4;</code>
     * @return The gimbalMode.
     */
    @Override
    public int getGimbalMode() {
      return gimbalMode_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pitch_ != 0F) {
        output.writeFloat(1, pitch_);
      }
      if (roll_ != 0F) {
        output.writeFloat(2, roll_);
      }
      if (yaw_ != 0F) {
        output.writeFloat(3, yaw_);
      }
      if (gimbalMode_ != 0) {
        output.writeUInt32(4, gimbalMode_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pitch_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, pitch_);
      }
      if (roll_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, roll_);
      }
      if (yaw_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, yaw_);
      }
      if (gimbalMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gimbalMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PtzState)) {
        return super.equals(obj);
      }
      PtzState other = (PtzState) obj;

      if (Float.floatToIntBits(getPitch())
          != Float.floatToIntBits(
              other.getPitch())) return false;
      if (Float.floatToIntBits(getRoll())
          != Float.floatToIntBits(
              other.getRoll())) return false;
      if (Float.floatToIntBits(getYaw())
          != Float.floatToIntBits(
              other.getYaw())) return false;
      if (getGimbalMode()
          != other.getGimbalMode()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PITCH_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPitch());
      hash = (37 * hash) + ROLL_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRoll());
      hash = (37 * hash) + YAW_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getYaw());
      hash = (37 * hash) + GIMBALMODE_FIELD_NUMBER;
      hash = (53 * hash) + getGimbalMode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PtzState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PtzState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PtzState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PtzState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PtzState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PtzState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PtzState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PtzState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PtzState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PtzState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PtzState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PtzState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PtzState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *云台状态
     * </pre>
     *
     * Protobuf type {@code PtzState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PtzState)
        PtzStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_PtzState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_PtzState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PtzState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.PtzState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        pitch_ = 0F;

        roll_ = 0F;

        yaw_ = 0F;

        gimbalMode_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_PtzState_descriptor;
      }

      @Override
      public PtzState getDefaultInstanceForType() {
        return PtzState.getDefaultInstance();
      }

      @Override
      public PtzState build() {
        PtzState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PtzState buildPartial() {
        PtzState result = new PtzState(this);
        result.pitch_ = pitch_;
        result.roll_ = roll_;
        result.yaw_ = yaw_;
        result.gimbalMode_ = gimbalMode_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PtzState) {
          return mergeFrom((PtzState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PtzState other) {
        if (other == PtzState.getDefaultInstance()) return this;
        if (other.getPitch() != 0F) {
          setPitch(other.getPitch());
        }
        if (other.getRoll() != 0F) {
          setRoll(other.getRoll());
        }
        if (other.getYaw() != 0F) {
          setYaw(other.getYaw());
        }
        if (other.getGimbalMode() != 0) {
          setGimbalMode(other.getGimbalMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PtzState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PtzState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float pitch_ ;
      /**
       * <pre>
       *俯仰角 范围：-120° ~ 30°
       * </pre>
       *
       * <code>float pitch = 1;</code>
       * @return The pitch.
       */
      @Override
      public float getPitch() {
        return pitch_;
      }
      /**
       * <pre>
       *俯仰角 范围：-120° ~ 30°
       * </pre>
       *
       * <code>float pitch = 1;</code>
       * @param value The pitch to set.
       * @return This builder for chaining.
       */
      public Builder setPitch(float value) {
        
        pitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *俯仰角 范围：-120° ~ 30°
       * </pre>
       *
       * <code>float pitch = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitch() {
        
        pitch_ = 0F;
        onChanged();
        return this;
      }

      private float roll_ ;
      /**
       * <pre>
       *横滚角 范围：-90° ~ 60°
       * </pre>
       *
       * <code>float roll = 2;</code>
       * @return The roll.
       */
      @Override
      public float getRoll() {
        return roll_;
      }
      /**
       * <pre>
       *横滚角 范围：-90° ~ 60°
       * </pre>
       *
       * <code>float roll = 2;</code>
       * @param value The roll to set.
       * @return This builder for chaining.
       */
      public Builder setRoll(float value) {
        
        roll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *横滚角 范围：-90° ~ 60°
       * </pre>
       *
       * <code>float roll = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoll() {
        
        roll_ = 0F;
        onChanged();
        return this;
      }

      private float yaw_ ;
      /**
       * <pre>
       *偏航角  范围：-180° ~ 180°
       * </pre>
       *
       * <code>float yaw = 3;</code>
       * @return The yaw.
       */
      @Override
      public float getYaw() {
        return yaw_;
      }
      /**
       * <pre>
       *偏航角  范围：-180° ~ 180°
       * </pre>
       *
       * <code>float yaw = 3;</code>
       * @param value The yaw to set.
       * @return This builder for chaining.
       */
      public Builder setYaw(float value) {
        
        yaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *偏航角  范围：-180° ~ 180°
       * </pre>
       *
       * <code>float yaw = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearYaw() {
        
        yaw_ = 0F;
        onChanged();
        return this;
      }

      private int gimbalMode_ ;
      /**
       * <pre>
       *云台模式 1=自由模式，2=跟随模式，3=FPV模式
       * </pre>
       *
       * <code>uint32 gimbalMode = 4;</code>
       * @return The gimbalMode.
       */
      @Override
      public int getGimbalMode() {
        return gimbalMode_;
      }
      /**
       * <pre>
       *云台模式 1=自由模式，2=跟随模式，3=FPV模式
       * </pre>
       *
       * <code>uint32 gimbalMode = 4;</code>
       * @param value The gimbalMode to set.
       * @return This builder for chaining.
       */
      public Builder setGimbalMode(int value) {
        
        gimbalMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云台模式 1=自由模式，2=跟随模式，3=FPV模式
       * </pre>
       *
       * <code>uint32 gimbalMode = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGimbalMode() {
        
        gimbalMode_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PtzState)
    }

    // @@protoc_insertion_point(class_scope:PtzState)
    private static final PtzState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PtzState();
    }

    public static PtzState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PtzState>
        PARSER = new com.google.protobuf.AbstractParser<PtzState>() {
      @Override
      public PtzState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PtzState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PtzState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PtzState> getParserForType() {
      return PARSER;
    }

    @Override
    public PtzState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CameraStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CameraState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *相机模式：1=拍照模式，2=录像模式，0=未知
     * </pre>
     *
     * <code>uint32 mode = 1;</code>
     * @return The mode.
     */
    int getMode();

    /**
     * <pre>
     *是否录制中：1=录制中，0=未录制
     * </pre>
     *
     * <code>uint32 isRecording = 2;</code>
     * @return The isRecording.
     */
    int getIsRecording();

    /**
     * <pre>
     *录制时长(单位:秒)
     * </pre>
     *
     * <code>uint32 recordDuration = 3;</code>
     * @return The recordDuration.
     */
    int getRecordDuration();

    /**
     * <pre>
     *相机视源：0=可见，1=变焦，2=红外
     * </pre>
     *
     * <code>uint32 source = 4;</code>
     * @return The source.
     */
    int getSource();

    /**
     * <pre>
     *相机: 0=FPV，1=相机(1)，2=相机(2)
     * </pre>
     *
     * <code>uint32 camera = 5;</code>
     * @return The camera.
     */
    int getCamera();

    /**
     * <pre>
     *相机当前变焦倍数
     * </pre>
     *
     * <code>float zoomfactor = 6;</code>
     * @return The zoomfactor.
     */
    float getZoomfactor();

    /**
     * <pre>
     *水平像素(例如：1920)
     * </pre>
     *
     * <code>uint32 width = 7;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <pre>
     *垂直像素(例如：1080)
     * </pre>
     *
     * <code>uint32 height = 8;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <pre>
     *帧率(例如：30)
     * </pre>
     *
     * <code>uint32 frameRate = 9;</code>
     * @return The frameRate.
     */
    int getFrameRate();

    /**
     * <pre>
     *码率(单位：0.001)(例如：6兆设置值为6000)
     * </pre>
     *
     * <code>uint32 bitstream = 10;</code>
     * @return The bitstream.
     */
    int getBitstream();

    /**
     * <pre>
     *单点测温状态：0=非单点测温中，1=单点测温中
     * </pre>
     *
     * <code>uint32 pointThermometrying = 11;</code>
     * @return The pointThermometrying.
     */
    int getPointThermometrying();

    /**
     * <pre>
     *区域测温状态：0=非区域测温中，1=区域测温中
     * </pre>
     *
     * <code>uint32 areaThermometrying = 12;</code>
     * @return The areaThermometrying.
     */
    int getAreaThermometrying();

    /**
     * <pre>
     *激光测距状态：0=非激光测距中，1=激光测距中
     * </pre>
     *
     * <code>uint32 laserRanging = 13;</code>
     * @return The laserRanging.
     */
    int getLaserRanging();

    /**
     * <pre>
     *相机TF卡剩余空间百分比
     * </pre>
     *
     * <code>float storePercent = 14;</code>
     * @return The storePercent.
     */
    float getStorePercent();

    /**
     * <pre>
     *本次上电已回传图片的总张数
     * </pre>
     *
     * <code>uint32 totalPhoto = 15;</code>
     * @return The totalPhoto.
     */
    int getTotalPhoto();

    /**
     * <pre>
     *未回传图片的剩余张数
     * </pre>
     *
     * <code>uint32 remainedPhoto = 16;</code>
     * @return The remainedPhoto.
     */
    int getRemainedPhoto();
  }
  /**
   * <pre>
   *相机状态
   * </pre>
   *
   * Protobuf type {@code CameraState}
   */
  public static final class CameraState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CameraState)
      CameraStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CameraState.newBuilder() to construct.
    private CameraState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new CameraState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CameraState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              mode_ = input.readUInt32();
              break;
            }
            case 16: {

              isRecording_ = input.readUInt32();
              break;
            }
            case 24: {

              recordDuration_ = input.readUInt32();
              break;
            }
            case 32: {

              source_ = input.readUInt32();
              break;
            }
            case 40: {

              camera_ = input.readUInt32();
              break;
            }
            case 53: {

              zoomfactor_ = input.readFloat();
              break;
            }
            case 56: {

              width_ = input.readUInt32();
              break;
            }
            case 64: {

              height_ = input.readUInt32();
              break;
            }
            case 72: {

              frameRate_ = input.readUInt32();
              break;
            }
            case 80: {

              bitstream_ = input.readUInt32();
              break;
            }
            case 88: {

              pointThermometrying_ = input.readUInt32();
              break;
            }
            case 96: {

              areaThermometrying_ = input.readUInt32();
              break;
            }
            case 104: {

              laserRanging_ = input.readUInt32();
              break;
            }
            case 117: {

              storePercent_ = input.readFloat();
              break;
            }
            case 120: {

              totalPhoto_ = input.readUInt32();
              break;
            }
            case 128: {

              remainedPhoto_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_CameraState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_CameraState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CameraState.class, Builder.class);
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <pre>
     *相机模式：1=拍照模式，2=录像模式，0=未知
     * </pre>
     *
     * <code>uint32 mode = 1;</code>
     * @return The mode.
     */
    @Override
    public int getMode() {
      return mode_;
    }

    public static final int ISRECORDING_FIELD_NUMBER = 2;
    private int isRecording_;
    /**
     * <pre>
     *是否录制中：1=录制中，0=未录制
     * </pre>
     *
     * <code>uint32 isRecording = 2;</code>
     * @return The isRecording.
     */
    @Override
    public int getIsRecording() {
      return isRecording_;
    }

    public static final int RECORDDURATION_FIELD_NUMBER = 3;
    private int recordDuration_;
    /**
     * <pre>
     *录制时长(单位:秒)
     * </pre>
     *
     * <code>uint32 recordDuration = 3;</code>
     * @return The recordDuration.
     */
    @Override
    public int getRecordDuration() {
      return recordDuration_;
    }

    public static final int SOURCE_FIELD_NUMBER = 4;
    private int source_;
    /**
     * <pre>
     *相机视源：0=可见，1=变焦，2=红外
     * </pre>
     *
     * <code>uint32 source = 4;</code>
     * @return The source.
     */
    @Override
    public int getSource() {
      return source_;
    }

    public static final int CAMERA_FIELD_NUMBER = 5;
    private int camera_;
    /**
     * <pre>
     *相机: 0=FPV，1=相机(1)，2=相机(2)
     * </pre>
     *
     * <code>uint32 camera = 5;</code>
     * @return The camera.
     */
    @Override
    public int getCamera() {
      return camera_;
    }

    public static final int ZOOMFACTOR_FIELD_NUMBER = 6;
    private float zoomfactor_;
    /**
     * <pre>
     *相机当前变焦倍数
     * </pre>
     *
     * <code>float zoomfactor = 6;</code>
     * @return The zoomfactor.
     */
    @Override
    public float getZoomfactor() {
      return zoomfactor_;
    }

    public static final int WIDTH_FIELD_NUMBER = 7;
    private int width_;
    /**
     * <pre>
     *水平像素(例如：1920)
     * </pre>
     *
     * <code>uint32 width = 7;</code>
     * @return The width.
     */
    @Override
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 8;
    private int height_;
    /**
     * <pre>
     *垂直像素(例如：1080)
     * </pre>
     *
     * <code>uint32 height = 8;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }

    public static final int FRAMERATE_FIELD_NUMBER = 9;
    private int frameRate_;
    /**
     * <pre>
     *帧率(例如：30)
     * </pre>
     *
     * <code>uint32 frameRate = 9;</code>
     * @return The frameRate.
     */
    @Override
    public int getFrameRate() {
      return frameRate_;
    }

    public static final int BITSTREAM_FIELD_NUMBER = 10;
    private int bitstream_;
    /**
     * <pre>
     *码率(单位：0.001)(例如：6兆设置值为6000)
     * </pre>
     *
     * <code>uint32 bitstream = 10;</code>
     * @return The bitstream.
     */
    @Override
    public int getBitstream() {
      return bitstream_;
    }

    public static final int POINTTHERMOMETRYING_FIELD_NUMBER = 11;
    private int pointThermometrying_;
    /**
     * <pre>
     *单点测温状态：0=非单点测温中，1=单点测温中
     * </pre>
     *
     * <code>uint32 pointThermometrying = 11;</code>
     * @return The pointThermometrying.
     */
    @Override
    public int getPointThermometrying() {
      return pointThermometrying_;
    }

    public static final int AREATHERMOMETRYING_FIELD_NUMBER = 12;
    private int areaThermometrying_;
    /**
     * <pre>
     *区域测温状态：0=非区域测温中，1=区域测温中
     * </pre>
     *
     * <code>uint32 areaThermometrying = 12;</code>
     * @return The areaThermometrying.
     */
    @Override
    public int getAreaThermometrying() {
      return areaThermometrying_;
    }

    public static final int LASERRANGING_FIELD_NUMBER = 13;
    private int laserRanging_;
    /**
     * <pre>
     *激光测距状态：0=非激光测距中，1=激光测距中
     * </pre>
     *
     * <code>uint32 laserRanging = 13;</code>
     * @return The laserRanging.
     */
    @Override
    public int getLaserRanging() {
      return laserRanging_;
    }

    public static final int STOREPERCENT_FIELD_NUMBER = 14;
    private float storePercent_;
    /**
     * <pre>
     *相机TF卡剩余空间百分比
     * </pre>
     *
     * <code>float storePercent = 14;</code>
     * @return The storePercent.
     */
    @Override
    public float getStorePercent() {
      return storePercent_;
    }

    public static final int TOTALPHOTO_FIELD_NUMBER = 15;
    private int totalPhoto_;
    /**
     * <pre>
     *本次上电已回传图片的总张数
     * </pre>
     *
     * <code>uint32 totalPhoto = 15;</code>
     * @return The totalPhoto.
     */
    @Override
    public int getTotalPhoto() {
      return totalPhoto_;
    }

    public static final int REMAINEDPHOTO_FIELD_NUMBER = 16;
    private int remainedPhoto_;
    /**
     * <pre>
     *未回传图片的剩余张数
     * </pre>
     *
     * <code>uint32 remainedPhoto = 16;</code>
     * @return The remainedPhoto.
     */
    @Override
    public int getRemainedPhoto() {
      return remainedPhoto_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != 0) {
        output.writeUInt32(1, mode_);
      }
      if (isRecording_ != 0) {
        output.writeUInt32(2, isRecording_);
      }
      if (recordDuration_ != 0) {
        output.writeUInt32(3, recordDuration_);
      }
      if (source_ != 0) {
        output.writeUInt32(4, source_);
      }
      if (camera_ != 0) {
        output.writeUInt32(5, camera_);
      }
      if (zoomfactor_ != 0F) {
        output.writeFloat(6, zoomfactor_);
      }
      if (width_ != 0) {
        output.writeUInt32(7, width_);
      }
      if (height_ != 0) {
        output.writeUInt32(8, height_);
      }
      if (frameRate_ != 0) {
        output.writeUInt32(9, frameRate_);
      }
      if (bitstream_ != 0) {
        output.writeUInt32(10, bitstream_);
      }
      if (pointThermometrying_ != 0) {
        output.writeUInt32(11, pointThermometrying_);
      }
      if (areaThermometrying_ != 0) {
        output.writeUInt32(12, areaThermometrying_);
      }
      if (laserRanging_ != 0) {
        output.writeUInt32(13, laserRanging_);
      }
      if (storePercent_ != 0F) {
        output.writeFloat(14, storePercent_);
      }
      if (totalPhoto_ != 0) {
        output.writeUInt32(15, totalPhoto_);
      }
      if (remainedPhoto_ != 0) {
        output.writeUInt32(16, remainedPhoto_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mode_);
      }
      if (isRecording_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, isRecording_);
      }
      if (recordDuration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, recordDuration_);
      }
      if (source_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, source_);
      }
      if (camera_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, camera_);
      }
      if (zoomfactor_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, zoomfactor_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, height_);
      }
      if (frameRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, frameRate_);
      }
      if (bitstream_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, bitstream_);
      }
      if (pointThermometrying_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, pointThermometrying_);
      }
      if (areaThermometrying_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, areaThermometrying_);
      }
      if (laserRanging_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, laserRanging_);
      }
      if (storePercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, storePercent_);
      }
      if (totalPhoto_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, totalPhoto_);
      }
      if (remainedPhoto_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, remainedPhoto_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CameraState)) {
        return super.equals(obj);
      }
      CameraState other = (CameraState) obj;

      if (getMode()
          != other.getMode()) return false;
      if (getIsRecording()
          != other.getIsRecording()) return false;
      if (getRecordDuration()
          != other.getRecordDuration()) return false;
      if (getSource()
          != other.getSource()) return false;
      if (getCamera()
          != other.getCamera()) return false;
      if (Float.floatToIntBits(getZoomfactor())
          != Float.floatToIntBits(
              other.getZoomfactor())) return false;
      if (getWidth()
          != other.getWidth()) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (getFrameRate()
          != other.getFrameRate()) return false;
      if (getBitstream()
          != other.getBitstream()) return false;
      if (getPointThermometrying()
          != other.getPointThermometrying()) return false;
      if (getAreaThermometrying()
          != other.getAreaThermometrying()) return false;
      if (getLaserRanging()
          != other.getLaserRanging()) return false;
      if (Float.floatToIntBits(getStorePercent())
          != Float.floatToIntBits(
              other.getStorePercent())) return false;
      if (getTotalPhoto()
          != other.getTotalPhoto()) return false;
      if (getRemainedPhoto()
          != other.getRemainedPhoto()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (37 * hash) + ISRECORDING_FIELD_NUMBER;
      hash = (53 * hash) + getIsRecording();
      hash = (37 * hash) + RECORDDURATION_FIELD_NUMBER;
      hash = (53 * hash) + getRecordDuration();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource();
      hash = (37 * hash) + CAMERA_FIELD_NUMBER;
      hash = (53 * hash) + getCamera();
      hash = (37 * hash) + ZOOMFACTOR_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getZoomfactor());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (37 * hash) + FRAMERATE_FIELD_NUMBER;
      hash = (53 * hash) + getFrameRate();
      hash = (37 * hash) + BITSTREAM_FIELD_NUMBER;
      hash = (53 * hash) + getBitstream();
      hash = (37 * hash) + POINTTHERMOMETRYING_FIELD_NUMBER;
      hash = (53 * hash) + getPointThermometrying();
      hash = (37 * hash) + AREATHERMOMETRYING_FIELD_NUMBER;
      hash = (53 * hash) + getAreaThermometrying();
      hash = (37 * hash) + LASERRANGING_FIELD_NUMBER;
      hash = (53 * hash) + getLaserRanging();
      hash = (37 * hash) + STOREPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getStorePercent());
      hash = (37 * hash) + TOTALPHOTO_FIELD_NUMBER;
      hash = (53 * hash) + getTotalPhoto();
      hash = (37 * hash) + REMAINEDPHOTO_FIELD_NUMBER;
      hash = (53 * hash) + getRemainedPhoto();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CameraState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CameraState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CameraState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CameraState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CameraState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CameraState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CameraState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CameraState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CameraState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CameraState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CameraState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CameraState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CameraState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *相机状态
     * </pre>
     *
     * Protobuf type {@code CameraState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CameraState)
        CameraStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_CameraState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_CameraState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CameraState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.CameraState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        mode_ = 0;

        isRecording_ = 0;

        recordDuration_ = 0;

        source_ = 0;

        camera_ = 0;

        zoomfactor_ = 0F;

        width_ = 0;

        height_ = 0;

        frameRate_ = 0;

        bitstream_ = 0;

        pointThermometrying_ = 0;

        areaThermometrying_ = 0;

        laserRanging_ = 0;

        storePercent_ = 0F;

        totalPhoto_ = 0;

        remainedPhoto_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_CameraState_descriptor;
      }

      @Override
      public CameraState getDefaultInstanceForType() {
        return CameraState.getDefaultInstance();
      }

      @Override
      public CameraState build() {
        CameraState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public CameraState buildPartial() {
        CameraState result = new CameraState(this);
        result.mode_ = mode_;
        result.isRecording_ = isRecording_;
        result.recordDuration_ = recordDuration_;
        result.source_ = source_;
        result.camera_ = camera_;
        result.zoomfactor_ = zoomfactor_;
        result.width_ = width_;
        result.height_ = height_;
        result.frameRate_ = frameRate_;
        result.bitstream_ = bitstream_;
        result.pointThermometrying_ = pointThermometrying_;
        result.areaThermometrying_ = areaThermometrying_;
        result.laserRanging_ = laserRanging_;
        result.storePercent_ = storePercent_;
        result.totalPhoto_ = totalPhoto_;
        result.remainedPhoto_ = remainedPhoto_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CameraState) {
          return mergeFrom((CameraState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CameraState other) {
        if (other == CameraState.getDefaultInstance()) return this;
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        if (other.getIsRecording() != 0) {
          setIsRecording(other.getIsRecording());
        }
        if (other.getRecordDuration() != 0) {
          setRecordDuration(other.getRecordDuration());
        }
        if (other.getSource() != 0) {
          setSource(other.getSource());
        }
        if (other.getCamera() != 0) {
          setCamera(other.getCamera());
        }
        if (other.getZoomfactor() != 0F) {
          setZoomfactor(other.getZoomfactor());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (other.getFrameRate() != 0) {
          setFrameRate(other.getFrameRate());
        }
        if (other.getBitstream() != 0) {
          setBitstream(other.getBitstream());
        }
        if (other.getPointThermometrying() != 0) {
          setPointThermometrying(other.getPointThermometrying());
        }
        if (other.getAreaThermometrying() != 0) {
          setAreaThermometrying(other.getAreaThermometrying());
        }
        if (other.getLaserRanging() != 0) {
          setLaserRanging(other.getLaserRanging());
        }
        if (other.getStorePercent() != 0F) {
          setStorePercent(other.getStorePercent());
        }
        if (other.getTotalPhoto() != 0) {
          setTotalPhoto(other.getTotalPhoto());
        }
        if (other.getRemainedPhoto() != 0) {
          setRemainedPhoto(other.getRemainedPhoto());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CameraState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CameraState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ ;
      /**
       * <pre>
       *相机模式：1=拍照模式，2=录像模式，0=未知
       * </pre>
       *
       * <code>uint32 mode = 1;</code>
       * @return The mode.
       */
      @Override
      public int getMode() {
        return mode_;
      }
      /**
       * <pre>
       *相机模式：1=拍照模式，2=录像模式，0=未知
       * </pre>
       *
       * <code>uint32 mode = 1;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机模式：1=拍照模式，2=录像模式，0=未知
       * </pre>
       *
       * <code>uint32 mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private int isRecording_ ;
      /**
       * <pre>
       *是否录制中：1=录制中，0=未录制
       * </pre>
       *
       * <code>uint32 isRecording = 2;</code>
       * @return The isRecording.
       */
      @Override
      public int getIsRecording() {
        return isRecording_;
      }
      /**
       * <pre>
       *是否录制中：1=录制中，0=未录制
       * </pre>
       *
       * <code>uint32 isRecording = 2;</code>
       * @param value The isRecording to set.
       * @return This builder for chaining.
       */
      public Builder setIsRecording(int value) {
        
        isRecording_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否录制中：1=录制中，0=未录制
       * </pre>
       *
       * <code>uint32 isRecording = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsRecording() {
        
        isRecording_ = 0;
        onChanged();
        return this;
      }

      private int recordDuration_ ;
      /**
       * <pre>
       *录制时长(单位:秒)
       * </pre>
       *
       * <code>uint32 recordDuration = 3;</code>
       * @return The recordDuration.
       */
      @Override
      public int getRecordDuration() {
        return recordDuration_;
      }
      /**
       * <pre>
       *录制时长(单位:秒)
       * </pre>
       *
       * <code>uint32 recordDuration = 3;</code>
       * @param value The recordDuration to set.
       * @return This builder for chaining.
       */
      public Builder setRecordDuration(int value) {
        
        recordDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *录制时长(单位:秒)
       * </pre>
       *
       * <code>uint32 recordDuration = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecordDuration() {
        
        recordDuration_ = 0;
        onChanged();
        return this;
      }

      private int source_ ;
      /**
       * <pre>
       *相机视源：0=可见，1=变焦，2=红外
       * </pre>
       *
       * <code>uint32 source = 4;</code>
       * @return The source.
       */
      @Override
      public int getSource() {
        return source_;
      }
      /**
       * <pre>
       *相机视源：0=可见，1=变焦，2=红外
       * </pre>
       *
       * <code>uint32 source = 4;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(int value) {
        
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机视源：0=可见，1=变焦，2=红外
       * </pre>
       *
       * <code>uint32 source = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        
        source_ = 0;
        onChanged();
        return this;
      }

      private int camera_ ;
      /**
       * <pre>
       *相机: 0=FPV，1=相机(1)，2=相机(2)
       * </pre>
       *
       * <code>uint32 camera = 5;</code>
       * @return The camera.
       */
      @Override
      public int getCamera() {
        return camera_;
      }
      /**
       * <pre>
       *相机: 0=FPV，1=相机(1)，2=相机(2)
       * </pre>
       *
       * <code>uint32 camera = 5;</code>
       * @param value The camera to set.
       * @return This builder for chaining.
       */
      public Builder setCamera(int value) {
        
        camera_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机: 0=FPV，1=相机(1)，2=相机(2)
       * </pre>
       *
       * <code>uint32 camera = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCamera() {
        
        camera_ = 0;
        onChanged();
        return this;
      }

      private float zoomfactor_ ;
      /**
       * <pre>
       *相机当前变焦倍数
       * </pre>
       *
       * <code>float zoomfactor = 6;</code>
       * @return The zoomfactor.
       */
      @Override
      public float getZoomfactor() {
        return zoomfactor_;
      }
      /**
       * <pre>
       *相机当前变焦倍数
       * </pre>
       *
       * <code>float zoomfactor = 6;</code>
       * @param value The zoomfactor to set.
       * @return This builder for chaining.
       */
      public Builder setZoomfactor(float value) {
        
        zoomfactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机当前变焦倍数
       * </pre>
       *
       * <code>float zoomfactor = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearZoomfactor() {
        
        zoomfactor_ = 0F;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       *水平像素(例如：1920)
       * </pre>
       *
       * <code>uint32 width = 7;</code>
       * @return The width.
       */
      @Override
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       *水平像素(例如：1920)
       * </pre>
       *
       * <code>uint32 width = 7;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *水平像素(例如：1920)
       * </pre>
       *
       * <code>uint32 width = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *垂直像素(例如：1080)
       * </pre>
       *
       * <code>uint32 height = 8;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *垂直像素(例如：1080)
       * </pre>
       *
       * <code>uint32 height = 8;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *垂直像素(例如：1080)
       * </pre>
       *
       * <code>uint32 height = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      private int frameRate_ ;
      /**
       * <pre>
       *帧率(例如：30)
       * </pre>
       *
       * <code>uint32 frameRate = 9;</code>
       * @return The frameRate.
       */
      @Override
      public int getFrameRate() {
        return frameRate_;
      }
      /**
       * <pre>
       *帧率(例如：30)
       * </pre>
       *
       * <code>uint32 frameRate = 9;</code>
       * @param value The frameRate to set.
       * @return This builder for chaining.
       */
      public Builder setFrameRate(int value) {
        
        frameRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧率(例如：30)
       * </pre>
       *
       * <code>uint32 frameRate = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameRate() {
        
        frameRate_ = 0;
        onChanged();
        return this;
      }

      private int bitstream_ ;
      /**
       * <pre>
       *码率(单位：0.001)(例如：6兆设置值为6000)
       * </pre>
       *
       * <code>uint32 bitstream = 10;</code>
       * @return The bitstream.
       */
      @Override
      public int getBitstream() {
        return bitstream_;
      }
      /**
       * <pre>
       *码率(单位：0.001)(例如：6兆设置值为6000)
       * </pre>
       *
       * <code>uint32 bitstream = 10;</code>
       * @param value The bitstream to set.
       * @return This builder for chaining.
       */
      public Builder setBitstream(int value) {
        
        bitstream_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *码率(单位：0.001)(例如：6兆设置值为6000)
       * </pre>
       *
       * <code>uint32 bitstream = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearBitstream() {
        
        bitstream_ = 0;
        onChanged();
        return this;
      }

      private int pointThermometrying_ ;
      /**
       * <pre>
       *单点测温状态：0=非单点测温中，1=单点测温中
       * </pre>
       *
       * <code>uint32 pointThermometrying = 11;</code>
       * @return The pointThermometrying.
       */
      @Override
      public int getPointThermometrying() {
        return pointThermometrying_;
      }
      /**
       * <pre>
       *单点测温状态：0=非单点测温中，1=单点测温中
       * </pre>
       *
       * <code>uint32 pointThermometrying = 11;</code>
       * @param value The pointThermometrying to set.
       * @return This builder for chaining.
       */
      public Builder setPointThermometrying(int value) {
        
        pointThermometrying_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *单点测温状态：0=非单点测温中，1=单点测温中
       * </pre>
       *
       * <code>uint32 pointThermometrying = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointThermometrying() {
        
        pointThermometrying_ = 0;
        onChanged();
        return this;
      }

      private int areaThermometrying_ ;
      /**
       * <pre>
       *区域测温状态：0=非区域测温中，1=区域测温中
       * </pre>
       *
       * <code>uint32 areaThermometrying = 12;</code>
       * @return The areaThermometrying.
       */
      @Override
      public int getAreaThermometrying() {
        return areaThermometrying_;
      }
      /**
       * <pre>
       *区域测温状态：0=非区域测温中，1=区域测温中
       * </pre>
       *
       * <code>uint32 areaThermometrying = 12;</code>
       * @param value The areaThermometrying to set.
       * @return This builder for chaining.
       */
      public Builder setAreaThermometrying(int value) {
        
        areaThermometrying_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区域测温状态：0=非区域测温中，1=区域测温中
       * </pre>
       *
       * <code>uint32 areaThermometrying = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAreaThermometrying() {
        
        areaThermometrying_ = 0;
        onChanged();
        return this;
      }

      private int laserRanging_ ;
      /**
       * <pre>
       *激光测距状态：0=非激光测距中，1=激光测距中
       * </pre>
       *
       * <code>uint32 laserRanging = 13;</code>
       * @return The laserRanging.
       */
      @Override
      public int getLaserRanging() {
        return laserRanging_;
      }
      /**
       * <pre>
       *激光测距状态：0=非激光测距中，1=激光测距中
       * </pre>
       *
       * <code>uint32 laserRanging = 13;</code>
       * @param value The laserRanging to set.
       * @return This builder for chaining.
       */
      public Builder setLaserRanging(int value) {
        
        laserRanging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *激光测距状态：0=非激光测距中，1=激光测距中
       * </pre>
       *
       * <code>uint32 laserRanging = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserRanging() {
        
        laserRanging_ = 0;
        onChanged();
        return this;
      }

      private float storePercent_ ;
      /**
       * <pre>
       *相机TF卡剩余空间百分比
       * </pre>
       *
       * <code>float storePercent = 14;</code>
       * @return The storePercent.
       */
      @Override
      public float getStorePercent() {
        return storePercent_;
      }
      /**
       * <pre>
       *相机TF卡剩余空间百分比
       * </pre>
       *
       * <code>float storePercent = 14;</code>
       * @param value The storePercent to set.
       * @return This builder for chaining.
       */
      public Builder setStorePercent(float value) {
        
        storePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机TF卡剩余空间百分比
       * </pre>
       *
       * <code>float storePercent = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearStorePercent() {
        
        storePercent_ = 0F;
        onChanged();
        return this;
      }

      private int totalPhoto_ ;
      /**
       * <pre>
       *本次上电已回传图片的总张数
       * </pre>
       *
       * <code>uint32 totalPhoto = 15;</code>
       * @return The totalPhoto.
       */
      @Override
      public int getTotalPhoto() {
        return totalPhoto_;
      }
      /**
       * <pre>
       *本次上电已回传图片的总张数
       * </pre>
       *
       * <code>uint32 totalPhoto = 15;</code>
       * @param value The totalPhoto to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPhoto(int value) {
        
        totalPhoto_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *本次上电已回传图片的总张数
       * </pre>
       *
       * <code>uint32 totalPhoto = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPhoto() {
        
        totalPhoto_ = 0;
        onChanged();
        return this;
      }

      private int remainedPhoto_ ;
      /**
       * <pre>
       *未回传图片的剩余张数
       * </pre>
       *
       * <code>uint32 remainedPhoto = 16;</code>
       * @return The remainedPhoto.
       */
      @Override
      public int getRemainedPhoto() {
        return remainedPhoto_;
      }
      /**
       * <pre>
       *未回传图片的剩余张数
       * </pre>
       *
       * <code>uint32 remainedPhoto = 16;</code>
       * @param value The remainedPhoto to set.
       * @return This builder for chaining.
       */
      public Builder setRemainedPhoto(int value) {
        
        remainedPhoto_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未回传图片的剩余张数
       * </pre>
       *
       * <code>uint32 remainedPhoto = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemainedPhoto() {
        
        remainedPhoto_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CameraState)
    }

    // @@protoc_insertion_point(class_scope:CameraState)
    private static final CameraState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CameraState();
    }

    public static CameraState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CameraState>
        PARSER = new com.google.protobuf.AbstractParser<CameraState>() {
      @Override
      public CameraState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CameraState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CameraState> getParserForType() {
      return PARSER;
    }

    @Override
    public CameraState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MissionStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MissionState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *航线是否暂停中：0=未暂停，1=暂停中
     * </pre>
     *
     * <code>uint32 isPause = 1;</code>
     * @return The isPause.
     */
    int getIsPause();

    /**
     * <pre>
     *目标航点下标(说明：开始成功到第一个航点之间此值为0，到达第一个航点此值为1，到达第二个航点此值为2，以此类推)
     * </pre>
     *
     * <code>uint32 targetWaypointIndex = 2;</code>
     * @return The targetWaypointIndex.
     */
    int getTargetWaypointIndex();

    /**
     * <pre>
     *是否航点完成：1完成、0未完成(此值废弃)
     * </pre>
     *
     * <code>uint32 isWaypointFinished = 3;</code>
     * @return The isWaypointFinished.
     */
    int getIsWaypointFinished();

    /**
     * <pre>
     *云盒是否发送视频数据：0=不发送，1=发送
     * </pre>
     *
     * <code>uint32 pushVideo = 4;</code>
     * @return The pushVideo.
     */
    int getPushVideo();

    /**
     * <pre>
     *是否锁定4G：0=不锁定，1=锁定
     * </pre>
     *
     * <code>uint32 lock4g = 5;</code>
     * @return The lock4g.
     */
    int getLock4G();

    /**
     * <pre>
     *是否开通图片自动回传功能：0=未开通，1=已开通
     * </pre>
     *
     * <code>uint32 boxModel = 6;</code>
     * @return The boxModel.
     */
    int getBoxModel();

    /**
     * <pre>
     *自动拍照间隔：0未开始，3~255间隔时间
     * </pre>
     *
     * <code>uint32 mapPlay = 7;</code>
     * @return The mapPlay.
     */
    int getMapPlay();

    /**
     * <pre>
     *网络失联后动作：0=返回HOME点，1=继续航线
     * </pre>
     *
     * <code>uint32 loseAction = 8;</code>
     * @return The loseAction.
     */
    int getLoseAction();

    /**
     * <pre>
     *是否打点飞行控制中：0=否，1=是
     * </pre>
     *
     * <code>uint32 isPointControl = 9;</code>
     * @return The isPointControl.
     */
    int getIsPointControl();

    /**
     * <pre>
     *是否UWB精准降落中：0=不是，1=是
     * </pre>
     *
     * <code>uint32 isUwbLanding = 10;</code>
     * @return The isUwbLanding.
     */
    int getIsUwbLanding();

    /**
     * <pre>
     *视频是否推流中：0=不是，1=是
     * </pre>
     *
     * <code>uint32 isPushVideoing = 11;</code>
     * @return The isPushVideoing.
     */
    int getIsPushVideoing();

    /**
     * <pre>
     *是否二维码精准降落中：0=不是，1=是
     * </pre>
     *
     * <code>uint32 isDLanding = 12;</code>
     * @return The isDLanding.
     */
    int getIsDLanding();

    /**
     * <pre>
     *二维码精准降落模式：0=载荷降落，1=下视降落
     * </pre>
     *
     * <code>uint32 perceptionFlag = 13;</code>
     * @return The perceptionFlag.
     */
    int getPerceptionFlag();

    /**
     * <pre>
     *是否指定距离飞行控制中：0=否，1=是
     * </pre>
     *
     * <code>uint32 isPositionControl = 14;</code>
     * @return The isPositionControl.
     */
    int getIsPositionControl();

    /**
     * <pre>
     *是否开启回传图片：0=未开启，1=开启
     * </pre>
     *
     * <code>uint32 sendImgRtp = 15;</code>
     * @return The sendImgRtp.
     */
    int getSendImgRtp();

    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * <code>.BreakPoint breakPoint = 16;</code>
     * @return Whether the breakPoint field is set.
     */
    boolean hasBreakPoint();
    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * <code>.BreakPoint breakPoint = 16;</code>
     * @return The breakPoint.
     */
    BreakPoint getBreakPoint();
    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * <code>.BreakPoint breakPoint = 16;</code>
     */
    BreakPointOrBuilder getBreakPointOrBuilder();
  }
  /**
   * <pre>
   *任务状态
   * </pre>
   *
   * Protobuf type {@code MissionState}
   */
  public static final class MissionState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MissionState)
      MissionStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MissionState.newBuilder() to construct.
    private MissionState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MissionState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MissionState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MissionState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isPause_ = input.readUInt32();
              break;
            }
            case 16: {

              targetWaypointIndex_ = input.readUInt32();
              break;
            }
            case 24: {

              isWaypointFinished_ = input.readUInt32();
              break;
            }
            case 32: {

              pushVideo_ = input.readUInt32();
              break;
            }
            case 40: {

              lock4G_ = input.readUInt32();
              break;
            }
            case 48: {

              boxModel_ = input.readUInt32();
              break;
            }
            case 56: {

              mapPlay_ = input.readUInt32();
              break;
            }
            case 64: {

              loseAction_ = input.readUInt32();
              break;
            }
            case 72: {

              isPointControl_ = input.readUInt32();
              break;
            }
            case 80: {

              isUwbLanding_ = input.readUInt32();
              break;
            }
            case 88: {

              isPushVideoing_ = input.readUInt32();
              break;
            }
            case 96: {

              isDLanding_ = input.readUInt32();
              break;
            }
            case 104: {

              perceptionFlag_ = input.readUInt32();
              break;
            }
            case 112: {

              isPositionControl_ = input.readUInt32();
              break;
            }
            case 120: {

              sendImgRtp_ = input.readUInt32();
              break;
            }
            case 130: {
              BreakPoint.Builder subBuilder = null;
              if (breakPoint_ != null) {
                subBuilder = breakPoint_.toBuilder();
              }
              breakPoint_ = input.readMessage(BreakPoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(breakPoint_);
                breakPoint_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_MissionState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_MissionState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MissionState.class, Builder.class);
    }

    public static final int ISPAUSE_FIELD_NUMBER = 1;
    private int isPause_;
    /**
     * <pre>
     *航线是否暂停中：0=未暂停，1=暂停中
     * </pre>
     *
     * <code>uint32 isPause = 1;</code>
     * @return The isPause.
     */
    @Override
    public int getIsPause() {
      return isPause_;
    }

    public static final int TARGETWAYPOINTINDEX_FIELD_NUMBER = 2;
    private int targetWaypointIndex_;
    /**
     * <pre>
     *目标航点下标(说明：开始成功到第一个航点之间此值为0，到达第一个航点此值为1，到达第二个航点此值为2，以此类推)
     * </pre>
     *
     * <code>uint32 targetWaypointIndex = 2;</code>
     * @return The targetWaypointIndex.
     */
    @Override
    public int getTargetWaypointIndex() {
      return targetWaypointIndex_;
    }

    public static final int ISWAYPOINTFINISHED_FIELD_NUMBER = 3;
    private int isWaypointFinished_;
    /**
     * <pre>
     *是否航点完成：1完成、0未完成(此值废弃)
     * </pre>
     *
     * <code>uint32 isWaypointFinished = 3;</code>
     * @return The isWaypointFinished.
     */
    @Override
    public int getIsWaypointFinished() {
      return isWaypointFinished_;
    }

    public static final int PUSHVIDEO_FIELD_NUMBER = 4;
    private int pushVideo_;
    /**
     * <pre>
     *云盒是否发送视频数据：0=不发送，1=发送
     * </pre>
     *
     * <code>uint32 pushVideo = 4;</code>
     * @return The pushVideo.
     */
    @Override
    public int getPushVideo() {
      return pushVideo_;
    }

    public static final int LOCK4G_FIELD_NUMBER = 5;
    private int lock4G_;
    /**
     * <pre>
     *是否锁定4G：0=不锁定，1=锁定
     * </pre>
     *
     * <code>uint32 lock4g = 5;</code>
     * @return The lock4g.
     */
    @Override
    public int getLock4G() {
      return lock4G_;
    }

    public static final int BOXMODEL_FIELD_NUMBER = 6;
    private int boxModel_;
    /**
     * <pre>
     *是否开通图片自动回传功能：0=未开通，1=已开通
     * </pre>
     *
     * <code>uint32 boxModel = 6;</code>
     * @return The boxModel.
     */
    @Override
    public int getBoxModel() {
      return boxModel_;
    }

    public static final int MAPPLAY_FIELD_NUMBER = 7;
    private int mapPlay_;
    /**
     * <pre>
     *自动拍照间隔：0未开始，3~255间隔时间
     * </pre>
     *
     * <code>uint32 mapPlay = 7;</code>
     * @return The mapPlay.
     */
    @Override
    public int getMapPlay() {
      return mapPlay_;
    }

    public static final int LOSEACTION_FIELD_NUMBER = 8;
    private int loseAction_;
    /**
     * <pre>
     *网络失联后动作：0=返回HOME点，1=继续航线
     * </pre>
     *
     * <code>uint32 loseAction = 8;</code>
     * @return The loseAction.
     */
    @Override
    public int getLoseAction() {
      return loseAction_;
    }

    public static final int ISPOINTCONTROL_FIELD_NUMBER = 9;
    private int isPointControl_;
    /**
     * <pre>
     *是否打点飞行控制中：0=否，1=是
     * </pre>
     *
     * <code>uint32 isPointControl = 9;</code>
     * @return The isPointControl.
     */
    @Override
    public int getIsPointControl() {
      return isPointControl_;
    }

    public static final int ISUWBLANDING_FIELD_NUMBER = 10;
    private int isUwbLanding_;
    /**
     * <pre>
     *是否UWB精准降落中：0=不是，1=是
     * </pre>
     *
     * <code>uint32 isUwbLanding = 10;</code>
     * @return The isUwbLanding.
     */
    @Override
    public int getIsUwbLanding() {
      return isUwbLanding_;
    }

    public static final int ISPUSHVIDEOING_FIELD_NUMBER = 11;
    private int isPushVideoing_;
    /**
     * <pre>
     *视频是否推流中：0=不是，1=是
     * </pre>
     *
     * <code>uint32 isPushVideoing = 11;</code>
     * @return The isPushVideoing.
     */
    @Override
    public int getIsPushVideoing() {
      return isPushVideoing_;
    }

    public static final int ISDLANDING_FIELD_NUMBER = 12;
    private int isDLanding_;
    /**
     * <pre>
     *是否二维码精准降落中：0=不是，1=是
     * </pre>
     *
     * <code>uint32 isDLanding = 12;</code>
     * @return The isDLanding.
     */
    @Override
    public int getIsDLanding() {
      return isDLanding_;
    }

    public static final int PERCEPTIONFLAG_FIELD_NUMBER = 13;
    private int perceptionFlag_;
    /**
     * <pre>
     *二维码精准降落模式：0=载荷降落，1=下视降落
     * </pre>
     *
     * <code>uint32 perceptionFlag = 13;</code>
     * @return The perceptionFlag.
     */
    @Override
    public int getPerceptionFlag() {
      return perceptionFlag_;
    }

    public static final int ISPOSITIONCONTROL_FIELD_NUMBER = 14;
    private int isPositionControl_;
    /**
     * <pre>
     *是否指定距离飞行控制中：0=否，1=是
     * </pre>
     *
     * <code>uint32 isPositionControl = 14;</code>
     * @return The isPositionControl.
     */
    @Override
    public int getIsPositionControl() {
      return isPositionControl_;
    }

    public static final int SENDIMGRTP_FIELD_NUMBER = 15;
    private int sendImgRtp_;
    /**
     * <pre>
     *是否开启回传图片：0=未开启，1=开启
     * </pre>
     *
     * <code>uint32 sendImgRtp = 15;</code>
     * @return The sendImgRtp.
     */
    @Override
    public int getSendImgRtp() {
      return sendImgRtp_;
    }

    public static final int BREAKPOINT_FIELD_NUMBER = 16;
    private BreakPoint breakPoint_;
    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * <code>.BreakPoint breakPoint = 16;</code>
     * @return Whether the breakPoint field is set.
     */
    @Override
    public boolean hasBreakPoint() {
      return breakPoint_ != null;
    }
    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * <code>.BreakPoint breakPoint = 16;</code>
     * @return The breakPoint.
     */
    @Override
    public BreakPoint getBreakPoint() {
      return breakPoint_ == null ? BreakPoint.getDefaultInstance() : breakPoint_;
    }
    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * <code>.BreakPoint breakPoint = 16;</code>
     */
    @Override
    public BreakPointOrBuilder getBreakPointOrBuilder() {
      return getBreakPoint();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isPause_ != 0) {
        output.writeUInt32(1, isPause_);
      }
      if (targetWaypointIndex_ != 0) {
        output.writeUInt32(2, targetWaypointIndex_);
      }
      if (isWaypointFinished_ != 0) {
        output.writeUInt32(3, isWaypointFinished_);
      }
      if (pushVideo_ != 0) {
        output.writeUInt32(4, pushVideo_);
      }
      if (lock4G_ != 0) {
        output.writeUInt32(5, lock4G_);
      }
      if (boxModel_ != 0) {
        output.writeUInt32(6, boxModel_);
      }
      if (mapPlay_ != 0) {
        output.writeUInt32(7, mapPlay_);
      }
      if (loseAction_ != 0) {
        output.writeUInt32(8, loseAction_);
      }
      if (isPointControl_ != 0) {
        output.writeUInt32(9, isPointControl_);
      }
      if (isUwbLanding_ != 0) {
        output.writeUInt32(10, isUwbLanding_);
      }
      if (isPushVideoing_ != 0) {
        output.writeUInt32(11, isPushVideoing_);
      }
      if (isDLanding_ != 0) {
        output.writeUInt32(12, isDLanding_);
      }
      if (perceptionFlag_ != 0) {
        output.writeUInt32(13, perceptionFlag_);
      }
      if (isPositionControl_ != 0) {
        output.writeUInt32(14, isPositionControl_);
      }
      if (sendImgRtp_ != 0) {
        output.writeUInt32(15, sendImgRtp_);
      }
      if (breakPoint_ != null) {
        output.writeMessage(16, getBreakPoint());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isPause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, isPause_);
      }
      if (targetWaypointIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetWaypointIndex_);
      }
      if (isWaypointFinished_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, isWaypointFinished_);
      }
      if (pushVideo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, pushVideo_);
      }
      if (lock4G_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, lock4G_);
      }
      if (boxModel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, boxModel_);
      }
      if (mapPlay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, mapPlay_);
      }
      if (loseAction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, loseAction_);
      }
      if (isPointControl_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, isPointControl_);
      }
      if (isUwbLanding_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, isUwbLanding_);
      }
      if (isPushVideoing_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, isPushVideoing_);
      }
      if (isDLanding_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, isDLanding_);
      }
      if (perceptionFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, perceptionFlag_);
      }
      if (isPositionControl_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, isPositionControl_);
      }
      if (sendImgRtp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, sendImgRtp_);
      }
      if (breakPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getBreakPoint());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MissionState)) {
        return super.equals(obj);
      }
      MissionState other = (MissionState) obj;

      if (getIsPause()
          != other.getIsPause()) return false;
      if (getTargetWaypointIndex()
          != other.getTargetWaypointIndex()) return false;
      if (getIsWaypointFinished()
          != other.getIsWaypointFinished()) return false;
      if (getPushVideo()
          != other.getPushVideo()) return false;
      if (getLock4G()
          != other.getLock4G()) return false;
      if (getBoxModel()
          != other.getBoxModel()) return false;
      if (getMapPlay()
          != other.getMapPlay()) return false;
      if (getLoseAction()
          != other.getLoseAction()) return false;
      if (getIsPointControl()
          != other.getIsPointControl()) return false;
      if (getIsUwbLanding()
          != other.getIsUwbLanding()) return false;
      if (getIsPushVideoing()
          != other.getIsPushVideoing()) return false;
      if (getIsDLanding()
          != other.getIsDLanding()) return false;
      if (getPerceptionFlag()
          != other.getPerceptionFlag()) return false;
      if (getIsPositionControl()
          != other.getIsPositionControl()) return false;
      if (getSendImgRtp()
          != other.getSendImgRtp()) return false;
      if (hasBreakPoint() != other.hasBreakPoint()) return false;
      if (hasBreakPoint()) {
        if (!getBreakPoint()
            .equals(other.getBreakPoint())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ISPAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getIsPause();
      hash = (37 * hash) + TARGETWAYPOINTINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getTargetWaypointIndex();
      hash = (37 * hash) + ISWAYPOINTFINISHED_FIELD_NUMBER;
      hash = (53 * hash) + getIsWaypointFinished();
      hash = (37 * hash) + PUSHVIDEO_FIELD_NUMBER;
      hash = (53 * hash) + getPushVideo();
      hash = (37 * hash) + LOCK4G_FIELD_NUMBER;
      hash = (53 * hash) + getLock4G();
      hash = (37 * hash) + BOXMODEL_FIELD_NUMBER;
      hash = (53 * hash) + getBoxModel();
      hash = (37 * hash) + MAPPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getMapPlay();
      hash = (37 * hash) + LOSEACTION_FIELD_NUMBER;
      hash = (53 * hash) + getLoseAction();
      hash = (37 * hash) + ISPOINTCONTROL_FIELD_NUMBER;
      hash = (53 * hash) + getIsPointControl();
      hash = (37 * hash) + ISUWBLANDING_FIELD_NUMBER;
      hash = (53 * hash) + getIsUwbLanding();
      hash = (37 * hash) + ISPUSHVIDEOING_FIELD_NUMBER;
      hash = (53 * hash) + getIsPushVideoing();
      hash = (37 * hash) + ISDLANDING_FIELD_NUMBER;
      hash = (53 * hash) + getIsDLanding();
      hash = (37 * hash) + PERCEPTIONFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getPerceptionFlag();
      hash = (37 * hash) + ISPOSITIONCONTROL_FIELD_NUMBER;
      hash = (53 * hash) + getIsPositionControl();
      hash = (37 * hash) + SENDIMGRTP_FIELD_NUMBER;
      hash = (53 * hash) + getSendImgRtp();
      if (hasBreakPoint()) {
        hash = (37 * hash) + BREAKPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getBreakPoint().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MissionState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MissionState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MissionState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MissionState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MissionState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MissionState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MissionState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MissionState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MissionState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MissionState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MissionState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MissionState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MissionState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * Protobuf type {@code MissionState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MissionState)
        MissionStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_MissionState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_MissionState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MissionState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.MissionState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        isPause_ = 0;

        targetWaypointIndex_ = 0;

        isWaypointFinished_ = 0;

        pushVideo_ = 0;

        lock4G_ = 0;

        boxModel_ = 0;

        mapPlay_ = 0;

        loseAction_ = 0;

        isPointControl_ = 0;

        isUwbLanding_ = 0;

        isPushVideoing_ = 0;

        isDLanding_ = 0;

        perceptionFlag_ = 0;

        isPositionControl_ = 0;

        sendImgRtp_ = 0;

        if (breakPointBuilder_ == null) {
          breakPoint_ = null;
        } else {
          breakPoint_ = null;
          breakPointBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_MissionState_descriptor;
      }

      @Override
      public MissionState getDefaultInstanceForType() {
        return MissionState.getDefaultInstance();
      }

      @Override
      public MissionState build() {
        MissionState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MissionState buildPartial() {
        MissionState result = new MissionState(this);
        result.isPause_ = isPause_;
        result.targetWaypointIndex_ = targetWaypointIndex_;
        result.isWaypointFinished_ = isWaypointFinished_;
        result.pushVideo_ = pushVideo_;
        result.lock4G_ = lock4G_;
        result.boxModel_ = boxModel_;
        result.mapPlay_ = mapPlay_;
        result.loseAction_ = loseAction_;
        result.isPointControl_ = isPointControl_;
        result.isUwbLanding_ = isUwbLanding_;
        result.isPushVideoing_ = isPushVideoing_;
        result.isDLanding_ = isDLanding_;
        result.perceptionFlag_ = perceptionFlag_;
        result.isPositionControl_ = isPositionControl_;
        result.sendImgRtp_ = sendImgRtp_;
        if (breakPointBuilder_ == null) {
          result.breakPoint_ = breakPoint_;
        } else {
          result.breakPoint_ = breakPointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MissionState) {
          return mergeFrom((MissionState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MissionState other) {
        if (other == MissionState.getDefaultInstance()) return this;
        if (other.getIsPause() != 0) {
          setIsPause(other.getIsPause());
        }
        if (other.getTargetWaypointIndex() != 0) {
          setTargetWaypointIndex(other.getTargetWaypointIndex());
        }
        if (other.getIsWaypointFinished() != 0) {
          setIsWaypointFinished(other.getIsWaypointFinished());
        }
        if (other.getPushVideo() != 0) {
          setPushVideo(other.getPushVideo());
        }
        if (other.getLock4G() != 0) {
          setLock4G(other.getLock4G());
        }
        if (other.getBoxModel() != 0) {
          setBoxModel(other.getBoxModel());
        }
        if (other.getMapPlay() != 0) {
          setMapPlay(other.getMapPlay());
        }
        if (other.getLoseAction() != 0) {
          setLoseAction(other.getLoseAction());
        }
        if (other.getIsPointControl() != 0) {
          setIsPointControl(other.getIsPointControl());
        }
        if (other.getIsUwbLanding() != 0) {
          setIsUwbLanding(other.getIsUwbLanding());
        }
        if (other.getIsPushVideoing() != 0) {
          setIsPushVideoing(other.getIsPushVideoing());
        }
        if (other.getIsDLanding() != 0) {
          setIsDLanding(other.getIsDLanding());
        }
        if (other.getPerceptionFlag() != 0) {
          setPerceptionFlag(other.getPerceptionFlag());
        }
        if (other.getIsPositionControl() != 0) {
          setIsPositionControl(other.getIsPositionControl());
        }
        if (other.getSendImgRtp() != 0) {
          setSendImgRtp(other.getSendImgRtp());
        }
        if (other.hasBreakPoint()) {
          mergeBreakPoint(other.getBreakPoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MissionState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MissionState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int isPause_ ;
      /**
       * <pre>
       *航线是否暂停中：0=未暂停，1=暂停中
       * </pre>
       *
       * <code>uint32 isPause = 1;</code>
       * @return The isPause.
       */
      @Override
      public int getIsPause() {
        return isPause_;
      }
      /**
       * <pre>
       *航线是否暂停中：0=未暂停，1=暂停中
       * </pre>
       *
       * <code>uint32 isPause = 1;</code>
       * @param value The isPause to set.
       * @return This builder for chaining.
       */
      public Builder setIsPause(int value) {
        
        isPause_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航线是否暂停中：0=未暂停，1=暂停中
       * </pre>
       *
       * <code>uint32 isPause = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPause() {
        
        isPause_ = 0;
        onChanged();
        return this;
      }

      private int targetWaypointIndex_ ;
      /**
       * <pre>
       *目标航点下标(说明：开始成功到第一个航点之间此值为0，到达第一个航点此值为1，到达第二个航点此值为2，以此类推)
       * </pre>
       *
       * <code>uint32 targetWaypointIndex = 2;</code>
       * @return The targetWaypointIndex.
       */
      @Override
      public int getTargetWaypointIndex() {
        return targetWaypointIndex_;
      }
      /**
       * <pre>
       *目标航点下标(说明：开始成功到第一个航点之间此值为0，到达第一个航点此值为1，到达第二个航点此值为2，以此类推)
       * </pre>
       *
       * <code>uint32 targetWaypointIndex = 2;</code>
       * @param value The targetWaypointIndex to set.
       * @return This builder for chaining.
       */
      public Builder setTargetWaypointIndex(int value) {
        
        targetWaypointIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *目标航点下标(说明：开始成功到第一个航点之间此值为0，到达第一个航点此值为1，到达第二个航点此值为2，以此类推)
       * </pre>
       *
       * <code>uint32 targetWaypointIndex = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetWaypointIndex() {
        
        targetWaypointIndex_ = 0;
        onChanged();
        return this;
      }

      private int isWaypointFinished_ ;
      /**
       * <pre>
       *是否航点完成：1完成、0未完成(此值废弃)
       * </pre>
       *
       * <code>uint32 isWaypointFinished = 3;</code>
       * @return The isWaypointFinished.
       */
      @Override
      public int getIsWaypointFinished() {
        return isWaypointFinished_;
      }
      /**
       * <pre>
       *是否航点完成：1完成、0未完成(此值废弃)
       * </pre>
       *
       * <code>uint32 isWaypointFinished = 3;</code>
       * @param value The isWaypointFinished to set.
       * @return This builder for chaining.
       */
      public Builder setIsWaypointFinished(int value) {
        
        isWaypointFinished_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否航点完成：1完成、0未完成(此值废弃)
       * </pre>
       *
       * <code>uint32 isWaypointFinished = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsWaypointFinished() {
        
        isWaypointFinished_ = 0;
        onChanged();
        return this;
      }

      private int pushVideo_ ;
      /**
       * <pre>
       *云盒是否发送视频数据：0=不发送，1=发送
       * </pre>
       *
       * <code>uint32 pushVideo = 4;</code>
       * @return The pushVideo.
       */
      @Override
      public int getPushVideo() {
        return pushVideo_;
      }
      /**
       * <pre>
       *云盒是否发送视频数据：0=不发送，1=发送
       * </pre>
       *
       * <code>uint32 pushVideo = 4;</code>
       * @param value The pushVideo to set.
       * @return This builder for chaining.
       */
      public Builder setPushVideo(int value) {
        
        pushVideo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云盒是否发送视频数据：0=不发送，1=发送
       * </pre>
       *
       * <code>uint32 pushVideo = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPushVideo() {
        
        pushVideo_ = 0;
        onChanged();
        return this;
      }

      private int lock4G_ ;
      /**
       * <pre>
       *是否锁定4G：0=不锁定，1=锁定
       * </pre>
       *
       * <code>uint32 lock4g = 5;</code>
       * @return The lock4g.
       */
      @Override
      public int getLock4G() {
        return lock4G_;
      }
      /**
       * <pre>
       *是否锁定4G：0=不锁定，1=锁定
       * </pre>
       *
       * <code>uint32 lock4g = 5;</code>
       * @param value The lock4g to set.
       * @return This builder for chaining.
       */
      public Builder setLock4G(int value) {
        
        lock4G_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否锁定4G：0=不锁定，1=锁定
       * </pre>
       *
       * <code>uint32 lock4g = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLock4G() {
        
        lock4G_ = 0;
        onChanged();
        return this;
      }

      private int boxModel_ ;
      /**
       * <pre>
       *是否开通图片自动回传功能：0=未开通，1=已开通
       * </pre>
       *
       * <code>uint32 boxModel = 6;</code>
       * @return The boxModel.
       */
      @Override
      public int getBoxModel() {
        return boxModel_;
      }
      /**
       * <pre>
       *是否开通图片自动回传功能：0=未开通，1=已开通
       * </pre>
       *
       * <code>uint32 boxModel = 6;</code>
       * @param value The boxModel to set.
       * @return This builder for chaining.
       */
      public Builder setBoxModel(int value) {
        
        boxModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否开通图片自动回传功能：0=未开通，1=已开通
       * </pre>
       *
       * <code>uint32 boxModel = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoxModel() {
        
        boxModel_ = 0;
        onChanged();
        return this;
      }

      private int mapPlay_ ;
      /**
       * <pre>
       *自动拍照间隔：0未开始，3~255间隔时间
       * </pre>
       *
       * <code>uint32 mapPlay = 7;</code>
       * @return The mapPlay.
       */
      @Override
      public int getMapPlay() {
        return mapPlay_;
      }
      /**
       * <pre>
       *自动拍照间隔：0未开始，3~255间隔时间
       * </pre>
       *
       * <code>uint32 mapPlay = 7;</code>
       * @param value The mapPlay to set.
       * @return This builder for chaining.
       */
      public Builder setMapPlay(int value) {
        
        mapPlay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *自动拍照间隔：0未开始，3~255间隔时间
       * </pre>
       *
       * <code>uint32 mapPlay = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMapPlay() {
        
        mapPlay_ = 0;
        onChanged();
        return this;
      }

      private int loseAction_ ;
      /**
       * <pre>
       *网络失联后动作：0=返回HOME点，1=继续航线
       * </pre>
       *
       * <code>uint32 loseAction = 8;</code>
       * @return The loseAction.
       */
      @Override
      public int getLoseAction() {
        return loseAction_;
      }
      /**
       * <pre>
       *网络失联后动作：0=返回HOME点，1=继续航线
       * </pre>
       *
       * <code>uint32 loseAction = 8;</code>
       * @param value The loseAction to set.
       * @return This builder for chaining.
       */
      public Builder setLoseAction(int value) {
        
        loseAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网络失联后动作：0=返回HOME点，1=继续航线
       * </pre>
       *
       * <code>uint32 loseAction = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLoseAction() {
        
        loseAction_ = 0;
        onChanged();
        return this;
      }

      private int isPointControl_ ;
      /**
       * <pre>
       *是否打点飞行控制中：0=否，1=是
       * </pre>
       *
       * <code>uint32 isPointControl = 9;</code>
       * @return The isPointControl.
       */
      @Override
      public int getIsPointControl() {
        return isPointControl_;
      }
      /**
       * <pre>
       *是否打点飞行控制中：0=否，1=是
       * </pre>
       *
       * <code>uint32 isPointControl = 9;</code>
       * @param value The isPointControl to set.
       * @return This builder for chaining.
       */
      public Builder setIsPointControl(int value) {
        
        isPointControl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否打点飞行控制中：0=否，1=是
       * </pre>
       *
       * <code>uint32 isPointControl = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPointControl() {
        
        isPointControl_ = 0;
        onChanged();
        return this;
      }

      private int isUwbLanding_ ;
      /**
       * <pre>
       *是否UWB精准降落中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isUwbLanding = 10;</code>
       * @return The isUwbLanding.
       */
      @Override
      public int getIsUwbLanding() {
        return isUwbLanding_;
      }
      /**
       * <pre>
       *是否UWB精准降落中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isUwbLanding = 10;</code>
       * @param value The isUwbLanding to set.
       * @return This builder for chaining.
       */
      public Builder setIsUwbLanding(int value) {
        
        isUwbLanding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否UWB精准降落中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isUwbLanding = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsUwbLanding() {
        
        isUwbLanding_ = 0;
        onChanged();
        return this;
      }

      private int isPushVideoing_ ;
      /**
       * <pre>
       *视频是否推流中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isPushVideoing = 11;</code>
       * @return The isPushVideoing.
       */
      @Override
      public int getIsPushVideoing() {
        return isPushVideoing_;
      }
      /**
       * <pre>
       *视频是否推流中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isPushVideoing = 11;</code>
       * @param value The isPushVideoing to set.
       * @return This builder for chaining.
       */
      public Builder setIsPushVideoing(int value) {
        
        isPushVideoing_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *视频是否推流中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isPushVideoing = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPushVideoing() {
        
        isPushVideoing_ = 0;
        onChanged();
        return this;
      }

      private int isDLanding_ ;
      /**
       * <pre>
       *是否二维码精准降落中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isDLanding = 12;</code>
       * @return The isDLanding.
       */
      @Override
      public int getIsDLanding() {
        return isDLanding_;
      }
      /**
       * <pre>
       *是否二维码精准降落中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isDLanding = 12;</code>
       * @param value The isDLanding to set.
       * @return This builder for chaining.
       */
      public Builder setIsDLanding(int value) {
        
        isDLanding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否二维码精准降落中：0=不是，1=是
       * </pre>
       *
       * <code>uint32 isDLanding = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDLanding() {
        
        isDLanding_ = 0;
        onChanged();
        return this;
      }

      private int perceptionFlag_ ;
      /**
       * <pre>
       *二维码精准降落模式：0=载荷降落，1=下视降落
       * </pre>
       *
       * <code>uint32 perceptionFlag = 13;</code>
       * @return The perceptionFlag.
       */
      @Override
      public int getPerceptionFlag() {
        return perceptionFlag_;
      }
      /**
       * <pre>
       *二维码精准降落模式：0=载荷降落，1=下视降落
       * </pre>
       *
       * <code>uint32 perceptionFlag = 13;</code>
       * @param value The perceptionFlag to set.
       * @return This builder for chaining.
       */
      public Builder setPerceptionFlag(int value) {
        
        perceptionFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二维码精准降落模式：0=载荷降落，1=下视降落
       * </pre>
       *
       * <code>uint32 perceptionFlag = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPerceptionFlag() {
        
        perceptionFlag_ = 0;
        onChanged();
        return this;
      }

      private int isPositionControl_ ;
      /**
       * <pre>
       *是否指定距离飞行控制中：0=否，1=是
       * </pre>
       *
       * <code>uint32 isPositionControl = 14;</code>
       * @return The isPositionControl.
       */
      @Override
      public int getIsPositionControl() {
        return isPositionControl_;
      }
      /**
       * <pre>
       *是否指定距离飞行控制中：0=否，1=是
       * </pre>
       *
       * <code>uint32 isPositionControl = 14;</code>
       * @param value The isPositionControl to set.
       * @return This builder for chaining.
       */
      public Builder setIsPositionControl(int value) {
        
        isPositionControl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否指定距离飞行控制中：0=否，1=是
       * </pre>
       *
       * <code>uint32 isPositionControl = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPositionControl() {
        
        isPositionControl_ = 0;
        onChanged();
        return this;
      }

      private int sendImgRtp_ ;
      /**
       * <pre>
       *是否开启回传图片：0=未开启，1=开启
       * </pre>
       *
       * <code>uint32 sendImgRtp = 15;</code>
       * @return The sendImgRtp.
       */
      @Override
      public int getSendImgRtp() {
        return sendImgRtp_;
      }
      /**
       * <pre>
       *是否开启回传图片：0=未开启，1=开启
       * </pre>
       *
       * <code>uint32 sendImgRtp = 15;</code>
       * @param value The sendImgRtp to set.
       * @return This builder for chaining.
       */
      public Builder setSendImgRtp(int value) {
        
        sendImgRtp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否开启回传图片：0=未开启，1=开启
       * </pre>
       *
       * <code>uint32 sendImgRtp = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearSendImgRtp() {
        
        sendImgRtp_ = 0;
        onChanged();
        return this;
      }

      private BreakPoint breakPoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          BreakPoint, BreakPoint.Builder, BreakPointOrBuilder> breakPointBuilder_;
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       * @return Whether the breakPoint field is set.
       */
      public boolean hasBreakPoint() {
        return breakPointBuilder_ != null || breakPoint_ != null;
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       * @return The breakPoint.
       */
      public BreakPoint getBreakPoint() {
        if (breakPointBuilder_ == null) {
          return breakPoint_ == null ? BreakPoint.getDefaultInstance() : breakPoint_;
        } else {
          return breakPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      public Builder setBreakPoint(BreakPoint value) {
        if (breakPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          breakPoint_ = value;
          onChanged();
        } else {
          breakPointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      public Builder setBreakPoint(
          BreakPoint.Builder builderForValue) {
        if (breakPointBuilder_ == null) {
          breakPoint_ = builderForValue.build();
          onChanged();
        } else {
          breakPointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      public Builder mergeBreakPoint(BreakPoint value) {
        if (breakPointBuilder_ == null) {
          if (breakPoint_ != null) {
            breakPoint_ =
              BreakPoint.newBuilder(breakPoint_).mergeFrom(value).buildPartial();
          } else {
            breakPoint_ = value;
          }
          onChanged();
        } else {
          breakPointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      public Builder clearBreakPoint() {
        if (breakPointBuilder_ == null) {
          breakPoint_ = null;
          onChanged();
        } else {
          breakPoint_ = null;
          breakPointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      public BreakPoint.Builder getBreakPointBuilder() {
        
        onChanged();
        return getBreakPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      public BreakPointOrBuilder getBreakPointOrBuilder() {
        if (breakPointBuilder_ != null) {
          return breakPointBuilder_.getMessageOrBuilder();
        } else {
          return breakPoint_ == null ?
              BreakPoint.getDefaultInstance() : breakPoint_;
        }
      }
      /**
       * <pre>
       *航线断点信息
       * </pre>
       *
       * <code>.BreakPoint breakPoint = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BreakPoint, BreakPoint.Builder, BreakPointOrBuilder>
          getBreakPointFieldBuilder() {
        if (breakPointBuilder_ == null) {
          breakPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BreakPoint, BreakPoint.Builder, BreakPointOrBuilder>(
                  getBreakPoint(),
                  getParentForChildren(),
                  isClean());
          breakPoint_ = null;
        }
        return breakPointBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MissionState)
    }

    // @@protoc_insertion_point(class_scope:MissionState)
    private static final MissionState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MissionState();
    }

    public static MissionState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MissionState>
        PARSER = new com.google.protobuf.AbstractParser<MissionState>() {
      @Override
      public MissionState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MissionState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MissionState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MissionState> getParserForType() {
      return PARSER;
    }

    @Override
    public MissionState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BreakPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BreakPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *航线断点信息是否有效：0=无效，1=有效
     * </pre>
     *
     * <code>uint32 status = 1;</code>
     * @return The status.
     */
    int getStatus();

    /**
     * <pre>
     *航线断点(说明：如航线第2个点和第3个点中间断出航线，此值返回2)
     * </pre>
     *
     * <code>uint32 point = 2;</code>
     * @return The point.
     */
    int getPoint();

    /**
     * <pre>
     *断点经度(说明：此值为航段上退出点的坐标)
     * </pre>
     *
     * <code>double lng = 3;</code>
     * @return The lng.
     */
    double getLng();

    /**
     * <pre>
     *断点纬度
     * </pre>
     *
     * <code>double lat = 4;</code>
     * @return The lat.
     */
    double getLat();

    /**
     * <pre>
     *断点高度(单位:米，范围0~遥控器限高)
     * </pre>
     *
     * <code>float height = 5;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <pre>
     *任务编号    
     * </pre>
     *
     * <code>uint64 taskId = 6;</code>
     * @return The taskId.
     */
    long getTaskId();
  }
  /**
   * <pre>
   *航线断点信息
   * </pre>
   *
   * Protobuf type {@code BreakPoint}
   */
  public static final class BreakPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BreakPoint)
      BreakPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BreakPoint.newBuilder() to construct.
    private BreakPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BreakPoint() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new BreakPoint();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BreakPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              status_ = input.readUInt32();
              break;
            }
            case 16: {

              point_ = input.readUInt32();
              break;
            }
            case 25: {

              lng_ = input.readDouble();
              break;
            }
            case 33: {

              lat_ = input.readDouble();
              break;
            }
            case 45: {

              height_ = input.readFloat();
              break;
            }
            case 48: {

              taskId_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_BreakPoint_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_BreakPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BreakPoint.class, Builder.class);
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <pre>
     *航线断点信息是否有效：0=无效，1=有效
     * </pre>
     *
     * <code>uint32 status = 1;</code>
     * @return The status.
     */
    @Override
    public int getStatus() {
      return status_;
    }

    public static final int POINT_FIELD_NUMBER = 2;
    private int point_;
    /**
     * <pre>
     *航线断点(说明：如航线第2个点和第3个点中间断出航线，此值返回2)
     * </pre>
     *
     * <code>uint32 point = 2;</code>
     * @return The point.
     */
    @Override
    public int getPoint() {
      return point_;
    }

    public static final int LNG_FIELD_NUMBER = 3;
    private double lng_;
    /**
     * <pre>
     *断点经度(说明：此值为航段上退出点的坐标)
     * </pre>
     *
     * <code>double lng = 3;</code>
     * @return The lng.
     */
    @Override
    public double getLng() {
      return lng_;
    }

    public static final int LAT_FIELD_NUMBER = 4;
    private double lat_;
    /**
     * <pre>
     *断点纬度
     * </pre>
     *
     * <code>double lat = 4;</code>
     * @return The lat.
     */
    @Override
    public double getLat() {
      return lat_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 5;
    private float height_;
    /**
     * <pre>
     *断点高度(单位:米，范围0~遥控器限高)
     * </pre>
     *
     * <code>float height = 5;</code>
     * @return The height.
     */
    @Override
    public float getHeight() {
      return height_;
    }

    public static final int TASKID_FIELD_NUMBER = 6;
    private long taskId_;
    /**
     * <pre>
     *任务编号    
     * </pre>
     *
     * <code>uint64 taskId = 6;</code>
     * @return The taskId.
     */
    @Override
    public long getTaskId() {
      return taskId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != 0) {
        output.writeUInt32(1, status_);
      }
      if (point_ != 0) {
        output.writeUInt32(2, point_);
      }
      if (lng_ != 0D) {
        output.writeDouble(3, lng_);
      }
      if (lat_ != 0D) {
        output.writeDouble(4, lat_);
      }
      if (height_ != 0F) {
        output.writeFloat(5, height_);
      }
      if (taskId_ != 0L) {
        output.writeUInt64(6, taskId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, status_);
      }
      if (point_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, point_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lng_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lat_);
      }
      if (height_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, height_);
      }
      if (taskId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, taskId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BreakPoint)) {
        return super.equals(obj);
      }
      BreakPoint other = (BreakPoint) obj;

      if (getStatus()
          != other.getStatus()) return false;
      if (getPoint()
          != other.getPoint()) return false;
      if (Double.doubleToLongBits(getLng())
          != Double.doubleToLongBits(
              other.getLng())) return false;
      if (Double.doubleToLongBits(getLat())
          != Double.doubleToLongBits(
              other.getLat())) return false;
      if (Float.floatToIntBits(getHeight())
          != Float.floatToIntBits(
              other.getHeight())) return false;
      if (getTaskId()
          != other.getTaskId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (37 * hash) + POINT_FIELD_NUMBER;
      hash = (53 * hash) + getPoint();
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTaskId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BreakPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BreakPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BreakPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BreakPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BreakPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BreakPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BreakPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BreakPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BreakPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BreakPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BreakPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BreakPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BreakPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *航线断点信息
     * </pre>
     *
     * Protobuf type {@code BreakPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BreakPoint)
        BreakPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_BreakPoint_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_BreakPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BreakPoint.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.BreakPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        status_ = 0;

        point_ = 0;

        lng_ = 0D;

        lat_ = 0D;

        height_ = 0F;

        taskId_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_BreakPoint_descriptor;
      }

      @Override
      public BreakPoint getDefaultInstanceForType() {
        return BreakPoint.getDefaultInstance();
      }

      @Override
      public BreakPoint build() {
        BreakPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BreakPoint buildPartial() {
        BreakPoint result = new BreakPoint(this);
        result.status_ = status_;
        result.point_ = point_;
        result.lng_ = lng_;
        result.lat_ = lat_;
        result.height_ = height_;
        result.taskId_ = taskId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BreakPoint) {
          return mergeFrom((BreakPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BreakPoint other) {
        if (other == BreakPoint.getDefaultInstance()) return this;
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        if (other.getPoint() != 0) {
          setPoint(other.getPoint());
        }
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getTaskId() != 0L) {
          setTaskId(other.getTaskId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BreakPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BreakPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       *航线断点信息是否有效：0=无效，1=有效
       * </pre>
       *
       * <code>uint32 status = 1;</code>
       * @return The status.
       */
      @Override
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       *航线断点信息是否有效：0=无效，1=有效
       * </pre>
       *
       * <code>uint32 status = 1;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航线断点信息是否有效：0=无效，1=有效
       * </pre>
       *
       * <code>uint32 status = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int point_ ;
      /**
       * <pre>
       *航线断点(说明：如航线第2个点和第3个点中间断出航线，此值返回2)
       * </pre>
       *
       * <code>uint32 point = 2;</code>
       * @return The point.
       */
      @Override
      public int getPoint() {
        return point_;
      }
      /**
       * <pre>
       *航线断点(说明：如航线第2个点和第3个点中间断出航线，此值返回2)
       * </pre>
       *
       * <code>uint32 point = 2;</code>
       * @param value The point to set.
       * @return This builder for chaining.
       */
      public Builder setPoint(int value) {
        
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航线断点(说明：如航线第2个点和第3个点中间断出航线，此值返回2)
       * </pre>
       *
       * <code>uint32 point = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPoint() {
        
        point_ = 0;
        onChanged();
        return this;
      }

      private double lng_ ;
      /**
       * <pre>
       *断点经度(说明：此值为航段上退出点的坐标)
       * </pre>
       *
       * <code>double lng = 3;</code>
       * @return The lng.
       */
      @Override
      public double getLng() {
        return lng_;
      }
      /**
       * <pre>
       *断点经度(说明：此值为航段上退出点的坐标)
       * </pre>
       *
       * <code>double lng = 3;</code>
       * @param value The lng to set.
       * @return This builder for chaining.
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *断点经度(说明：此值为航段上退出点的坐标)
       * </pre>
       *
       * <code>double lng = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <pre>
       *断点纬度
       * </pre>
       *
       * <code>double lat = 4;</code>
       * @return The lat.
       */
      @Override
      public double getLat() {
        return lat_;
      }
      /**
       * <pre>
       *断点纬度
       * </pre>
       *
       * <code>double lat = 4;</code>
       * @param value The lat to set.
       * @return This builder for chaining.
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *断点纬度
       * </pre>
       *
       * <code>double lat = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <pre>
       *断点高度(单位:米，范围0~遥控器限高)
       * </pre>
       *
       * <code>float height = 5;</code>
       * @return The height.
       */
      @Override
      public float getHeight() {
        return height_;
      }
      /**
       * <pre>
       *断点高度(单位:米，范围0~遥控器限高)
       * </pre>
       *
       * <code>float height = 5;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *断点高度(单位:米，范围0~遥控器限高)
       * </pre>
       *
       * <code>float height = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private long taskId_ ;
      /**
       * <pre>
       *任务编号    
       * </pre>
       *
       * <code>uint64 taskId = 6;</code>
       * @return The taskId.
       */
      @Override
      public long getTaskId() {
        return taskId_;
      }
      /**
       * <pre>
       *任务编号    
       * </pre>
       *
       * <code>uint64 taskId = 6;</code>
       * @param value The taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskId(long value) {
        
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务编号    
       * </pre>
       *
       * <code>uint64 taskId = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskId() {
        
        taskId_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BreakPoint)
    }

    // @@protoc_insertion_point(class_scope:BreakPoint)
    private static final BreakPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BreakPoint();
    }

    public static BreakPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BreakPoint>
        PARSER = new com.google.protobuf.AbstractParser<BreakPoint>() {
      @Override
      public BreakPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BreakPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BreakPoint> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BreakPoint> getParserForType() {
      return PARSER;
    }

    @Override
    public BreakPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AvoidanceDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AvoidanceData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 downHealth = 1;</code>
     * @return The downHealth.
     */
    int getDownHealth();

    /**
     * <pre>
     *距下障碍物的距离(单位:米),downHealth为1时值有效
     * </pre>
     *
     * <code>float down = 2;</code>
     * @return The down.
     */
    float getDown();

    /**
     * <code>uint32 frontHealth = 3;</code>
     * @return The frontHealth.
     */
    int getFrontHealth();

    /**
     * <pre>
     *距前障碍物的距离(单位:米),frontHealth为1时值有效 
     * </pre>
     *
     * <code>float front = 4;</code>
     * @return The front.
     */
    float getFront();

    /**
     * <code>uint32 rightHealth = 5;</code>
     * @return The rightHealth.
     */
    int getRightHealth();

    /**
     * <pre>
     *距右障碍物的距离(单位:米),rightHealth为1时值有效
     * </pre>
     *
     * <code>float right = 6;</code>
     * @return The right.
     */
    float getRight();

    /**
     * <code>uint32 backHealth = 7;</code>
     * @return The backHealth.
     */
    int getBackHealth();

    /**
     * <pre>
     *距后障碍物的距离(单位:米),backHealth为1时值有效
     * </pre>
     *
     * <code>float back = 8;</code>
     * @return The back.
     */
    float getBack();

    /**
     * <code>uint32 leftHealth = 9;</code>
     * @return The leftHealth.
     */
    int getLeftHealth();

    /**
     * <pre>
     *距左障碍物的距离(单位:米),leftHealth为1时值有效
     * </pre>
     *
     * <code>float left = 10;</code>
     * @return The left.
     */
    float getLeft();

    /**
     * <code>uint32 upHealth = 11;</code>
     * @return The upHealth.
     */
    int getUpHealth();

    /**
     * <pre>
     *距上障碍物的距离(单位:米),upHealth为1时值有效
     * </pre>
     *
     * <code>float up = 12;</code>
     * @return The up.
     */
    float getUp();

    /**
     * <pre>
     *下视觉避障开关状态：0-关闭 1-打开
     * </pre>
     *
     * <code>uint32 avoidanceEnableStatusDown = 13;</code>
     * @return The avoidanceEnableStatusDown.
     */
    int getAvoidanceEnableStatusDown();

    /**
     * <pre>
     *上视觉避障开关状态：0-关闭 1-打开
     * </pre>
     *
     * <code>uint32 avoidanceEnableStatusUp = 14;</code>
     * @return The avoidanceEnableStatusUp.
     */
    int getAvoidanceEnableStatusUp();

    /**
     * <pre>
     *水平视觉避障开关状态：0-关闭 1-打开
     * </pre>
     *
     * <code>uint32 avoidanceEnableStatusHorizontal = 15;</code>
     * @return The avoidanceEnableStatusHorizontal.
     */
    int getAvoidanceEnableStatusHorizontal();
  }
  /**
   * <pre>
   *避障数据
   * </pre>
   *
   * Protobuf type {@code AvoidanceData}
   */
  public static final class AvoidanceData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AvoidanceData)
      AvoidanceDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AvoidanceData.newBuilder() to construct.
    private AvoidanceData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AvoidanceData() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new AvoidanceData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AvoidanceData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              downHealth_ = input.readUInt32();
              break;
            }
            case 21: {

              down_ = input.readFloat();
              break;
            }
            case 24: {

              frontHealth_ = input.readUInt32();
              break;
            }
            case 37: {

              front_ = input.readFloat();
              break;
            }
            case 40: {

              rightHealth_ = input.readUInt32();
              break;
            }
            case 53: {

              right_ = input.readFloat();
              break;
            }
            case 56: {

              backHealth_ = input.readUInt32();
              break;
            }
            case 69: {

              back_ = input.readFloat();
              break;
            }
            case 72: {

              leftHealth_ = input.readUInt32();
              break;
            }
            case 85: {

              left_ = input.readFloat();
              break;
            }
            case 88: {

              upHealth_ = input.readUInt32();
              break;
            }
            case 101: {

              up_ = input.readFloat();
              break;
            }
            case 104: {

              avoidanceEnableStatusDown_ = input.readUInt32();
              break;
            }
            case 112: {

              avoidanceEnableStatusUp_ = input.readUInt32();
              break;
            }
            case 120: {

              avoidanceEnableStatusHorizontal_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_AvoidanceData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_AvoidanceData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AvoidanceData.class, Builder.class);
    }

    public static final int DOWNHEALTH_FIELD_NUMBER = 1;
    private int downHealth_;
    /**
     * <code>uint32 downHealth = 1;</code>
     * @return The downHealth.
     */
    @Override
    public int getDownHealth() {
      return downHealth_;
    }

    public static final int DOWN_FIELD_NUMBER = 2;
    private float down_;
    /**
     * <pre>
     *距下障碍物的距离(单位:米),downHealth为1时值有效
     * </pre>
     *
     * <code>float down = 2;</code>
     * @return The down.
     */
    @Override
    public float getDown() {
      return down_;
    }

    public static final int FRONTHEALTH_FIELD_NUMBER = 3;
    private int frontHealth_;
    /**
     * <code>uint32 frontHealth = 3;</code>
     * @return The frontHealth.
     */
    @Override
    public int getFrontHealth() {
      return frontHealth_;
    }

    public static final int FRONT_FIELD_NUMBER = 4;
    private float front_;
    /**
     * <pre>
     *距前障碍物的距离(单位:米),frontHealth为1时值有效 
     * </pre>
     *
     * <code>float front = 4;</code>
     * @return The front.
     */
    @Override
    public float getFront() {
      return front_;
    }

    public static final int RIGHTHEALTH_FIELD_NUMBER = 5;
    private int rightHealth_;
    /**
     * <code>uint32 rightHealth = 5;</code>
     * @return The rightHealth.
     */
    @Override
    public int getRightHealth() {
      return rightHealth_;
    }

    public static final int RIGHT_FIELD_NUMBER = 6;
    private float right_;
    /**
     * <pre>
     *距右障碍物的距离(单位:米),rightHealth为1时值有效
     * </pre>
     *
     * <code>float right = 6;</code>
     * @return The right.
     */
    @Override
    public float getRight() {
      return right_;
    }

    public static final int BACKHEALTH_FIELD_NUMBER = 7;
    private int backHealth_;
    /**
     * <code>uint32 backHealth = 7;</code>
     * @return The backHealth.
     */
    @Override
    public int getBackHealth() {
      return backHealth_;
    }

    public static final int BACK_FIELD_NUMBER = 8;
    private float back_;
    /**
     * <pre>
     *距后障碍物的距离(单位:米),backHealth为1时值有效
     * </pre>
     *
     * <code>float back = 8;</code>
     * @return The back.
     */
    @Override
    public float getBack() {
      return back_;
    }

    public static final int LEFTHEALTH_FIELD_NUMBER = 9;
    private int leftHealth_;
    /**
     * <code>uint32 leftHealth = 9;</code>
     * @return The leftHealth.
     */
    @Override
    public int getLeftHealth() {
      return leftHealth_;
    }

    public static final int LEFT_FIELD_NUMBER = 10;
    private float left_;
    /**
     * <pre>
     *距左障碍物的距离(单位:米),leftHealth为1时值有效
     * </pre>
     *
     * <code>float left = 10;</code>
     * @return The left.
     */
    @Override
    public float getLeft() {
      return left_;
    }

    public static final int UPHEALTH_FIELD_NUMBER = 11;
    private int upHealth_;
    /**
     * <code>uint32 upHealth = 11;</code>
     * @return The upHealth.
     */
    @Override
    public int getUpHealth() {
      return upHealth_;
    }

    public static final int UP_FIELD_NUMBER = 12;
    private float up_;
    /**
     * <pre>
     *距上障碍物的距离(单位:米),upHealth为1时值有效
     * </pre>
     *
     * <code>float up = 12;</code>
     * @return The up.
     */
    @Override
    public float getUp() {
      return up_;
    }

    public static final int AVOIDANCEENABLESTATUSDOWN_FIELD_NUMBER = 13;
    private int avoidanceEnableStatusDown_;
    /**
     * <pre>
     *下视觉避障开关状态：0-关闭 1-打开
     * </pre>
     *
     * <code>uint32 avoidanceEnableStatusDown = 13;</code>
     * @return The avoidanceEnableStatusDown.
     */
    @Override
    public int getAvoidanceEnableStatusDown() {
      return avoidanceEnableStatusDown_;
    }

    public static final int AVOIDANCEENABLESTATUSUP_FIELD_NUMBER = 14;
    private int avoidanceEnableStatusUp_;
    /**
     * <pre>
     *上视觉避障开关状态：0-关闭 1-打开
     * </pre>
     *
     * <code>uint32 avoidanceEnableStatusUp = 14;</code>
     * @return The avoidanceEnableStatusUp.
     */
    @Override
    public int getAvoidanceEnableStatusUp() {
      return avoidanceEnableStatusUp_;
    }

    public static final int AVOIDANCEENABLESTATUSHORIZONTAL_FIELD_NUMBER = 15;
    private int avoidanceEnableStatusHorizontal_;
    /**
     * <pre>
     *水平视觉避障开关状态：0-关闭 1-打开
     * </pre>
     *
     * <code>uint32 avoidanceEnableStatusHorizontal = 15;</code>
     * @return The avoidanceEnableStatusHorizontal.
     */
    @Override
    public int getAvoidanceEnableStatusHorizontal() {
      return avoidanceEnableStatusHorizontal_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (downHealth_ != 0) {
        output.writeUInt32(1, downHealth_);
      }
      if (down_ != 0F) {
        output.writeFloat(2, down_);
      }
      if (frontHealth_ != 0) {
        output.writeUInt32(3, frontHealth_);
      }
      if (front_ != 0F) {
        output.writeFloat(4, front_);
      }
      if (rightHealth_ != 0) {
        output.writeUInt32(5, rightHealth_);
      }
      if (right_ != 0F) {
        output.writeFloat(6, right_);
      }
      if (backHealth_ != 0) {
        output.writeUInt32(7, backHealth_);
      }
      if (back_ != 0F) {
        output.writeFloat(8, back_);
      }
      if (leftHealth_ != 0) {
        output.writeUInt32(9, leftHealth_);
      }
      if (left_ != 0F) {
        output.writeFloat(10, left_);
      }
      if (upHealth_ != 0) {
        output.writeUInt32(11, upHealth_);
      }
      if (up_ != 0F) {
        output.writeFloat(12, up_);
      }
      if (avoidanceEnableStatusDown_ != 0) {
        output.writeUInt32(13, avoidanceEnableStatusDown_);
      }
      if (avoidanceEnableStatusUp_ != 0) {
        output.writeUInt32(14, avoidanceEnableStatusUp_);
      }
      if (avoidanceEnableStatusHorizontal_ != 0) {
        output.writeUInt32(15, avoidanceEnableStatusHorizontal_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (downHealth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, downHealth_);
      }
      if (down_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, down_);
      }
      if (frontHealth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, frontHealth_);
      }
      if (front_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, front_);
      }
      if (rightHealth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, rightHealth_);
      }
      if (right_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, right_);
      }
      if (backHealth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, backHealth_);
      }
      if (back_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, back_);
      }
      if (leftHealth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, leftHealth_);
      }
      if (left_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, left_);
      }
      if (upHealth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, upHealth_);
      }
      if (up_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, up_);
      }
      if (avoidanceEnableStatusDown_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, avoidanceEnableStatusDown_);
      }
      if (avoidanceEnableStatusUp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, avoidanceEnableStatusUp_);
      }
      if (avoidanceEnableStatusHorizontal_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, avoidanceEnableStatusHorizontal_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof AvoidanceData)) {
        return super.equals(obj);
      }
      AvoidanceData other = (AvoidanceData) obj;

      if (getDownHealth()
          != other.getDownHealth()) return false;
      if (Float.floatToIntBits(getDown())
          != Float.floatToIntBits(
              other.getDown())) return false;
      if (getFrontHealth()
          != other.getFrontHealth()) return false;
      if (Float.floatToIntBits(getFront())
          != Float.floatToIntBits(
              other.getFront())) return false;
      if (getRightHealth()
          != other.getRightHealth()) return false;
      if (Float.floatToIntBits(getRight())
          != Float.floatToIntBits(
              other.getRight())) return false;
      if (getBackHealth()
          != other.getBackHealth()) return false;
      if (Float.floatToIntBits(getBack())
          != Float.floatToIntBits(
              other.getBack())) return false;
      if (getLeftHealth()
          != other.getLeftHealth()) return false;
      if (Float.floatToIntBits(getLeft())
          != Float.floatToIntBits(
              other.getLeft())) return false;
      if (getUpHealth()
          != other.getUpHealth()) return false;
      if (Float.floatToIntBits(getUp())
          != Float.floatToIntBits(
              other.getUp())) return false;
      if (getAvoidanceEnableStatusDown()
          != other.getAvoidanceEnableStatusDown()) return false;
      if (getAvoidanceEnableStatusUp()
          != other.getAvoidanceEnableStatusUp()) return false;
      if (getAvoidanceEnableStatusHorizontal()
          != other.getAvoidanceEnableStatusHorizontal()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOWNHEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getDownHealth();
      hash = (37 * hash) + DOWN_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDown());
      hash = (37 * hash) + FRONTHEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getFrontHealth();
      hash = (37 * hash) + FRONT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getFront());
      hash = (37 * hash) + RIGHTHEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getRightHealth();
      hash = (37 * hash) + RIGHT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRight());
      hash = (37 * hash) + BACKHEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getBackHealth();
      hash = (37 * hash) + BACK_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getBack());
      hash = (37 * hash) + LEFTHEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getLeftHealth();
      hash = (37 * hash) + LEFT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getLeft());
      hash = (37 * hash) + UPHEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getUpHealth();
      hash = (37 * hash) + UP_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getUp());
      hash = (37 * hash) + AVOIDANCEENABLESTATUSDOWN_FIELD_NUMBER;
      hash = (53 * hash) + getAvoidanceEnableStatusDown();
      hash = (37 * hash) + AVOIDANCEENABLESTATUSUP_FIELD_NUMBER;
      hash = (53 * hash) + getAvoidanceEnableStatusUp();
      hash = (37 * hash) + AVOIDANCEENABLESTATUSHORIZONTAL_FIELD_NUMBER;
      hash = (53 * hash) + getAvoidanceEnableStatusHorizontal();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static AvoidanceData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AvoidanceData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AvoidanceData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AvoidanceData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AvoidanceData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AvoidanceData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AvoidanceData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static AvoidanceData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static AvoidanceData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static AvoidanceData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static AvoidanceData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static AvoidanceData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(AvoidanceData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *避障数据
     * </pre>
     *
     * Protobuf type {@code AvoidanceData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AvoidanceData)
        AvoidanceDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_AvoidanceData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_AvoidanceData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AvoidanceData.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.AvoidanceData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        downHealth_ = 0;

        down_ = 0F;

        frontHealth_ = 0;

        front_ = 0F;

        rightHealth_ = 0;

        right_ = 0F;

        backHealth_ = 0;

        back_ = 0F;

        leftHealth_ = 0;

        left_ = 0F;

        upHealth_ = 0;

        up_ = 0F;

        avoidanceEnableStatusDown_ = 0;

        avoidanceEnableStatusUp_ = 0;

        avoidanceEnableStatusHorizontal_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_AvoidanceData_descriptor;
      }

      @Override
      public AvoidanceData getDefaultInstanceForType() {
        return AvoidanceData.getDefaultInstance();
      }

      @Override
      public AvoidanceData build() {
        AvoidanceData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public AvoidanceData buildPartial() {
        AvoidanceData result = new AvoidanceData(this);
        result.downHealth_ = downHealth_;
        result.down_ = down_;
        result.frontHealth_ = frontHealth_;
        result.front_ = front_;
        result.rightHealth_ = rightHealth_;
        result.right_ = right_;
        result.backHealth_ = backHealth_;
        result.back_ = back_;
        result.leftHealth_ = leftHealth_;
        result.left_ = left_;
        result.upHealth_ = upHealth_;
        result.up_ = up_;
        result.avoidanceEnableStatusDown_ = avoidanceEnableStatusDown_;
        result.avoidanceEnableStatusUp_ = avoidanceEnableStatusUp_;
        result.avoidanceEnableStatusHorizontal_ = avoidanceEnableStatusHorizontal_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AvoidanceData) {
          return mergeFrom((AvoidanceData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(AvoidanceData other) {
        if (other == AvoidanceData.getDefaultInstance()) return this;
        if (other.getDownHealth() != 0) {
          setDownHealth(other.getDownHealth());
        }
        if (other.getDown() != 0F) {
          setDown(other.getDown());
        }
        if (other.getFrontHealth() != 0) {
          setFrontHealth(other.getFrontHealth());
        }
        if (other.getFront() != 0F) {
          setFront(other.getFront());
        }
        if (other.getRightHealth() != 0) {
          setRightHealth(other.getRightHealth());
        }
        if (other.getRight() != 0F) {
          setRight(other.getRight());
        }
        if (other.getBackHealth() != 0) {
          setBackHealth(other.getBackHealth());
        }
        if (other.getBack() != 0F) {
          setBack(other.getBack());
        }
        if (other.getLeftHealth() != 0) {
          setLeftHealth(other.getLeftHealth());
        }
        if (other.getLeft() != 0F) {
          setLeft(other.getLeft());
        }
        if (other.getUpHealth() != 0) {
          setUpHealth(other.getUpHealth());
        }
        if (other.getUp() != 0F) {
          setUp(other.getUp());
        }
        if (other.getAvoidanceEnableStatusDown() != 0) {
          setAvoidanceEnableStatusDown(other.getAvoidanceEnableStatusDown());
        }
        if (other.getAvoidanceEnableStatusUp() != 0) {
          setAvoidanceEnableStatusUp(other.getAvoidanceEnableStatusUp());
        }
        if (other.getAvoidanceEnableStatusHorizontal() != 0) {
          setAvoidanceEnableStatusHorizontal(other.getAvoidanceEnableStatusHorizontal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AvoidanceData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AvoidanceData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int downHealth_ ;
      /**
       * <code>uint32 downHealth = 1;</code>
       * @return The downHealth.
       */
      @Override
      public int getDownHealth() {
        return downHealth_;
      }
      /**
       * <code>uint32 downHealth = 1;</code>
       * @param value The downHealth to set.
       * @return This builder for chaining.
       */
      public Builder setDownHealth(int value) {
        
        downHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 downHealth = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDownHealth() {
        
        downHealth_ = 0;
        onChanged();
        return this;
      }

      private float down_ ;
      /**
       * <pre>
       *距下障碍物的距离(单位:米),downHealth为1时值有效
       * </pre>
       *
       * <code>float down = 2;</code>
       * @return The down.
       */
      @Override
      public float getDown() {
        return down_;
      }
      /**
       * <pre>
       *距下障碍物的距离(单位:米),downHealth为1时值有效
       * </pre>
       *
       * <code>float down = 2;</code>
       * @param value The down to set.
       * @return This builder for chaining.
       */
      public Builder setDown(float value) {
        
        down_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距下障碍物的距离(单位:米),downHealth为1时值有效
       * </pre>
       *
       * <code>float down = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDown() {
        
        down_ = 0F;
        onChanged();
        return this;
      }

      private int frontHealth_ ;
      /**
       * <code>uint32 frontHealth = 3;</code>
       * @return The frontHealth.
       */
      @Override
      public int getFrontHealth() {
        return frontHealth_;
      }
      /**
       * <code>uint32 frontHealth = 3;</code>
       * @param value The frontHealth to set.
       * @return This builder for chaining.
       */
      public Builder setFrontHealth(int value) {
        
        frontHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 frontHealth = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrontHealth() {
        
        frontHealth_ = 0;
        onChanged();
        return this;
      }

      private float front_ ;
      /**
       * <pre>
       *距前障碍物的距离(单位:米),frontHealth为1时值有效 
       * </pre>
       *
       * <code>float front = 4;</code>
       * @return The front.
       */
      @Override
      public float getFront() {
        return front_;
      }
      /**
       * <pre>
       *距前障碍物的距离(单位:米),frontHealth为1时值有效 
       * </pre>
       *
       * <code>float front = 4;</code>
       * @param value The front to set.
       * @return This builder for chaining.
       */
      public Builder setFront(float value) {
        
        front_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距前障碍物的距离(单位:米),frontHealth为1时值有效 
       * </pre>
       *
       * <code>float front = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFront() {
        
        front_ = 0F;
        onChanged();
        return this;
      }

      private int rightHealth_ ;
      /**
       * <code>uint32 rightHealth = 5;</code>
       * @return The rightHealth.
       */
      @Override
      public int getRightHealth() {
        return rightHealth_;
      }
      /**
       * <code>uint32 rightHealth = 5;</code>
       * @param value The rightHealth to set.
       * @return This builder for chaining.
       */
      public Builder setRightHealth(int value) {
        
        rightHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 rightHealth = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightHealth() {
        
        rightHealth_ = 0;
        onChanged();
        return this;
      }

      private float right_ ;
      /**
       * <pre>
       *距右障碍物的距离(单位:米),rightHealth为1时值有效
       * </pre>
       *
       * <code>float right = 6;</code>
       * @return The right.
       */
      @Override
      public float getRight() {
        return right_;
      }
      /**
       * <pre>
       *距右障碍物的距离(单位:米),rightHealth为1时值有效
       * </pre>
       *
       * <code>float right = 6;</code>
       * @param value The right to set.
       * @return This builder for chaining.
       */
      public Builder setRight(float value) {
        
        right_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距右障碍物的距离(单位:米),rightHealth为1时值有效
       * </pre>
       *
       * <code>float right = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRight() {
        
        right_ = 0F;
        onChanged();
        return this;
      }

      private int backHealth_ ;
      /**
       * <code>uint32 backHealth = 7;</code>
       * @return The backHealth.
       */
      @Override
      public int getBackHealth() {
        return backHealth_;
      }
      /**
       * <code>uint32 backHealth = 7;</code>
       * @param value The backHealth to set.
       * @return This builder for chaining.
       */
      public Builder setBackHealth(int value) {
        
        backHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 backHealth = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackHealth() {
        
        backHealth_ = 0;
        onChanged();
        return this;
      }

      private float back_ ;
      /**
       * <pre>
       *距后障碍物的距离(单位:米),backHealth为1时值有效
       * </pre>
       *
       * <code>float back = 8;</code>
       * @return The back.
       */
      @Override
      public float getBack() {
        return back_;
      }
      /**
       * <pre>
       *距后障碍物的距离(单位:米),backHealth为1时值有效
       * </pre>
       *
       * <code>float back = 8;</code>
       * @param value The back to set.
       * @return This builder for chaining.
       */
      public Builder setBack(float value) {
        
        back_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距后障碍物的距离(单位:米),backHealth为1时值有效
       * </pre>
       *
       * <code>float back = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBack() {
        
        back_ = 0F;
        onChanged();
        return this;
      }

      private int leftHealth_ ;
      /**
       * <code>uint32 leftHealth = 9;</code>
       * @return The leftHealth.
       */
      @Override
      public int getLeftHealth() {
        return leftHealth_;
      }
      /**
       * <code>uint32 leftHealth = 9;</code>
       * @param value The leftHealth to set.
       * @return This builder for chaining.
       */
      public Builder setLeftHealth(int value) {
        
        leftHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 leftHealth = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftHealth() {
        
        leftHealth_ = 0;
        onChanged();
        return this;
      }

      private float left_ ;
      /**
       * <pre>
       *距左障碍物的距离(单位:米),leftHealth为1时值有效
       * </pre>
       *
       * <code>float left = 10;</code>
       * @return The left.
       */
      @Override
      public float getLeft() {
        return left_;
      }
      /**
       * <pre>
       *距左障碍物的距离(单位:米),leftHealth为1时值有效
       * </pre>
       *
       * <code>float left = 10;</code>
       * @param value The left to set.
       * @return This builder for chaining.
       */
      public Builder setLeft(float value) {
        
        left_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距左障碍物的距离(单位:米),leftHealth为1时值有效
       * </pre>
       *
       * <code>float left = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeft() {
        
        left_ = 0F;
        onChanged();
        return this;
      }

      private int upHealth_ ;
      /**
       * <code>uint32 upHealth = 11;</code>
       * @return The upHealth.
       */
      @Override
      public int getUpHealth() {
        return upHealth_;
      }
      /**
       * <code>uint32 upHealth = 11;</code>
       * @param value The upHealth to set.
       * @return This builder for chaining.
       */
      public Builder setUpHealth(int value) {
        
        upHealth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 upHealth = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpHealth() {
        
        upHealth_ = 0;
        onChanged();
        return this;
      }

      private float up_ ;
      /**
       * <pre>
       *距上障碍物的距离(单位:米),upHealth为1时值有效
       * </pre>
       *
       * <code>float up = 12;</code>
       * @return The up.
       */
      @Override
      public float getUp() {
        return up_;
      }
      /**
       * <pre>
       *距上障碍物的距离(单位:米),upHealth为1时值有效
       * </pre>
       *
       * <code>float up = 12;</code>
       * @param value The up to set.
       * @return This builder for chaining.
       */
      public Builder setUp(float value) {
        
        up_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距上障碍物的距离(单位:米),upHealth为1时值有效
       * </pre>
       *
       * <code>float up = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearUp() {
        
        up_ = 0F;
        onChanged();
        return this;
      }

      private int avoidanceEnableStatusDown_ ;
      /**
       * <pre>
       *下视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusDown = 13;</code>
       * @return The avoidanceEnableStatusDown.
       */
      @Override
      public int getAvoidanceEnableStatusDown() {
        return avoidanceEnableStatusDown_;
      }
      /**
       * <pre>
       *下视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusDown = 13;</code>
       * @param value The avoidanceEnableStatusDown to set.
       * @return This builder for chaining.
       */
      public Builder setAvoidanceEnableStatusDown(int value) {
        
        avoidanceEnableStatusDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *下视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusDown = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvoidanceEnableStatusDown() {
        
        avoidanceEnableStatusDown_ = 0;
        onChanged();
        return this;
      }

      private int avoidanceEnableStatusUp_ ;
      /**
       * <pre>
       *上视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusUp = 14;</code>
       * @return The avoidanceEnableStatusUp.
       */
      @Override
      public int getAvoidanceEnableStatusUp() {
        return avoidanceEnableStatusUp_;
      }
      /**
       * <pre>
       *上视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusUp = 14;</code>
       * @param value The avoidanceEnableStatusUp to set.
       * @return This builder for chaining.
       */
      public Builder setAvoidanceEnableStatusUp(int value) {
        
        avoidanceEnableStatusUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusUp = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvoidanceEnableStatusUp() {
        
        avoidanceEnableStatusUp_ = 0;
        onChanged();
        return this;
      }

      private int avoidanceEnableStatusHorizontal_ ;
      /**
       * <pre>
       *水平视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusHorizontal = 15;</code>
       * @return The avoidanceEnableStatusHorizontal.
       */
      @Override
      public int getAvoidanceEnableStatusHorizontal() {
        return avoidanceEnableStatusHorizontal_;
      }
      /**
       * <pre>
       *水平视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusHorizontal = 15;</code>
       * @param value The avoidanceEnableStatusHorizontal to set.
       * @return This builder for chaining.
       */
      public Builder setAvoidanceEnableStatusHorizontal(int value) {
        
        avoidanceEnableStatusHorizontal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *水平视觉避障开关状态：0-关闭 1-打开
       * </pre>
       *
       * <code>uint32 avoidanceEnableStatusHorizontal = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvoidanceEnableStatusHorizontal() {
        
        avoidanceEnableStatusHorizontal_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AvoidanceData)
    }

    // @@protoc_insertion_point(class_scope:AvoidanceData)
    private static final AvoidanceData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AvoidanceData();
    }

    public static AvoidanceData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AvoidanceData>
        PARSER = new com.google.protobuf.AbstractParser<AvoidanceData>() {
      @Override
      public AvoidanceData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AvoidanceData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AvoidanceData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<AvoidanceData> getParserForType() {
      return PARSER;
    }

    @Override
    public AvoidanceData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HmsAlarmDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HmsAlarmData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *报警信息ID
     * </pre>
     *
     * <code>uint32 alarmId = 1;</code>
     * @return The alarmId.
     */
    int getAlarmId();

    /**
     * <pre>
     *等级[1/2-警告 3/4/5-错误]
     * </pre>
     *
     * <code>uint32 reportLevel = 2;</code>
     * @return The reportLevel.
     */
    int getReportLevel();

    /**
     * <pre>
     *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
     * </pre>
     *
     * <code>string alarmMssInfo = 3;</code>
     * @return The alarmMssInfo.
     */
    String getAlarmMssInfo();
    /**
     * <pre>
     *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
     * </pre>
     *
     * <code>string alarmMssInfo = 3;</code>
     * @return The bytes for alarmMssInfo.
     */
    com.google.protobuf.ByteString
        getAlarmMssInfoBytes();
  }
  /**
   * <pre>
   *Hms报警信息
   * </pre>
   *
   * Protobuf type {@code HmsAlarmData}
   */
  public static final class HmsAlarmData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HmsAlarmData)
      HmsAlarmDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HmsAlarmData.newBuilder() to construct.
    private HmsAlarmData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HmsAlarmData() {
      alarmMssInfo_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new HmsAlarmData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HmsAlarmData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              alarmId_ = input.readUInt32();
              break;
            }
            case 16: {

              reportLevel_ = input.readUInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              alarmMssInfo_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_HmsAlarmData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_HmsAlarmData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HmsAlarmData.class, Builder.class);
    }

    public static final int ALARMID_FIELD_NUMBER = 1;
    private int alarmId_;
    /**
     * <pre>
     *报警信息ID
     * </pre>
     *
     * <code>uint32 alarmId = 1;</code>
     * @return The alarmId.
     */
    @Override
    public int getAlarmId() {
      return alarmId_;
    }

    public static final int REPORTLEVEL_FIELD_NUMBER = 2;
    private int reportLevel_;
    /**
     * <pre>
     *等级[1/2-警告 3/4/5-错误]
     * </pre>
     *
     * <code>uint32 reportLevel = 2;</code>
     * @return The reportLevel.
     */
    @Override
    public int getReportLevel() {
      return reportLevel_;
    }

    public static final int ALARMMSSINFO_FIELD_NUMBER = 3;
    private volatile Object alarmMssInfo_;
    /**
     * <pre>
     *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
     * </pre>
     *
     * <code>string alarmMssInfo = 3;</code>
     * @return The alarmMssInfo.
     */
    @Override
    public String getAlarmMssInfo() {
      Object ref = alarmMssInfo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        alarmMssInfo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
     * </pre>
     *
     * <code>string alarmMssInfo = 3;</code>
     * @return The bytes for alarmMssInfo.
     */
    @Override
    public com.google.protobuf.ByteString
        getAlarmMssInfoBytes() {
      Object ref = alarmMssInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        alarmMssInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (alarmId_ != 0) {
        output.writeUInt32(1, alarmId_);
      }
      if (reportLevel_ != 0) {
        output.writeUInt32(2, reportLevel_);
      }
      if (!getAlarmMssInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, alarmMssInfo_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (alarmId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, alarmId_);
      }
      if (reportLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, reportLevel_);
      }
      if (!getAlarmMssInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, alarmMssInfo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HmsAlarmData)) {
        return super.equals(obj);
      }
      HmsAlarmData other = (HmsAlarmData) obj;

      if (getAlarmId()
          != other.getAlarmId()) return false;
      if (getReportLevel()
          != other.getReportLevel()) return false;
      if (!getAlarmMssInfo()
          .equals(other.getAlarmMssInfo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALARMID_FIELD_NUMBER;
      hash = (53 * hash) + getAlarmId();
      hash = (37 * hash) + REPORTLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getReportLevel();
      hash = (37 * hash) + ALARMMSSINFO_FIELD_NUMBER;
      hash = (53 * hash) + getAlarmMssInfo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HmsAlarmData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HmsAlarmData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HmsAlarmData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HmsAlarmData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HmsAlarmData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HmsAlarmData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HmsAlarmData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HmsAlarmData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HmsAlarmData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HmsAlarmData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HmsAlarmData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HmsAlarmData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HmsAlarmData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Hms报警信息
     * </pre>
     *
     * Protobuf type {@code HmsAlarmData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HmsAlarmData)
        HmsAlarmDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_HmsAlarmData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_HmsAlarmData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HmsAlarmData.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.HmsAlarmData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        alarmId_ = 0;

        reportLevel_ = 0;

        alarmMssInfo_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_HmsAlarmData_descriptor;
      }

      @Override
      public HmsAlarmData getDefaultInstanceForType() {
        return HmsAlarmData.getDefaultInstance();
      }

      @Override
      public HmsAlarmData build() {
        HmsAlarmData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public HmsAlarmData buildPartial() {
        HmsAlarmData result = new HmsAlarmData(this);
        result.alarmId_ = alarmId_;
        result.reportLevel_ = reportLevel_;
        result.alarmMssInfo_ = alarmMssInfo_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HmsAlarmData) {
          return mergeFrom((HmsAlarmData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HmsAlarmData other) {
        if (other == HmsAlarmData.getDefaultInstance()) return this;
        if (other.getAlarmId() != 0) {
          setAlarmId(other.getAlarmId());
        }
        if (other.getReportLevel() != 0) {
          setReportLevel(other.getReportLevel());
        }
        if (!other.getAlarmMssInfo().isEmpty()) {
          alarmMssInfo_ = other.alarmMssInfo_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HmsAlarmData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HmsAlarmData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int alarmId_ ;
      /**
       * <pre>
       *报警信息ID
       * </pre>
       *
       * <code>uint32 alarmId = 1;</code>
       * @return The alarmId.
       */
      @Override
      public int getAlarmId() {
        return alarmId_;
      }
      /**
       * <pre>
       *报警信息ID
       * </pre>
       *
       * <code>uint32 alarmId = 1;</code>
       * @param value The alarmId to set.
       * @return This builder for chaining.
       */
      public Builder setAlarmId(int value) {
        
        alarmId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *报警信息ID
       * </pre>
       *
       * <code>uint32 alarmId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlarmId() {
        
        alarmId_ = 0;
        onChanged();
        return this;
      }

      private int reportLevel_ ;
      /**
       * <pre>
       *等级[1/2-警告 3/4/5-错误]
       * </pre>
       *
       * <code>uint32 reportLevel = 2;</code>
       * @return The reportLevel.
       */
      @Override
      public int getReportLevel() {
        return reportLevel_;
      }
      /**
       * <pre>
       *等级[1/2-警告 3/4/5-错误]
       * </pre>
       *
       * <code>uint32 reportLevel = 2;</code>
       * @param value The reportLevel to set.
       * @return This builder for chaining.
       */
      public Builder setReportLevel(int value) {
        
        reportLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *等级[1/2-警告 3/4/5-错误]
       * </pre>
       *
       * <code>uint32 reportLevel = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReportLevel() {
        
        reportLevel_ = 0;
        onChanged();
        return this;
      }

      private Object alarmMssInfo_ = "";
      /**
       * <pre>
       *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
       * </pre>
       *
       * <code>string alarmMssInfo = 3;</code>
       * @return The alarmMssInfo.
       */
      public String getAlarmMssInfo() {
        Object ref = alarmMssInfo_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          alarmMssInfo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
       * </pre>
       *
       * <code>string alarmMssInfo = 3;</code>
       * @return The bytes for alarmMssInfo.
       */
      public com.google.protobuf.ByteString
          getAlarmMssInfoBytes() {
        Object ref = alarmMssInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          alarmMssInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
       * </pre>
       *
       * <code>string alarmMssInfo = 3;</code>
       * @param value The alarmMssInfo to set.
       * @return This builder for chaining.
       */
      public Builder setAlarmMssInfo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        alarmMssInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
       * </pre>
       *
       * <code>string alarmMssInfo = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlarmMssInfo() {
        
        alarmMssInfo_ = getDefaultInstance().getAlarmMssInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *报警信息描述(说明：支持中文/英文/日文/法语，默认中文，如需切换请联系技术支持)
       * </pre>
       *
       * <code>string alarmMssInfo = 3;</code>
       * @param value The bytes for alarmMssInfo to set.
       * @return This builder for chaining.
       */
      public Builder setAlarmMssInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        alarmMssInfo_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HmsAlarmData)
    }

    // @@protoc_insertion_point(class_scope:HmsAlarmData)
    private static final HmsAlarmData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HmsAlarmData();
    }

    public static HmsAlarmData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HmsAlarmData>
        PARSER = new com.google.protobuf.AbstractParser<HmsAlarmData>() {
      @Override
      public HmsAlarmData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HmsAlarmData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HmsAlarmData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HmsAlarmData> getParserForType() {
      return PARSER;
    }

    @Override
    public HmsAlarmData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UavStateListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UavStateList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    java.util.List<UavState>
        getUavStatesList();
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    UavState getUavStates(int index);
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    int getUavStatesCount();
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    java.util.List<? extends UavStateOrBuilder>
        getUavStatesOrBuilderList();
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    UavStateOrBuilder getUavStatesOrBuilder(
        int index);
  }
  /**
   * <pre>
   *A8数组(服务端使用)
   * </pre>
   *
   * Protobuf type {@code UavStateList}
   */
  public static final class UavStateList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UavStateList)
      UavStateListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UavStateList.newBuilder() to construct.
    private UavStateList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UavStateList() {
      uavStates_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new UavStateList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UavStateList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                uavStates_ = new java.util.ArrayList<UavState>();
                mutable_bitField0_ |= 0x00000001;
              }
              uavStates_.add(
                  input.readMessage(UavState.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          uavStates_ = java.util.Collections.unmodifiableList(uavStates_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_UavStateList_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_UavStateList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UavStateList.class, Builder.class);
    }

    public static final int UAVSTATES_FIELD_NUMBER = 1;
    private java.util.List<UavState> uavStates_;
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    @Override
    public java.util.List<UavState> getUavStatesList() {
      return uavStates_;
    }
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    @Override
    public java.util.List<? extends UavStateOrBuilder>
        getUavStatesOrBuilderList() {
      return uavStates_;
    }
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    @Override
    public int getUavStatesCount() {
      return uavStates_.size();
    }
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    @Override
    public UavState getUavStates(int index) {
      return uavStates_.get(index);
    }
    /**
     * <code>repeated .UavState uavStates = 1;</code>
     */
    @Override
    public UavStateOrBuilder getUavStatesOrBuilder(
        int index) {
      return uavStates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < uavStates_.size(); i++) {
        output.writeMessage(1, uavStates_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < uavStates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uavStates_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UavStateList)) {
        return super.equals(obj);
      }
      UavStateList other = (UavStateList) obj;

      if (!getUavStatesList()
          .equals(other.getUavStatesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getUavStatesCount() > 0) {
        hash = (37 * hash) + UAVSTATES_FIELD_NUMBER;
        hash = (53 * hash) + getUavStatesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UavStateList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavStateList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavStateList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavStateList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavStateList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavStateList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavStateList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UavStateList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UavStateList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UavStateList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UavStateList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UavStateList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UavStateList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *A8数组(服务端使用)
     * </pre>
     *
     * Protobuf type {@code UavStateList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UavStateList)
        UavStateListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_UavStateList_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_UavStateList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UavStateList.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.UavStateList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUavStatesFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (uavStatesBuilder_ == null) {
          uavStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          uavStatesBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_UavStateList_descriptor;
      }

      @Override
      public UavStateList getDefaultInstanceForType() {
        return UavStateList.getDefaultInstance();
      }

      @Override
      public UavStateList build() {
        UavStateList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public UavStateList buildPartial() {
        UavStateList result = new UavStateList(this);
        int from_bitField0_ = bitField0_;
        if (uavStatesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            uavStates_ = java.util.Collections.unmodifiableList(uavStates_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.uavStates_ = uavStates_;
        } else {
          result.uavStates_ = uavStatesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UavStateList) {
          return mergeFrom((UavStateList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UavStateList other) {
        if (other == UavStateList.getDefaultInstance()) return this;
        if (uavStatesBuilder_ == null) {
          if (!other.uavStates_.isEmpty()) {
            if (uavStates_.isEmpty()) {
              uavStates_ = other.uavStates_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUavStatesIsMutable();
              uavStates_.addAll(other.uavStates_);
            }
            onChanged();
          }
        } else {
          if (!other.uavStates_.isEmpty()) {
            if (uavStatesBuilder_.isEmpty()) {
              uavStatesBuilder_.dispose();
              uavStatesBuilder_ = null;
              uavStates_ = other.uavStates_;
              bitField0_ = (bitField0_ & ~0x00000001);
              uavStatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUavStatesFieldBuilder() : null;
            } else {
              uavStatesBuilder_.addAllMessages(other.uavStates_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UavStateList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UavStateList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<UavState> uavStates_ =
        java.util.Collections.emptyList();
      private void ensureUavStatesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          uavStates_ = new java.util.ArrayList<UavState>(uavStates_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          UavState, UavState.Builder, UavStateOrBuilder> uavStatesBuilder_;

      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public java.util.List<UavState> getUavStatesList() {
        if (uavStatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(uavStates_);
        } else {
          return uavStatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public int getUavStatesCount() {
        if (uavStatesBuilder_ == null) {
          return uavStates_.size();
        } else {
          return uavStatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public UavState getUavStates(int index) {
        if (uavStatesBuilder_ == null) {
          return uavStates_.get(index);
        } else {
          return uavStatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder setUavStates(
          int index, UavState value) {
        if (uavStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUavStatesIsMutable();
          uavStates_.set(index, value);
          onChanged();
        } else {
          uavStatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder setUavStates(
          int index, UavState.Builder builderForValue) {
        if (uavStatesBuilder_ == null) {
          ensureUavStatesIsMutable();
          uavStates_.set(index, builderForValue.build());
          onChanged();
        } else {
          uavStatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder addUavStates(UavState value) {
        if (uavStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUavStatesIsMutable();
          uavStates_.add(value);
          onChanged();
        } else {
          uavStatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder addUavStates(
          int index, UavState value) {
        if (uavStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUavStatesIsMutable();
          uavStates_.add(index, value);
          onChanged();
        } else {
          uavStatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder addUavStates(
          UavState.Builder builderForValue) {
        if (uavStatesBuilder_ == null) {
          ensureUavStatesIsMutable();
          uavStates_.add(builderForValue.build());
          onChanged();
        } else {
          uavStatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder addUavStates(
          int index, UavState.Builder builderForValue) {
        if (uavStatesBuilder_ == null) {
          ensureUavStatesIsMutable();
          uavStates_.add(index, builderForValue.build());
          onChanged();
        } else {
          uavStatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder addAllUavStates(
          Iterable<? extends UavState> values) {
        if (uavStatesBuilder_ == null) {
          ensureUavStatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, uavStates_);
          onChanged();
        } else {
          uavStatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder clearUavStates() {
        if (uavStatesBuilder_ == null) {
          uavStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          uavStatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public Builder removeUavStates(int index) {
        if (uavStatesBuilder_ == null) {
          ensureUavStatesIsMutable();
          uavStates_.remove(index);
          onChanged();
        } else {
          uavStatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public UavState.Builder getUavStatesBuilder(
          int index) {
        return getUavStatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public UavStateOrBuilder getUavStatesOrBuilder(
          int index) {
        if (uavStatesBuilder_ == null) {
          return uavStates_.get(index);  } else {
          return uavStatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public java.util.List<? extends UavStateOrBuilder>
           getUavStatesOrBuilderList() {
        if (uavStatesBuilder_ != null) {
          return uavStatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(uavStates_);
        }
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public UavState.Builder addUavStatesBuilder() {
        return getUavStatesFieldBuilder().addBuilder(
            UavState.getDefaultInstance());
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public UavState.Builder addUavStatesBuilder(
          int index) {
        return getUavStatesFieldBuilder().addBuilder(
            index, UavState.getDefaultInstance());
      }
      /**
       * <code>repeated .UavState uavStates = 1;</code>
       */
      public java.util.List<UavState.Builder>
           getUavStatesBuilderList() {
        return getUavStatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          UavState, UavState.Builder, UavStateOrBuilder>
          getUavStatesFieldBuilder() {
        if (uavStatesBuilder_ == null) {
          uavStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              UavState, UavState.Builder, UavStateOrBuilder>(
                  uavStates_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          uavStates_ = null;
        }
        return uavStatesBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:UavStateList)
    }

    // @@protoc_insertion_point(class_scope:UavStateList)
    private static final UavStateList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UavStateList();
    }

    public static UavStateList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UavStateList>
        PARSER = new com.google.protobuf.AbstractParser<UavStateList>() {
      @Override
      public UavStateList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UavStateList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UavStateList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UavStateList> getParserForType() {
      return PARSER;
    }

    @Override
    public UavStateList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlanLineDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlanLineData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *结束航线后动作：1=返航，2=原地悬停，3=原地降落，4=原地绕飞[目前只osdk4.1版本支持，中心点为最后一个航点，飞机绕此点画圆飞行]，5=返回至第一个航点并悬停[如果飞机到最后一个点时RC和飞机失联，飞机会在最后一个点悬停]
     * </pre>
     *
     * <code>uint32 finishedAction = 1;</code>
     * @return The finishedAction.
     */
    int getFinishedAction();

    /**
     * <pre>
     *最大飞行速度(单位:米/秒，范围0~15)，默认15
     * </pre>
     *
     * <code>float maxSpeed = 2;</code>
     * @return The maxSpeed.
     */
    float getMaxSpeed();

    /**
     * <pre>
     *自动飞行速度(单位:米/秒，范围0~15)，默认8
     * </pre>
     *
     * <code>float autoSpeed = 3;</code>
     * @return The autoSpeed.
     */
    float getAutoSpeed();

    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    java.util.List<PointData>
        getPointsList();
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    PointData getPoints(int index);
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    int getPointsCount();
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    java.util.List<? extends PointDataOrBuilder>
        getPointsOrBuilderList();
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    PointDataOrBuilder getPointsOrBuilder(
        int index);

    /**
     * <pre>
     *网络失联后动作：0=返回HOME点，1=继续航线，默认0
     * </pre>
     *
     * <code>uint32 loseAction = 5;</code>
     * @return The loseAction.
     */
    int getLoseAction();

    /**
     * <pre>
     *返航高度：(单位:米，范围20~1500)，说明：此值为相对起飞点高度，如果太高会有失去网络覆盖风险。不同飞行器返航逻辑不一样，若飞行器距HOME点距离过近，可能不会升高再返航。具体逻辑请咨询大疆DJI
     * </pre>
     *
     * <code>uint32 homeHeight = 6;</code>
     * @return The homeHeight.
     */
    int getHomeHeight();

    /**
     * <pre>
     *是否开启节能模式：0=不是，1=是(说明：谨慎打开节能模式，此模式下飞机沿最短直线距离由起飞点到航线第一个航点，非升高到第一个航点高度再飞往第一个航点，开启此模式需要飞机在空中开始航线。)
     * </pre>
     *
     * <code>uint32 isSaveEnergyMode = 7;</code>
     * @return The isSaveEnergyMode.
     */
    int getIsSaveEnergyMode();

    /**
     * <pre>
     *起飞点机库信息
     * </pre>
     *
     * <code>.HangarPoint takePoint = 8;</code>
     * @return Whether the takePoint field is set.
     */
    boolean hasTakePoint();
    /**
     * <pre>
     *起飞点机库信息
     * </pre>
     *
     * <code>.HangarPoint takePoint = 8;</code>
     * @return The takePoint.
     */
    HangarPoint getTakePoint();
    /**
     * <pre>
     *起飞点机库信息
     * </pre>
     *
     * <code>.HangarPoint takePoint = 8;</code>
     */
    HangarPointOrBuilder getTakePointOrBuilder();

    /**
     * <pre>
     *降落点机库信息
     * </pre>
     *
     * <code>.HangarPoint landPoint = 9;</code>
     * @return Whether the landPoint field is set.
     */
    boolean hasLandPoint();
    /**
     * <pre>
     *降落点机库信息
     * </pre>
     *
     * <code>.HangarPoint landPoint = 9;</code>
     * @return The landPoint.
     */
    HangarPoint getLandPoint();
    /**
     * <pre>
     *降落点机库信息
     * </pre>
     *
     * <code>.HangarPoint landPoint = 9;</code>
     */
    HangarPointOrBuilder getLandPointOrBuilder();

    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    java.util.List<PointData>
        getInterestsList();
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    PointData getInterests(int index);
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    int getInterestsCount();
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    java.util.List<? extends PointDataOrBuilder>
        getInterestsOrBuilderList();
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    PointDataOrBuilder getInterestsOrBuilder(
        int index);

    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * <code>.NormalModel normalModel = 11;</code>
     * @return Whether the normalModel field is set.
     */
    boolean hasNormalModel();
    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * <code>.NormalModel normalModel = 11;</code>
     * @return The normalModel.
     */
    NormalModel getNormalModel();
    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * <code>.NormalModel normalModel = 11;</code>
     */
    NormalModelOrBuilder getNormalModelOrBuilder();

    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * <code>.SurroundModel surroundModel = 12;</code>
     * @return Whether the surroundModel field is set.
     */
    boolean hasSurroundModel();
    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * <code>.SurroundModel surroundModel = 12;</code>
     * @return The surroundModel.
     */
    SurroundModel getSurroundModel();
    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * <code>.SurroundModel surroundModel = 12;</code>
     */
    SurroundModelOrBuilder getSurroundModelOrBuilder();

    /**
     * <pre>
     *起飞点(对象只包含经纬高)
     * </pre>
     *
     * <code>.PointData takeOffPoint = 13;</code>
     * @return Whether the takeOffPoint field is set.
     */
    boolean hasTakeOffPoint();
    /**
     * <pre>
     *起飞点(对象只包含经纬高)
     * </pre>
     *
     * <code>.PointData takeOffPoint = 13;</code>
     * @return The takeOffPoint.
     */
    PointData getTakeOffPoint();
    /**
     * <pre>
     *起飞点(对象只包含经纬高)
     * </pre>
     *
     * <code>.PointData takeOffPoint = 13;</code>
     */
    PointDataOrBuilder getTakeOffPointOrBuilder();

    /**
     * <pre>
     *安全起飞高度：(单位:米，范围20~1500)
     * </pre>
     *
     * <code>uint32 securityHeight = 14;</code>
     * @return The securityHeight.
     */
    int getSecurityHeight();

    /**
     * <pre>
     *航线模板编号,非模板航线时传0 
     * </pre>
     *
     * <code>uint32 templateId = 15;</code>
     * @return The templateId.
     */
    int getTemplateId();
  }
  /**
   * <pre>
   *航线
   * </pre>
   *
   * Protobuf type {@code PlanLineData}
   */
  public static final class PlanLineData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlanLineData)
      PlanLineDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlanLineData.newBuilder() to construct.
    private PlanLineData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlanLineData() {
      points_ = java.util.Collections.emptyList();
      interests_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlanLineData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlanLineData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              finishedAction_ = input.readUInt32();
              break;
            }
            case 21: {

              maxSpeed_ = input.readFloat();
              break;
            }
            case 29: {

              autoSpeed_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                points_ = new java.util.ArrayList<PointData>();
                mutable_bitField0_ |= 0x00000001;
              }
              points_.add(
                  input.readMessage(PointData.parser(), extensionRegistry));
              break;
            }
            case 40: {

              loseAction_ = input.readUInt32();
              break;
            }
            case 48: {

              homeHeight_ = input.readUInt32();
              break;
            }
            case 56: {

              isSaveEnergyMode_ = input.readUInt32();
              break;
            }
            case 66: {
              HangarPoint.Builder subBuilder = null;
              if (takePoint_ != null) {
                subBuilder = takePoint_.toBuilder();
              }
              takePoint_ = input.readMessage(HangarPoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(takePoint_);
                takePoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              HangarPoint.Builder subBuilder = null;
              if (landPoint_ != null) {
                subBuilder = landPoint_.toBuilder();
              }
              landPoint_ = input.readMessage(HangarPoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(landPoint_);
                landPoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                interests_ = new java.util.ArrayList<PointData>();
                mutable_bitField0_ |= 0x00000002;
              }
              interests_.add(
                  input.readMessage(PointData.parser(), extensionRegistry));
              break;
            }
            case 90: {
              NormalModel.Builder subBuilder = null;
              if (normalModel_ != null) {
                subBuilder = normalModel_.toBuilder();
              }
              normalModel_ = input.readMessage(NormalModel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(normalModel_);
                normalModel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              SurroundModel.Builder subBuilder = null;
              if (surroundModel_ != null) {
                subBuilder = surroundModel_.toBuilder();
              }
              surroundModel_ = input.readMessage(SurroundModel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(surroundModel_);
                surroundModel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              PointData.Builder subBuilder = null;
              if (takeOffPoint_ != null) {
                subBuilder = takeOffPoint_.toBuilder();
              }
              takeOffPoint_ = input.readMessage(PointData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(takeOffPoint_);
                takeOffPoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 112: {

              securityHeight_ = input.readUInt32();
              break;
            }
            case 120: {

              templateId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          interests_ = java.util.Collections.unmodifiableList(interests_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_PlanLineData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_PlanLineData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlanLineData.class, Builder.class);
    }

    public static final int FINISHEDACTION_FIELD_NUMBER = 1;
    private int finishedAction_;
    /**
     * <pre>
     *结束航线后动作：1=返航，2=原地悬停，3=原地降落，4=原地绕飞[目前只osdk4.1版本支持，中心点为最后一个航点，飞机绕此点画圆飞行]，5=返回至第一个航点并悬停[如果飞机到最后一个点时RC和飞机失联，飞机会在最后一个点悬停]
     * </pre>
     *
     * <code>uint32 finishedAction = 1;</code>
     * @return The finishedAction.
     */
    @Override
    public int getFinishedAction() {
      return finishedAction_;
    }

    public static final int MAXSPEED_FIELD_NUMBER = 2;
    private float maxSpeed_;
    /**
     * <pre>
     *最大飞行速度(单位:米/秒，范围0~15)，默认15
     * </pre>
     *
     * <code>float maxSpeed = 2;</code>
     * @return The maxSpeed.
     */
    @Override
    public float getMaxSpeed() {
      return maxSpeed_;
    }

    public static final int AUTOSPEED_FIELD_NUMBER = 3;
    private float autoSpeed_;
    /**
     * <pre>
     *自动飞行速度(单位:米/秒，范围0~15)，默认8
     * </pre>
     *
     * <code>float autoSpeed = 3;</code>
     * @return The autoSpeed.
     */
    @Override
    public float getAutoSpeed() {
      return autoSpeed_;
    }

    public static final int POINTS_FIELD_NUMBER = 4;
    private java.util.List<PointData> points_;
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    @Override
    public java.util.List<PointData> getPointsList() {
      return points_;
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    @Override
    public java.util.List<? extends PointDataOrBuilder>
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    @Override
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    @Override
    public PointData getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    @Override
    public PointDataOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    public static final int LOSEACTION_FIELD_NUMBER = 5;
    private int loseAction_;
    /**
     * <pre>
     *网络失联后动作：0=返回HOME点，1=继续航线，默认0
     * </pre>
     *
     * <code>uint32 loseAction = 5;</code>
     * @return The loseAction.
     */
    @Override
    public int getLoseAction() {
      return loseAction_;
    }

    public static final int HOMEHEIGHT_FIELD_NUMBER = 6;
    private int homeHeight_;
    /**
     * <pre>
     *返航高度：(单位:米，范围20~1500)，说明：此值为相对起飞点高度，如果太高会有失去网络覆盖风险。不同飞行器返航逻辑不一样，若飞行器距HOME点距离过近，可能不会升高再返航。具体逻辑请咨询大疆DJI
     * </pre>
     *
     * <code>uint32 homeHeight = 6;</code>
     * @return The homeHeight.
     */
    @Override
    public int getHomeHeight() {
      return homeHeight_;
    }

    public static final int ISSAVEENERGYMODE_FIELD_NUMBER = 7;
    private int isSaveEnergyMode_;
    /**
     * <pre>
     *是否开启节能模式：0=不是，1=是(说明：谨慎打开节能模式，此模式下飞机沿最短直线距离由起飞点到航线第一个航点，非升高到第一个航点高度再飞往第一个航点，开启此模式需要飞机在空中开始航线。)
     * </pre>
     *
     * <code>uint32 isSaveEnergyMode = 7;</code>
     * @return The isSaveEnergyMode.
     */
    @Override
    public int getIsSaveEnergyMode() {
      return isSaveEnergyMode_;
    }

    public static final int TAKEPOINT_FIELD_NUMBER = 8;
    private HangarPoint takePoint_;
    /**
     * <pre>
     *起飞点机库信息
     * </pre>
     *
     * <code>.HangarPoint takePoint = 8;</code>
     * @return Whether the takePoint field is set.
     */
    @Override
    public boolean hasTakePoint() {
      return takePoint_ != null;
    }
    /**
     * <pre>
     *起飞点机库信息
     * </pre>
     *
     * <code>.HangarPoint takePoint = 8;</code>
     * @return The takePoint.
     */
    @Override
    public HangarPoint getTakePoint() {
      return takePoint_ == null ? HangarPoint.getDefaultInstance() : takePoint_;
    }
    /**
     * <pre>
     *起飞点机库信息
     * </pre>
     *
     * <code>.HangarPoint takePoint = 8;</code>
     */
    @Override
    public HangarPointOrBuilder getTakePointOrBuilder() {
      return getTakePoint();
    }

    public static final int LANDPOINT_FIELD_NUMBER = 9;
    private HangarPoint landPoint_;
    /**
     * <pre>
     *降落点机库信息
     * </pre>
     *
     * <code>.HangarPoint landPoint = 9;</code>
     * @return Whether the landPoint field is set.
     */
    @Override
    public boolean hasLandPoint() {
      return landPoint_ != null;
    }
    /**
     * <pre>
     *降落点机库信息
     * </pre>
     *
     * <code>.HangarPoint landPoint = 9;</code>
     * @return The landPoint.
     */
    @Override
    public HangarPoint getLandPoint() {
      return landPoint_ == null ? HangarPoint.getDefaultInstance() : landPoint_;
    }
    /**
     * <pre>
     *降落点机库信息
     * </pre>
     *
     * <code>.HangarPoint landPoint = 9;</code>
     */
    @Override
    public HangarPointOrBuilder getLandPointOrBuilder() {
      return getLandPoint();
    }

    public static final int INTERESTS_FIELD_NUMBER = 10;
    private java.util.List<PointData> interests_;
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    @Override
    public java.util.List<PointData> getInterestsList() {
      return interests_;
    }
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    @Override
    public java.util.List<? extends PointDataOrBuilder>
        getInterestsOrBuilderList() {
      return interests_;
    }
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    @Override
    public int getInterestsCount() {
      return interests_.size();
    }
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    @Override
    public PointData getInterests(int index) {
      return interests_.get(index);
    }
    /**
     * <pre>
     *兴趣点数组(对象只包含经纬高)
     * </pre>
     *
     * <code>repeated .PointData interests = 10;</code>
     */
    @Override
    public PointDataOrBuilder getInterestsOrBuilder(
        int index) {
      return interests_.get(index);
    }

    public static final int NORMALMODEL_FIELD_NUMBER = 11;
    private NormalModel normalModel_;
    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * <code>.NormalModel normalModel = 11;</code>
     * @return Whether the normalModel field is set.
     */
    @Override
    public boolean hasNormalModel() {
      return normalModel_ != null;
    }
    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * <code>.NormalModel normalModel = 11;</code>
     * @return The normalModel.
     */
    @Override
    public NormalModel getNormalModel() {
      return normalModel_ == null ? NormalModel.getDefaultInstance() : normalModel_;
    }
    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * <code>.NormalModel normalModel = 11;</code>
     */
    @Override
    public NormalModelOrBuilder getNormalModelOrBuilder() {
      return getNormalModel();
    }

    public static final int SURROUNDMODEL_FIELD_NUMBER = 12;
    private SurroundModel surroundModel_;
    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * <code>.SurroundModel surroundModel = 12;</code>
     * @return Whether the surroundModel field is set.
     */
    @Override
    public boolean hasSurroundModel() {
      return surroundModel_ != null;
    }
    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * <code>.SurroundModel surroundModel = 12;</code>
     * @return The surroundModel.
     */
    @Override
    public SurroundModel getSurroundModel() {
      return surroundModel_ == null ? SurroundModel.getDefaultInstance() : surroundModel_;
    }
    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * <code>.SurroundModel surroundModel = 12;</code>
     */
    @Override
    public SurroundModelOrBuilder getSurroundModelOrBuilder() {
      return getSurroundModel();
    }

    public static final int TAKEOFFPOINT_FIELD_NUMBER = 13;
    private PointData takeOffPoint_;
    /**
     * <pre>
     *起飞点(对象只包含经纬高)
     * </pre>
     *
     * <code>.PointData takeOffPoint = 13;</code>
     * @return Whether the takeOffPoint field is set.
     */
    @Override
    public boolean hasTakeOffPoint() {
      return takeOffPoint_ != null;
    }
    /**
     * <pre>
     *起飞点(对象只包含经纬高)
     * </pre>
     *
     * <code>.PointData takeOffPoint = 13;</code>
     * @return The takeOffPoint.
     */
    @Override
    public PointData getTakeOffPoint() {
      return takeOffPoint_ == null ? PointData.getDefaultInstance() : takeOffPoint_;
    }
    /**
     * <pre>
     *起飞点(对象只包含经纬高)
     * </pre>
     *
     * <code>.PointData takeOffPoint = 13;</code>
     */
    @Override
    public PointDataOrBuilder getTakeOffPointOrBuilder() {
      return getTakeOffPoint();
    }

    public static final int SECURITYHEIGHT_FIELD_NUMBER = 14;
    private int securityHeight_;
    /**
     * <pre>
     *安全起飞高度：(单位:米，范围20~1500)
     * </pre>
     *
     * <code>uint32 securityHeight = 14;</code>
     * @return The securityHeight.
     */
    @Override
    public int getSecurityHeight() {
      return securityHeight_;
    }

    public static final int TEMPLATEID_FIELD_NUMBER = 15;
    private int templateId_;
    /**
     * <pre>
     *航线模板编号,非模板航线时传0 
     * </pre>
     *
     * <code>uint32 templateId = 15;</code>
     * @return The templateId.
     */
    @Override
    public int getTemplateId() {
      return templateId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (finishedAction_ != 0) {
        output.writeUInt32(1, finishedAction_);
      }
      if (maxSpeed_ != 0F) {
        output.writeFloat(2, maxSpeed_);
      }
      if (autoSpeed_ != 0F) {
        output.writeFloat(3, autoSpeed_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(4, points_.get(i));
      }
      if (loseAction_ != 0) {
        output.writeUInt32(5, loseAction_);
      }
      if (homeHeight_ != 0) {
        output.writeUInt32(6, homeHeight_);
      }
      if (isSaveEnergyMode_ != 0) {
        output.writeUInt32(7, isSaveEnergyMode_);
      }
      if (takePoint_ != null) {
        output.writeMessage(8, getTakePoint());
      }
      if (landPoint_ != null) {
        output.writeMessage(9, getLandPoint());
      }
      for (int i = 0; i < interests_.size(); i++) {
        output.writeMessage(10, interests_.get(i));
      }
      if (normalModel_ != null) {
        output.writeMessage(11, getNormalModel());
      }
      if (surroundModel_ != null) {
        output.writeMessage(12, getSurroundModel());
      }
      if (takeOffPoint_ != null) {
        output.writeMessage(13, getTakeOffPoint());
      }
      if (securityHeight_ != 0) {
        output.writeUInt32(14, securityHeight_);
      }
      if (templateId_ != 0) {
        output.writeUInt32(15, templateId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (finishedAction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, finishedAction_);
      }
      if (maxSpeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxSpeed_);
      }
      if (autoSpeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, autoSpeed_);
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, points_.get(i));
      }
      if (loseAction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, loseAction_);
      }
      if (homeHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, homeHeight_);
      }
      if (isSaveEnergyMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, isSaveEnergyMode_);
      }
      if (takePoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTakePoint());
      }
      if (landPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getLandPoint());
      }
      for (int i = 0; i < interests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, interests_.get(i));
      }
      if (normalModel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getNormalModel());
      }
      if (surroundModel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getSurroundModel());
      }
      if (takeOffPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getTakeOffPoint());
      }
      if (securityHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, securityHeight_);
      }
      if (templateId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, templateId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlanLineData)) {
        return super.equals(obj);
      }
      PlanLineData other = (PlanLineData) obj;

      if (getFinishedAction()
          != other.getFinishedAction()) return false;
      if (Float.floatToIntBits(getMaxSpeed())
          != Float.floatToIntBits(
              other.getMaxSpeed())) return false;
      if (Float.floatToIntBits(getAutoSpeed())
          != Float.floatToIntBits(
              other.getAutoSpeed())) return false;
      if (!getPointsList()
          .equals(other.getPointsList())) return false;
      if (getLoseAction()
          != other.getLoseAction()) return false;
      if (getHomeHeight()
          != other.getHomeHeight()) return false;
      if (getIsSaveEnergyMode()
          != other.getIsSaveEnergyMode()) return false;
      if (hasTakePoint() != other.hasTakePoint()) return false;
      if (hasTakePoint()) {
        if (!getTakePoint()
            .equals(other.getTakePoint())) return false;
      }
      if (hasLandPoint() != other.hasLandPoint()) return false;
      if (hasLandPoint()) {
        if (!getLandPoint()
            .equals(other.getLandPoint())) return false;
      }
      if (!getInterestsList()
          .equals(other.getInterestsList())) return false;
      if (hasNormalModel() != other.hasNormalModel()) return false;
      if (hasNormalModel()) {
        if (!getNormalModel()
            .equals(other.getNormalModel())) return false;
      }
      if (hasSurroundModel() != other.hasSurroundModel()) return false;
      if (hasSurroundModel()) {
        if (!getSurroundModel()
            .equals(other.getSurroundModel())) return false;
      }
      if (hasTakeOffPoint() != other.hasTakeOffPoint()) return false;
      if (hasTakeOffPoint()) {
        if (!getTakeOffPoint()
            .equals(other.getTakeOffPoint())) return false;
      }
      if (getSecurityHeight()
          != other.getSecurityHeight()) return false;
      if (getTemplateId()
          != other.getTemplateId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FINISHEDACTION_FIELD_NUMBER;
      hash = (53 * hash) + getFinishedAction();
      hash = (37 * hash) + MAXSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getMaxSpeed());
      hash = (37 * hash) + AUTOSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAutoSpeed());
      if (getPointsCount() > 0) {
        hash = (37 * hash) + POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getPointsList().hashCode();
      }
      hash = (37 * hash) + LOSEACTION_FIELD_NUMBER;
      hash = (53 * hash) + getLoseAction();
      hash = (37 * hash) + HOMEHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHomeHeight();
      hash = (37 * hash) + ISSAVEENERGYMODE_FIELD_NUMBER;
      hash = (53 * hash) + getIsSaveEnergyMode();
      if (hasTakePoint()) {
        hash = (37 * hash) + TAKEPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getTakePoint().hashCode();
      }
      if (hasLandPoint()) {
        hash = (37 * hash) + LANDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getLandPoint().hashCode();
      }
      if (getInterestsCount() > 0) {
        hash = (37 * hash) + INTERESTS_FIELD_NUMBER;
        hash = (53 * hash) + getInterestsList().hashCode();
      }
      if (hasNormalModel()) {
        hash = (37 * hash) + NORMALMODEL_FIELD_NUMBER;
        hash = (53 * hash) + getNormalModel().hashCode();
      }
      if (hasSurroundModel()) {
        hash = (37 * hash) + SURROUNDMODEL_FIELD_NUMBER;
        hash = (53 * hash) + getSurroundModel().hashCode();
      }
      if (hasTakeOffPoint()) {
        hash = (37 * hash) + TAKEOFFPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getTakeOffPoint().hashCode();
      }
      hash = (37 * hash) + SECURITYHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityHeight();
      hash = (37 * hash) + TEMPLATEID_FIELD_NUMBER;
      hash = (53 * hash) + getTemplateId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PlanLineData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlanLineData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlanLineData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlanLineData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlanLineData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlanLineData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlanLineData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PlanLineData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PlanLineData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *航线
     * </pre>
     *
     * Protobuf type {@code PlanLineData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlanLineData)
        PlanLineDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_PlanLineData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_PlanLineData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlanLineData.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.PlanLineData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
          getInterestsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        finishedAction_ = 0;

        maxSpeed_ = 0F;

        autoSpeed_ = 0F;

        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointsBuilder_.clear();
        }
        loseAction_ = 0;

        homeHeight_ = 0;

        isSaveEnergyMode_ = 0;

        if (takePointBuilder_ == null) {
          takePoint_ = null;
        } else {
          takePoint_ = null;
          takePointBuilder_ = null;
        }
        if (landPointBuilder_ == null) {
          landPoint_ = null;
        } else {
          landPoint_ = null;
          landPointBuilder_ = null;
        }
        if (interestsBuilder_ == null) {
          interests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          interestsBuilder_.clear();
        }
        if (normalModelBuilder_ == null) {
          normalModel_ = null;
        } else {
          normalModel_ = null;
          normalModelBuilder_ = null;
        }
        if (surroundModelBuilder_ == null) {
          surroundModel_ = null;
        } else {
          surroundModel_ = null;
          surroundModelBuilder_ = null;
        }
        if (takeOffPointBuilder_ == null) {
          takeOffPoint_ = null;
        } else {
          takeOffPoint_ = null;
          takeOffPointBuilder_ = null;
        }
        securityHeight_ = 0;

        templateId_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_PlanLineData_descriptor;
      }

      @Override
      public PlanLineData getDefaultInstanceForType() {
        return PlanLineData.getDefaultInstance();
      }

      @Override
      public PlanLineData build() {
        PlanLineData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PlanLineData buildPartial() {
        PlanLineData result = new PlanLineData(this);
        int from_bitField0_ = bitField0_;
        result.finishedAction_ = finishedAction_;
        result.maxSpeed_ = maxSpeed_;
        result.autoSpeed_ = autoSpeed_;
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        result.loseAction_ = loseAction_;
        result.homeHeight_ = homeHeight_;
        result.isSaveEnergyMode_ = isSaveEnergyMode_;
        if (takePointBuilder_ == null) {
          result.takePoint_ = takePoint_;
        } else {
          result.takePoint_ = takePointBuilder_.build();
        }
        if (landPointBuilder_ == null) {
          result.landPoint_ = landPoint_;
        } else {
          result.landPoint_ = landPointBuilder_.build();
        }
        if (interestsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            interests_ = java.util.Collections.unmodifiableList(interests_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.interests_ = interests_;
        } else {
          result.interests_ = interestsBuilder_.build();
        }
        if (normalModelBuilder_ == null) {
          result.normalModel_ = normalModel_;
        } else {
          result.normalModel_ = normalModelBuilder_.build();
        }
        if (surroundModelBuilder_ == null) {
          result.surroundModel_ = surroundModel_;
        } else {
          result.surroundModel_ = surroundModelBuilder_.build();
        }
        if (takeOffPointBuilder_ == null) {
          result.takeOffPoint_ = takeOffPoint_;
        } else {
          result.takeOffPoint_ = takeOffPointBuilder_.build();
        }
        result.securityHeight_ = securityHeight_;
        result.templateId_ = templateId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlanLineData) {
          return mergeFrom((PlanLineData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlanLineData other) {
        if (other == PlanLineData.getDefaultInstance()) return this;
        if (other.getFinishedAction() != 0) {
          setFinishedAction(other.getFinishedAction());
        }
        if (other.getMaxSpeed() != 0F) {
          setMaxSpeed(other.getMaxSpeed());
        }
        if (other.getAutoSpeed() != 0F) {
          setAutoSpeed(other.getAutoSpeed());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        if (other.getLoseAction() != 0) {
          setLoseAction(other.getLoseAction());
        }
        if (other.getHomeHeight() != 0) {
          setHomeHeight(other.getHomeHeight());
        }
        if (other.getIsSaveEnergyMode() != 0) {
          setIsSaveEnergyMode(other.getIsSaveEnergyMode());
        }
        if (other.hasTakePoint()) {
          mergeTakePoint(other.getTakePoint());
        }
        if (other.hasLandPoint()) {
          mergeLandPoint(other.getLandPoint());
        }
        if (interestsBuilder_ == null) {
          if (!other.interests_.isEmpty()) {
            if (interests_.isEmpty()) {
              interests_ = other.interests_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInterestsIsMutable();
              interests_.addAll(other.interests_);
            }
            onChanged();
          }
        } else {
          if (!other.interests_.isEmpty()) {
            if (interestsBuilder_.isEmpty()) {
              interestsBuilder_.dispose();
              interestsBuilder_ = null;
              interests_ = other.interests_;
              bitField0_ = (bitField0_ & ~0x00000002);
              interestsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInterestsFieldBuilder() : null;
            } else {
              interestsBuilder_.addAllMessages(other.interests_);
            }
          }
        }
        if (other.hasNormalModel()) {
          mergeNormalModel(other.getNormalModel());
        }
        if (other.hasSurroundModel()) {
          mergeSurroundModel(other.getSurroundModel());
        }
        if (other.hasTakeOffPoint()) {
          mergeTakeOffPoint(other.getTakeOffPoint());
        }
        if (other.getSecurityHeight() != 0) {
          setSecurityHeight(other.getSecurityHeight());
        }
        if (other.getTemplateId() != 0) {
          setTemplateId(other.getTemplateId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlanLineData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlanLineData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int finishedAction_ ;
      /**
       * <pre>
       *结束航线后动作：1=返航，2=原地悬停，3=原地降落，4=原地绕飞[目前只osdk4.1版本支持，中心点为最后一个航点，飞机绕此点画圆飞行]，5=返回至第一个航点并悬停[如果飞机到最后一个点时RC和飞机失联，飞机会在最后一个点悬停]
       * </pre>
       *
       * <code>uint32 finishedAction = 1;</code>
       * @return The finishedAction.
       */
      @Override
      public int getFinishedAction() {
        return finishedAction_;
      }
      /**
       * <pre>
       *结束航线后动作：1=返航，2=原地悬停，3=原地降落，4=原地绕飞[目前只osdk4.1版本支持，中心点为最后一个航点，飞机绕此点画圆飞行]，5=返回至第一个航点并悬停[如果飞机到最后一个点时RC和飞机失联，飞机会在最后一个点悬停]
       * </pre>
       *
       * <code>uint32 finishedAction = 1;</code>
       * @param value The finishedAction to set.
       * @return This builder for chaining.
       */
      public Builder setFinishedAction(int value) {
        
        finishedAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结束航线后动作：1=返航，2=原地悬停，3=原地降落，4=原地绕飞[目前只osdk4.1版本支持，中心点为最后一个航点，飞机绕此点画圆飞行]，5=返回至第一个航点并悬停[如果飞机到最后一个点时RC和飞机失联，飞机会在最后一个点悬停]
       * </pre>
       *
       * <code>uint32 finishedAction = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinishedAction() {
        
        finishedAction_ = 0;
        onChanged();
        return this;
      }

      private float maxSpeed_ ;
      /**
       * <pre>
       *最大飞行速度(单位:米/秒，范围0~15)，默认15
       * </pre>
       *
       * <code>float maxSpeed = 2;</code>
       * @return The maxSpeed.
       */
      @Override
      public float getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <pre>
       *最大飞行速度(单位:米/秒，范围0~15)，默认15
       * </pre>
       *
       * <code>float maxSpeed = 2;</code>
       * @param value The maxSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSpeed(float value) {
        
        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大飞行速度(单位:米/秒，范围0~15)，默认15
       * </pre>
       *
       * <code>float maxSpeed = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSpeed() {
        
        maxSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float autoSpeed_ ;
      /**
       * <pre>
       *自动飞行速度(单位:米/秒，范围0~15)，默认8
       * </pre>
       *
       * <code>float autoSpeed = 3;</code>
       * @return The autoSpeed.
       */
      @Override
      public float getAutoSpeed() {
        return autoSpeed_;
      }
      /**
       * <pre>
       *自动飞行速度(单位:米/秒，范围0~15)，默认8
       * </pre>
       *
       * <code>float autoSpeed = 3;</code>
       * @param value The autoSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setAutoSpeed(float value) {
        
        autoSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *自动飞行速度(单位:米/秒，范围0~15)，默认8
       * </pre>
       *
       * <code>float autoSpeed = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoSpeed() {
        
        autoSpeed_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<PointData> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          points_ = new java.util.ArrayList<PointData>(points_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> pointsBuilder_;

      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public java.util.List<PointData> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder setPoints(
          int index, PointData value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder setPoints(
          int index, PointData.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(PointData value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(
          int index, PointData value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(
          PointData.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(
          int index, PointData.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addAllPoints(
          Iterable<? extends PointData> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointDataOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public java.util.List<? extends PointDataOrBuilder>
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public java.util.List<PointData.Builder>
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      private int loseAction_ ;
      /**
       * <pre>
       *网络失联后动作：0=返回HOME点，1=继续航线，默认0
       * </pre>
       *
       * <code>uint32 loseAction = 5;</code>
       * @return The loseAction.
       */
      @Override
      public int getLoseAction() {
        return loseAction_;
      }
      /**
       * <pre>
       *网络失联后动作：0=返回HOME点，1=继续航线，默认0
       * </pre>
       *
       * <code>uint32 loseAction = 5;</code>
       * @param value The loseAction to set.
       * @return This builder for chaining.
       */
      public Builder setLoseAction(int value) {
        
        loseAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网络失联后动作：0=返回HOME点，1=继续航线，默认0
       * </pre>
       *
       * <code>uint32 loseAction = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLoseAction() {
        
        loseAction_ = 0;
        onChanged();
        return this;
      }

      private int homeHeight_ ;
      /**
       * <pre>
       *返航高度：(单位:米，范围20~1500)，说明：此值为相对起飞点高度，如果太高会有失去网络覆盖风险。不同飞行器返航逻辑不一样，若飞行器距HOME点距离过近，可能不会升高再返航。具体逻辑请咨询大疆DJI
       * </pre>
       *
       * <code>uint32 homeHeight = 6;</code>
       * @return The homeHeight.
       */
      @Override
      public int getHomeHeight() {
        return homeHeight_;
      }
      /**
       * <pre>
       *返航高度：(单位:米，范围20~1500)，说明：此值为相对起飞点高度，如果太高会有失去网络覆盖风险。不同飞行器返航逻辑不一样，若飞行器距HOME点距离过近，可能不会升高再返航。具体逻辑请咨询大疆DJI
       * </pre>
       *
       * <code>uint32 homeHeight = 6;</code>
       * @param value The homeHeight to set.
       * @return This builder for chaining.
       */
      public Builder setHomeHeight(int value) {
        
        homeHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返航高度：(单位:米，范围20~1500)，说明：此值为相对起飞点高度，如果太高会有失去网络覆盖风险。不同飞行器返航逻辑不一样，若飞行器距HOME点距离过近，可能不会升高再返航。具体逻辑请咨询大疆DJI
       * </pre>
       *
       * <code>uint32 homeHeight = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHomeHeight() {
        
        homeHeight_ = 0;
        onChanged();
        return this;
      }

      private int isSaveEnergyMode_ ;
      /**
       * <pre>
       *是否开启节能模式：0=不是，1=是(说明：谨慎打开节能模式，此模式下飞机沿最短直线距离由起飞点到航线第一个航点，非升高到第一个航点高度再飞往第一个航点，开启此模式需要飞机在空中开始航线。)
       * </pre>
       *
       * <code>uint32 isSaveEnergyMode = 7;</code>
       * @return The isSaveEnergyMode.
       */
      @Override
      public int getIsSaveEnergyMode() {
        return isSaveEnergyMode_;
      }
      /**
       * <pre>
       *是否开启节能模式：0=不是，1=是(说明：谨慎打开节能模式，此模式下飞机沿最短直线距离由起飞点到航线第一个航点，非升高到第一个航点高度再飞往第一个航点，开启此模式需要飞机在空中开始航线。)
       * </pre>
       *
       * <code>uint32 isSaveEnergyMode = 7;</code>
       * @param value The isSaveEnergyMode to set.
       * @return This builder for chaining.
       */
      public Builder setIsSaveEnergyMode(int value) {
        
        isSaveEnergyMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否开启节能模式：0=不是，1=是(说明：谨慎打开节能模式，此模式下飞机沿最短直线距离由起飞点到航线第一个航点，非升高到第一个航点高度再飞往第一个航点，开启此模式需要飞机在空中开始航线。)
       * </pre>
       *
       * <code>uint32 isSaveEnergyMode = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSaveEnergyMode() {
        
        isSaveEnergyMode_ = 0;
        onChanged();
        return this;
      }

      private HangarPoint takePoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          HangarPoint, HangarPoint.Builder, HangarPointOrBuilder> takePointBuilder_;
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       * @return Whether the takePoint field is set.
       */
      public boolean hasTakePoint() {
        return takePointBuilder_ != null || takePoint_ != null;
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       * @return The takePoint.
       */
      public HangarPoint getTakePoint() {
        if (takePointBuilder_ == null) {
          return takePoint_ == null ? HangarPoint.getDefaultInstance() : takePoint_;
        } else {
          return takePointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      public Builder setTakePoint(HangarPoint value) {
        if (takePointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          takePoint_ = value;
          onChanged();
        } else {
          takePointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      public Builder setTakePoint(
          HangarPoint.Builder builderForValue) {
        if (takePointBuilder_ == null) {
          takePoint_ = builderForValue.build();
          onChanged();
        } else {
          takePointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      public Builder mergeTakePoint(HangarPoint value) {
        if (takePointBuilder_ == null) {
          if (takePoint_ != null) {
            takePoint_ =
              HangarPoint.newBuilder(takePoint_).mergeFrom(value).buildPartial();
          } else {
            takePoint_ = value;
          }
          onChanged();
        } else {
          takePointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      public Builder clearTakePoint() {
        if (takePointBuilder_ == null) {
          takePoint_ = null;
          onChanged();
        } else {
          takePoint_ = null;
          takePointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      public HangarPoint.Builder getTakePointBuilder() {
        
        onChanged();
        return getTakePointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      public HangarPointOrBuilder getTakePointOrBuilder() {
        if (takePointBuilder_ != null) {
          return takePointBuilder_.getMessageOrBuilder();
        } else {
          return takePoint_ == null ?
              HangarPoint.getDefaultInstance() : takePoint_;
        }
      }
      /**
       * <pre>
       *起飞点机库信息
       * </pre>
       *
       * <code>.HangarPoint takePoint = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          HangarPoint, HangarPoint.Builder, HangarPointOrBuilder>
          getTakePointFieldBuilder() {
        if (takePointBuilder_ == null) {
          takePointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              HangarPoint, HangarPoint.Builder, HangarPointOrBuilder>(
                  getTakePoint(),
                  getParentForChildren(),
                  isClean());
          takePoint_ = null;
        }
        return takePointBuilder_;
      }

      private HangarPoint landPoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          HangarPoint, HangarPoint.Builder, HangarPointOrBuilder> landPointBuilder_;
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       * @return Whether the landPoint field is set.
       */
      public boolean hasLandPoint() {
        return landPointBuilder_ != null || landPoint_ != null;
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       * @return The landPoint.
       */
      public HangarPoint getLandPoint() {
        if (landPointBuilder_ == null) {
          return landPoint_ == null ? HangarPoint.getDefaultInstance() : landPoint_;
        } else {
          return landPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      public Builder setLandPoint(HangarPoint value) {
        if (landPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          landPoint_ = value;
          onChanged();
        } else {
          landPointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      public Builder setLandPoint(
          HangarPoint.Builder builderForValue) {
        if (landPointBuilder_ == null) {
          landPoint_ = builderForValue.build();
          onChanged();
        } else {
          landPointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      public Builder mergeLandPoint(HangarPoint value) {
        if (landPointBuilder_ == null) {
          if (landPoint_ != null) {
            landPoint_ =
              HangarPoint.newBuilder(landPoint_).mergeFrom(value).buildPartial();
          } else {
            landPoint_ = value;
          }
          onChanged();
        } else {
          landPointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      public Builder clearLandPoint() {
        if (landPointBuilder_ == null) {
          landPoint_ = null;
          onChanged();
        } else {
          landPoint_ = null;
          landPointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      public HangarPoint.Builder getLandPointBuilder() {
        
        onChanged();
        return getLandPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      public HangarPointOrBuilder getLandPointOrBuilder() {
        if (landPointBuilder_ != null) {
          return landPointBuilder_.getMessageOrBuilder();
        } else {
          return landPoint_ == null ?
              HangarPoint.getDefaultInstance() : landPoint_;
        }
      }
      /**
       * <pre>
       *降落点机库信息
       * </pre>
       *
       * <code>.HangarPoint landPoint = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          HangarPoint, HangarPoint.Builder, HangarPointOrBuilder>
          getLandPointFieldBuilder() {
        if (landPointBuilder_ == null) {
          landPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              HangarPoint, HangarPoint.Builder, HangarPointOrBuilder>(
                  getLandPoint(),
                  getParentForChildren(),
                  isClean());
          landPoint_ = null;
        }
        return landPointBuilder_;
      }

      private java.util.List<PointData> interests_ =
        java.util.Collections.emptyList();
      private void ensureInterestsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          interests_ = new java.util.ArrayList<PointData>(interests_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> interestsBuilder_;

      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public java.util.List<PointData> getInterestsList() {
        if (interestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(interests_);
        } else {
          return interestsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public int getInterestsCount() {
        if (interestsBuilder_ == null) {
          return interests_.size();
        } else {
          return interestsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public PointData getInterests(int index) {
        if (interestsBuilder_ == null) {
          return interests_.get(index);
        } else {
          return interestsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder setInterests(
          int index, PointData value) {
        if (interestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInterestsIsMutable();
          interests_.set(index, value);
          onChanged();
        } else {
          interestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder setInterests(
          int index, PointData.Builder builderForValue) {
        if (interestsBuilder_ == null) {
          ensureInterestsIsMutable();
          interests_.set(index, builderForValue.build());
          onChanged();
        } else {
          interestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder addInterests(PointData value) {
        if (interestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInterestsIsMutable();
          interests_.add(value);
          onChanged();
        } else {
          interestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder addInterests(
          int index, PointData value) {
        if (interestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInterestsIsMutable();
          interests_.add(index, value);
          onChanged();
        } else {
          interestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder addInterests(
          PointData.Builder builderForValue) {
        if (interestsBuilder_ == null) {
          ensureInterestsIsMutable();
          interests_.add(builderForValue.build());
          onChanged();
        } else {
          interestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder addInterests(
          int index, PointData.Builder builderForValue) {
        if (interestsBuilder_ == null) {
          ensureInterestsIsMutable();
          interests_.add(index, builderForValue.build());
          onChanged();
        } else {
          interestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder addAllInterests(
          Iterable<? extends PointData> values) {
        if (interestsBuilder_ == null) {
          ensureInterestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, interests_);
          onChanged();
        } else {
          interestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder clearInterests() {
        if (interestsBuilder_ == null) {
          interests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          interestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public Builder removeInterests(int index) {
        if (interestsBuilder_ == null) {
          ensureInterestsIsMutable();
          interests_.remove(index);
          onChanged();
        } else {
          interestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public PointData.Builder getInterestsBuilder(
          int index) {
        return getInterestsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public PointDataOrBuilder getInterestsOrBuilder(
          int index) {
        if (interestsBuilder_ == null) {
          return interests_.get(index);  } else {
          return interestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public java.util.List<? extends PointDataOrBuilder>
           getInterestsOrBuilderList() {
        if (interestsBuilder_ != null) {
          return interestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(interests_);
        }
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public PointData.Builder addInterestsBuilder() {
        return getInterestsFieldBuilder().addBuilder(
            PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public PointData.Builder addInterestsBuilder(
          int index) {
        return getInterestsFieldBuilder().addBuilder(
            index, PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *兴趣点数组(对象只包含经纬高)
       * </pre>
       *
       * <code>repeated .PointData interests = 10;</code>
       */
      public java.util.List<PointData.Builder>
           getInterestsBuilderList() {
        return getInterestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getInterestsFieldBuilder() {
        if (interestsBuilder_ == null) {
          interestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  interests_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          interests_ = null;
        }
        return interestsBuilder_;
      }

      private NormalModel normalModel_;
      private com.google.protobuf.SingleFieldBuilderV3<
          NormalModel, NormalModel.Builder, NormalModelOrBuilder> normalModelBuilder_;
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       * @return Whether the normalModel field is set.
       */
      public boolean hasNormalModel() {
        return normalModelBuilder_ != null || normalModel_ != null;
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       * @return The normalModel.
       */
      public NormalModel getNormalModel() {
        if (normalModelBuilder_ == null) {
          return normalModel_ == null ? NormalModel.getDefaultInstance() : normalModel_;
        } else {
          return normalModelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      public Builder setNormalModel(NormalModel value) {
        if (normalModelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          normalModel_ = value;
          onChanged();
        } else {
          normalModelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      public Builder setNormalModel(
          NormalModel.Builder builderForValue) {
        if (normalModelBuilder_ == null) {
          normalModel_ = builderForValue.build();
          onChanged();
        } else {
          normalModelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      public Builder mergeNormalModel(NormalModel value) {
        if (normalModelBuilder_ == null) {
          if (normalModel_ != null) {
            normalModel_ =
              NormalModel.newBuilder(normalModel_).mergeFrom(value).buildPartial();
          } else {
            normalModel_ = value;
          }
          onChanged();
        } else {
          normalModelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      public Builder clearNormalModel() {
        if (normalModelBuilder_ == null) {
          normalModel_ = null;
          onChanged();
        } else {
          normalModel_ = null;
          normalModelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      public NormalModel.Builder getNormalModelBuilder() {
        
        onChanged();
        return getNormalModelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      public NormalModelOrBuilder getNormalModelOrBuilder() {
        if (normalModelBuilder_ != null) {
          return normalModelBuilder_.getMessageOrBuilder();
        } else {
          return normalModel_ == null ?
              NormalModel.getDefaultInstance() : normalModel_;
        }
      }
      /**
       * <pre>
       *普通建模
       * </pre>
       *
       * <code>.NormalModel normalModel = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NormalModel, NormalModel.Builder, NormalModelOrBuilder>
          getNormalModelFieldBuilder() {
        if (normalModelBuilder_ == null) {
          normalModelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NormalModel, NormalModel.Builder, NormalModelOrBuilder>(
                  getNormalModel(),
                  getParentForChildren(),
                  isClean());
          normalModel_ = null;
        }
        return normalModelBuilder_;
      }

      private SurroundModel surroundModel_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SurroundModel, SurroundModel.Builder, SurroundModelOrBuilder> surroundModelBuilder_;
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       * @return Whether the surroundModel field is set.
       */
      public boolean hasSurroundModel() {
        return surroundModelBuilder_ != null || surroundModel_ != null;
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       * @return The surroundModel.
       */
      public SurroundModel getSurroundModel() {
        if (surroundModelBuilder_ == null) {
          return surroundModel_ == null ? SurroundModel.getDefaultInstance() : surroundModel_;
        } else {
          return surroundModelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      public Builder setSurroundModel(SurroundModel value) {
        if (surroundModelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          surroundModel_ = value;
          onChanged();
        } else {
          surroundModelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      public Builder setSurroundModel(
          SurroundModel.Builder builderForValue) {
        if (surroundModelBuilder_ == null) {
          surroundModel_ = builderForValue.build();
          onChanged();
        } else {
          surroundModelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      public Builder mergeSurroundModel(SurroundModel value) {
        if (surroundModelBuilder_ == null) {
          if (surroundModel_ != null) {
            surroundModel_ =
              SurroundModel.newBuilder(surroundModel_).mergeFrom(value).buildPartial();
          } else {
            surroundModel_ = value;
          }
          onChanged();
        } else {
          surroundModelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      public Builder clearSurroundModel() {
        if (surroundModelBuilder_ == null) {
          surroundModel_ = null;
          onChanged();
        } else {
          surroundModel_ = null;
          surroundModelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      public SurroundModel.Builder getSurroundModelBuilder() {
        
        onChanged();
        return getSurroundModelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      public SurroundModelOrBuilder getSurroundModelOrBuilder() {
        if (surroundModelBuilder_ != null) {
          return surroundModelBuilder_.getMessageOrBuilder();
        } else {
          return surroundModel_ == null ?
              SurroundModel.getDefaultInstance() : surroundModel_;
        }
      }
      /**
       * <pre>
       *环绕建模
       * </pre>
       *
       * <code>.SurroundModel surroundModel = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SurroundModel, SurroundModel.Builder, SurroundModelOrBuilder>
          getSurroundModelFieldBuilder() {
        if (surroundModelBuilder_ == null) {
          surroundModelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SurroundModel, SurroundModel.Builder, SurroundModelOrBuilder>(
                  getSurroundModel(),
                  getParentForChildren(),
                  isClean());
          surroundModel_ = null;
        }
        return surroundModelBuilder_;
      }

      private PointData takeOffPoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> takeOffPointBuilder_;
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       * @return Whether the takeOffPoint field is set.
       */
      public boolean hasTakeOffPoint() {
        return takeOffPointBuilder_ != null || takeOffPoint_ != null;
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       * @return The takeOffPoint.
       */
      public PointData getTakeOffPoint() {
        if (takeOffPointBuilder_ == null) {
          return takeOffPoint_ == null ? PointData.getDefaultInstance() : takeOffPoint_;
        } else {
          return takeOffPointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      public Builder setTakeOffPoint(PointData value) {
        if (takeOffPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          takeOffPoint_ = value;
          onChanged();
        } else {
          takeOffPointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      public Builder setTakeOffPoint(
          PointData.Builder builderForValue) {
        if (takeOffPointBuilder_ == null) {
          takeOffPoint_ = builderForValue.build();
          onChanged();
        } else {
          takeOffPointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      public Builder mergeTakeOffPoint(PointData value) {
        if (takeOffPointBuilder_ == null) {
          if (takeOffPoint_ != null) {
            takeOffPoint_ =
              PointData.newBuilder(takeOffPoint_).mergeFrom(value).buildPartial();
          } else {
            takeOffPoint_ = value;
          }
          onChanged();
        } else {
          takeOffPointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      public Builder clearTakeOffPoint() {
        if (takeOffPointBuilder_ == null) {
          takeOffPoint_ = null;
          onChanged();
        } else {
          takeOffPoint_ = null;
          takeOffPointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      public PointData.Builder getTakeOffPointBuilder() {
        
        onChanged();
        return getTakeOffPointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      public PointDataOrBuilder getTakeOffPointOrBuilder() {
        if (takeOffPointBuilder_ != null) {
          return takeOffPointBuilder_.getMessageOrBuilder();
        } else {
          return takeOffPoint_ == null ?
              PointData.getDefaultInstance() : takeOffPoint_;
        }
      }
      /**
       * <pre>
       *起飞点(对象只包含经纬高)
       * </pre>
       *
       * <code>.PointData takeOffPoint = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getTakeOffPointFieldBuilder() {
        if (takeOffPointBuilder_ == null) {
          takeOffPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  getTakeOffPoint(),
                  getParentForChildren(),
                  isClean());
          takeOffPoint_ = null;
        }
        return takeOffPointBuilder_;
      }

      private int securityHeight_ ;
      /**
       * <pre>
       *安全起飞高度：(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 securityHeight = 14;</code>
       * @return The securityHeight.
       */
      @Override
      public int getSecurityHeight() {
        return securityHeight_;
      }
      /**
       * <pre>
       *安全起飞高度：(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 securityHeight = 14;</code>
       * @param value The securityHeight to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityHeight(int value) {
        
        securityHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *安全起飞高度：(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 securityHeight = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityHeight() {
        
        securityHeight_ = 0;
        onChanged();
        return this;
      }

      private int templateId_ ;
      /**
       * <pre>
       *航线模板编号,非模板航线时传0 
       * </pre>
       *
       * <code>uint32 templateId = 15;</code>
       * @return The templateId.
       */
      @Override
      public int getTemplateId() {
        return templateId_;
      }
      /**
       * <pre>
       *航线模板编号,非模板航线时传0 
       * </pre>
       *
       * <code>uint32 templateId = 15;</code>
       * @param value The templateId to set.
       * @return This builder for chaining.
       */
      public Builder setTemplateId(int value) {
        
        templateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航线模板编号,非模板航线时传0 
       * </pre>
       *
       * <code>uint32 templateId = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemplateId() {
        
        templateId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlanLineData)
    }

    // @@protoc_insertion_point(class_scope:PlanLineData)
    private static final PlanLineData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlanLineData();
    }

    public static PlanLineData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlanLineData>
        PARSER = new com.google.protobuf.AbstractParser<PlanLineData>() {
      @Override
      public PlanLineData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlanLineData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlanLineData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PlanLineData> getParserForType() {
      return PARSER;
    }

    @Override
    public PlanLineData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PointData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 1;</code>
     * @return The lng.
     */
    double getLng();

    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 2;</code>
     * @return The lat.
     */
    double getLat();

    /**
     * <pre>
     *高度(单位:米，范围0~遥控器限高)，说明：PointData属性作为航线点时此值为相对起飞点高度，PointData属性作为起飞点时此值为起飞点海拔高度
     * </pre>
     *
     * <code>float height = 3;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <pre>
     *速度(单位:米/秒，范围0~15)，默认8
     * </pre>
     *
     * <code>float speed = 4;</code>
     * @return The speed.
     */
    float getSpeed();

    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    java.util.List<PointAction>
        getActionsList();
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    PointAction getActions(int index);
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    int getActionsCount();
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    java.util.List<? extends PointActionOrBuilder>
        getActionsOrBuilderList();
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    PointActionOrBuilder getActionsOrBuilder(
        int index);

    /**
     * <pre>
     *航线飞行模式：1=直线飞行，2=协调转弯，3=曲线飞行(停)，4=曲线飞行(不停)
     * </pre>
     *
     * <code>uint32 flightPathMode = 6;</code>
     * @return The flightPathMode.
     */
    int getFlightPathMode();

    /**
     * <pre>
     *转弯半径(仅协调转弯模式下有效)，取值范围1~655.35单位:米，两点间距离要小于此值，此值要根据实际情况计算，切勿随便设此值[可能导致航线开始失败]，具体计算方法可以咨询售后支持或者大疆DJI
     * </pre>
     *
     * <code>float dampingDistance = 7;</code>
     * @return The dampingDistance.
     */
    float getDampingDistance();

    /**
     * <pre>
     *是否为安全返航点 0=不是，1=是 (暂时未启用)
     * </pre>
     *
     * <code>uint32 safeGohomeFlag = 8;</code>
     * @return The safeGohomeFlag.
     */
    int getSafeGohomeFlag();

    /**
     * <pre>
     *偏航模式 0=自动，1=锁定，2=遥控器控制，3=云台依照航点方向旋转，4=朝向兴趣点，5=飞机和云台的偏航同时旋转
     * </pre>
     *
     * <code>uint32 headingMode = 9;</code>
     * @return The headingMode.
     */
    int getHeadingMode();

    /**
     * <pre>
     *航点偏航 -180~180
     * </pre>
     *
     * <code>float heading = 10;</code>
     * @return The heading.
     */
    float getHeading();

    /**
     * <pre>
     *兴趣点ID
     * </pre>
     *
     * <code>int32 interestIndex = 11;</code>
     * @return The interestIndex.
     */
    int getInterestIndex();

    /**
     * <pre>
     *组下标
     * </pre>
     *
     * <code>uint32 groupIndex = 12;</code>
     * @return The groupIndex.
     */
    int getGroupIndex();
  }
  /**
   * <pre>
   *航线点
   * </pre>
   *
   * Protobuf type {@code PointData}
   */
  public static final class PointData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PointData)
      PointDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PointData.newBuilder() to construct.
    private PointData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointData() {
      actions_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PointData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PointData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              lng_ = input.readDouble();
              break;
            }
            case 17: {

              lat_ = input.readDouble();
              break;
            }
            case 29: {

              height_ = input.readFloat();
              break;
            }
            case 37: {

              speed_ = input.readFloat();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                actions_ = new java.util.ArrayList<PointAction>();
                mutable_bitField0_ |= 0x00000001;
              }
              actions_.add(
                  input.readMessage(PointAction.parser(), extensionRegistry));
              break;
            }
            case 48: {

              flightPathMode_ = input.readUInt32();
              break;
            }
            case 61: {

              dampingDistance_ = input.readFloat();
              break;
            }
            case 64: {

              safeGohomeFlag_ = input.readUInt32();
              break;
            }
            case 72: {

              headingMode_ = input.readUInt32();
              break;
            }
            case 85: {

              heading_ = input.readFloat();
              break;
            }
            case 88: {

              interestIndex_ = input.readInt32();
              break;
            }
            case 96: {

              groupIndex_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_PointData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_PointData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PointData.class, Builder.class);
    }

    public static final int LNG_FIELD_NUMBER = 1;
    private double lng_;
    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 1;</code>
     * @return The lng.
     */
    @Override
    public double getLng() {
      return lng_;
    }

    public static final int LAT_FIELD_NUMBER = 2;
    private double lat_;
    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 2;</code>
     * @return The lat.
     */
    @Override
    public double getLat() {
      return lat_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private float height_;
    /**
     * <pre>
     *高度(单位:米，范围0~遥控器限高)，说明：PointData属性作为航线点时此值为相对起飞点高度，PointData属性作为起飞点时此值为起飞点海拔高度
     * </pre>
     *
     * <code>float height = 3;</code>
     * @return The height.
     */
    @Override
    public float getHeight() {
      return height_;
    }

    public static final int SPEED_FIELD_NUMBER = 4;
    private float speed_;
    /**
     * <pre>
     *速度(单位:米/秒，范围0~15)，默认8
     * </pre>
     *
     * <code>float speed = 4;</code>
     * @return The speed.
     */
    @Override
    public float getSpeed() {
      return speed_;
    }

    public static final int ACTIONS_FIELD_NUMBER = 5;
    private java.util.List<PointAction> actions_;
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    @Override
    public java.util.List<PointAction> getActionsList() {
      return actions_;
    }
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    @Override
    public java.util.List<? extends PointActionOrBuilder>
        getActionsOrBuilderList() {
      return actions_;
    }
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    @Override
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    @Override
    public PointAction getActions(int index) {
      return actions_.get(index);
    }
    /**
     * <pre>
     *动作数组
     * </pre>
     *
     * <code>repeated .PointAction actions = 5;</code>
     */
    @Override
    public PointActionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }

    public static final int FLIGHTPATHMODE_FIELD_NUMBER = 6;
    private int flightPathMode_;
    /**
     * <pre>
     *航线飞行模式：1=直线飞行，2=协调转弯，3=曲线飞行(停)，4=曲线飞行(不停)
     * </pre>
     *
     * <code>uint32 flightPathMode = 6;</code>
     * @return The flightPathMode.
     */
    @Override
    public int getFlightPathMode() {
      return flightPathMode_;
    }

    public static final int DAMPINGDISTANCE_FIELD_NUMBER = 7;
    private float dampingDistance_;
    /**
     * <pre>
     *转弯半径(仅协调转弯模式下有效)，取值范围1~655.35单位:米，两点间距离要小于此值，此值要根据实际情况计算，切勿随便设此值[可能导致航线开始失败]，具体计算方法可以咨询售后支持或者大疆DJI
     * </pre>
     *
     * <code>float dampingDistance = 7;</code>
     * @return The dampingDistance.
     */
    @Override
    public float getDampingDistance() {
      return dampingDistance_;
    }

    public static final int SAFEGOHOMEFLAG_FIELD_NUMBER = 8;
    private int safeGohomeFlag_;
    /**
     * <pre>
     *是否为安全返航点 0=不是，1=是 (暂时未启用)
     * </pre>
     *
     * <code>uint32 safeGohomeFlag = 8;</code>
     * @return The safeGohomeFlag.
     */
    @Override
    public int getSafeGohomeFlag() {
      return safeGohomeFlag_;
    }

    public static final int HEADINGMODE_FIELD_NUMBER = 9;
    private int headingMode_;
    /**
     * <pre>
     *偏航模式 0=自动，1=锁定，2=遥控器控制，3=云台依照航点方向旋转，4=朝向兴趣点，5=飞机和云台的偏航同时旋转
     * </pre>
     *
     * <code>uint32 headingMode = 9;</code>
     * @return The headingMode.
     */
    @Override
    public int getHeadingMode() {
      return headingMode_;
    }

    public static final int HEADING_FIELD_NUMBER = 10;
    private float heading_;
    /**
     * <pre>
     *航点偏航 -180~180
     * </pre>
     *
     * <code>float heading = 10;</code>
     * @return The heading.
     */
    @Override
    public float getHeading() {
      return heading_;
    }

    public static final int INTERESTINDEX_FIELD_NUMBER = 11;
    private int interestIndex_;
    /**
     * <pre>
     *兴趣点ID
     * </pre>
     *
     * <code>int32 interestIndex = 11;</code>
     * @return The interestIndex.
     */
    @Override
    public int getInterestIndex() {
      return interestIndex_;
    }

    public static final int GROUPINDEX_FIELD_NUMBER = 12;
    private int groupIndex_;
    /**
     * <pre>
     *组下标
     * </pre>
     *
     * <code>uint32 groupIndex = 12;</code>
     * @return The groupIndex.
     */
    @Override
    public int getGroupIndex() {
      return groupIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lng_ != 0D) {
        output.writeDouble(1, lng_);
      }
      if (lat_ != 0D) {
        output.writeDouble(2, lat_);
      }
      if (height_ != 0F) {
        output.writeFloat(3, height_);
      }
      if (speed_ != 0F) {
        output.writeFloat(4, speed_);
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(5, actions_.get(i));
      }
      if (flightPathMode_ != 0) {
        output.writeUInt32(6, flightPathMode_);
      }
      if (dampingDistance_ != 0F) {
        output.writeFloat(7, dampingDistance_);
      }
      if (safeGohomeFlag_ != 0) {
        output.writeUInt32(8, safeGohomeFlag_);
      }
      if (headingMode_ != 0) {
        output.writeUInt32(9, headingMode_);
      }
      if (heading_ != 0F) {
        output.writeFloat(10, heading_);
      }
      if (interestIndex_ != 0) {
        output.writeInt32(11, interestIndex_);
      }
      if (groupIndex_ != 0) {
        output.writeUInt32(12, groupIndex_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lng_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lat_);
      }
      if (height_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, height_);
      }
      if (speed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, speed_);
      }
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, actions_.get(i));
      }
      if (flightPathMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, flightPathMode_);
      }
      if (dampingDistance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, dampingDistance_);
      }
      if (safeGohomeFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, safeGohomeFlag_);
      }
      if (headingMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, headingMode_);
      }
      if (heading_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, heading_);
      }
      if (interestIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, interestIndex_);
      }
      if (groupIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, groupIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PointData)) {
        return super.equals(obj);
      }
      PointData other = (PointData) obj;

      if (Double.doubleToLongBits(getLng())
          != Double.doubleToLongBits(
              other.getLng())) return false;
      if (Double.doubleToLongBits(getLat())
          != Double.doubleToLongBits(
              other.getLat())) return false;
      if (Float.floatToIntBits(getHeight())
          != Float.floatToIntBits(
              other.getHeight())) return false;
      if (Float.floatToIntBits(getSpeed())
          != Float.floatToIntBits(
              other.getSpeed())) return false;
      if (!getActionsList()
          .equals(other.getActionsList())) return false;
      if (getFlightPathMode()
          != other.getFlightPathMode()) return false;
      if (Float.floatToIntBits(getDampingDistance())
          != Float.floatToIntBits(
              other.getDampingDistance())) return false;
      if (getSafeGohomeFlag()
          != other.getSafeGohomeFlag()) return false;
      if (getHeadingMode()
          != other.getHeadingMode()) return false;
      if (Float.floatToIntBits(getHeading())
          != Float.floatToIntBits(
              other.getHeading())) return false;
      if (getInterestIndex()
          != other.getInterestIndex()) return false;
      if (getGroupIndex()
          != other.getGroupIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getSpeed());
      if (getActionsCount() > 0) {
        hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getActionsList().hashCode();
      }
      hash = (37 * hash) + FLIGHTPATHMODE_FIELD_NUMBER;
      hash = (53 * hash) + getFlightPathMode();
      hash = (37 * hash) + DAMPINGDISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDampingDistance());
      hash = (37 * hash) + SAFEGOHOMEFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getSafeGohomeFlag();
      hash = (37 * hash) + HEADINGMODE_FIELD_NUMBER;
      hash = (53 * hash) + getHeadingMode();
      hash = (37 * hash) + HEADING_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getHeading());
      hash = (37 * hash) + INTERESTINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getInterestIndex();
      hash = (37 * hash) + GROUPINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getGroupIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PointData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PointData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *航线点
     * </pre>
     *
     * Protobuf type {@code PointData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PointData)
        PointDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_PointData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_PointData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PointData.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.PointData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        lng_ = 0D;

        lat_ = 0D;

        height_ = 0F;

        speed_ = 0F;

        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          actionsBuilder_.clear();
        }
        flightPathMode_ = 0;

        dampingDistance_ = 0F;

        safeGohomeFlag_ = 0;

        headingMode_ = 0;

        heading_ = 0F;

        interestIndex_ = 0;

        groupIndex_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_PointData_descriptor;
      }

      @Override
      public PointData getDefaultInstanceForType() {
        return PointData.getDefaultInstance();
      }

      @Override
      public PointData build() {
        PointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PointData buildPartial() {
        PointData result = new PointData(this);
        int from_bitField0_ = bitField0_;
        result.lng_ = lng_;
        result.lat_ = lat_;
        result.height_ = height_;
        result.speed_ = speed_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        result.flightPathMode_ = flightPathMode_;
        result.dampingDistance_ = dampingDistance_;
        result.safeGohomeFlag_ = safeGohomeFlag_;
        result.headingMode_ = headingMode_;
        result.heading_ = heading_;
        result.interestIndex_ = interestIndex_;
        result.groupIndex_ = groupIndex_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PointData) {
          return mergeFrom((PointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PointData other) {
        if (other == PointData.getDefaultInstance()) return this;
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getSpeed() != 0F) {
          setSpeed(other.getSpeed());
        }
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        if (other.getFlightPathMode() != 0) {
          setFlightPathMode(other.getFlightPathMode());
        }
        if (other.getDampingDistance() != 0F) {
          setDampingDistance(other.getDampingDistance());
        }
        if (other.getSafeGohomeFlag() != 0) {
          setSafeGohomeFlag(other.getSafeGohomeFlag());
        }
        if (other.getHeadingMode() != 0) {
          setHeadingMode(other.getHeadingMode());
        }
        if (other.getHeading() != 0F) {
          setHeading(other.getHeading());
        }
        if (other.getInterestIndex() != 0) {
          setInterestIndex(other.getInterestIndex());
        }
        if (other.getGroupIndex() != 0) {
          setGroupIndex(other.getGroupIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PointData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PointData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double lng_ ;
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       * @return The lng.
       */
      @Override
      public double getLng() {
        return lng_;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       * @param value The lng to set.
       * @return This builder for chaining.
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       * @return The lat.
       */
      @Override
      public double getLat() {
        return lat_;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       * @param value The lat to set.
       * @return This builder for chaining.
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <pre>
       *高度(单位:米，范围0~遥控器限高)，说明：PointData属性作为航线点时此值为相对起飞点高度，PointData属性作为起飞点时此值为起飞点海拔高度
       * </pre>
       *
       * <code>float height = 3;</code>
       * @return The height.
       */
      @Override
      public float getHeight() {
        return height_;
      }
      /**
       * <pre>
       *高度(单位:米，范围0~遥控器限高)，说明：PointData属性作为航线点时此值为相对起飞点高度，PointData属性作为起飞点时此值为起飞点海拔高度
       * </pre>
       *
       * <code>float height = 3;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高度(单位:米，范围0~遥控器限高)，说明：PointData属性作为航线点时此值为相对起飞点高度，PointData属性作为起飞点时此值为起飞点海拔高度
       * </pre>
       *
       * <code>float height = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <pre>
       *速度(单位:米/秒，范围0~15)，默认8
       * </pre>
       *
       * <code>float speed = 4;</code>
       * @return The speed.
       */
      @Override
      public float getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       *速度(单位:米/秒，范围0~15)，默认8
       * </pre>
       *
       * <code>float speed = 4;</code>
       * @param value The speed to set.
       * @return This builder for chaining.
       */
      public Builder setSpeed(float value) {
        
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *速度(单位:米/秒，范围0~15)，默认8
       * </pre>
       *
       * <code>float speed = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpeed() {
        
        speed_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<PointAction> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          actions_ = new java.util.ArrayList<PointAction>(actions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointAction, PointAction.Builder, PointActionOrBuilder> actionsBuilder_;

      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public java.util.List<PointAction> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public PointAction getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder setActions(
          int index, PointAction value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder setActions(
          int index, PointAction.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder addActions(PointAction value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder addActions(
          int index, PointAction value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder addActions(
          PointAction.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder addActions(
          int index, PointAction.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder addAllActions(
          Iterable<? extends PointAction> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public PointAction.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public PointActionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public java.util.List<? extends PointActionOrBuilder>
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public PointAction.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            PointAction.getDefaultInstance());
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public PointAction.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, PointAction.getDefaultInstance());
      }
      /**
       * <pre>
       *动作数组
       * </pre>
       *
       * <code>repeated .PointAction actions = 5;</code>
       */
      public java.util.List<PointAction.Builder>
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointAction, PointAction.Builder, PointActionOrBuilder>
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointAction, PointAction.Builder, PointActionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }

      private int flightPathMode_ ;
      /**
       * <pre>
       *航线飞行模式：1=直线飞行，2=协调转弯，3=曲线飞行(停)，4=曲线飞行(不停)
       * </pre>
       *
       * <code>uint32 flightPathMode = 6;</code>
       * @return The flightPathMode.
       */
      @Override
      public int getFlightPathMode() {
        return flightPathMode_;
      }
      /**
       * <pre>
       *航线飞行模式：1=直线飞行，2=协调转弯，3=曲线飞行(停)，4=曲线飞行(不停)
       * </pre>
       *
       * <code>uint32 flightPathMode = 6;</code>
       * @param value The flightPathMode to set.
       * @return This builder for chaining.
       */
      public Builder setFlightPathMode(int value) {
        
        flightPathMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航线飞行模式：1=直线飞行，2=协调转弯，3=曲线飞行(停)，4=曲线飞行(不停)
       * </pre>
       *
       * <code>uint32 flightPathMode = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightPathMode() {
        
        flightPathMode_ = 0;
        onChanged();
        return this;
      }

      private float dampingDistance_ ;
      /**
       * <pre>
       *转弯半径(仅协调转弯模式下有效)，取值范围1~655.35单位:米，两点间距离要小于此值，此值要根据实际情况计算，切勿随便设此值[可能导致航线开始失败]，具体计算方法可以咨询售后支持或者大疆DJI
       * </pre>
       *
       * <code>float dampingDistance = 7;</code>
       * @return The dampingDistance.
       */
      @Override
      public float getDampingDistance() {
        return dampingDistance_;
      }
      /**
       * <pre>
       *转弯半径(仅协调转弯模式下有效)，取值范围1~655.35单位:米，两点间距离要小于此值，此值要根据实际情况计算，切勿随便设此值[可能导致航线开始失败]，具体计算方法可以咨询售后支持或者大疆DJI
       * </pre>
       *
       * <code>float dampingDistance = 7;</code>
       * @param value The dampingDistance to set.
       * @return This builder for chaining.
       */
      public Builder setDampingDistance(float value) {
        
        dampingDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *转弯半径(仅协调转弯模式下有效)，取值范围1~655.35单位:米，两点间距离要小于此值，此值要根据实际情况计算，切勿随便设此值[可能导致航线开始失败]，具体计算方法可以咨询售后支持或者大疆DJI
       * </pre>
       *
       * <code>float dampingDistance = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDampingDistance() {
        
        dampingDistance_ = 0F;
        onChanged();
        return this;
      }

      private int safeGohomeFlag_ ;
      /**
       * <pre>
       *是否为安全返航点 0=不是，1=是 (暂时未启用)
       * </pre>
       *
       * <code>uint32 safeGohomeFlag = 8;</code>
       * @return The safeGohomeFlag.
       */
      @Override
      public int getSafeGohomeFlag() {
        return safeGohomeFlag_;
      }
      /**
       * <pre>
       *是否为安全返航点 0=不是，1=是 (暂时未启用)
       * </pre>
       *
       * <code>uint32 safeGohomeFlag = 8;</code>
       * @param value The safeGohomeFlag to set.
       * @return This builder for chaining.
       */
      public Builder setSafeGohomeFlag(int value) {
        
        safeGohomeFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否为安全返航点 0=不是，1=是 (暂时未启用)
       * </pre>
       *
       * <code>uint32 safeGohomeFlag = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSafeGohomeFlag() {
        
        safeGohomeFlag_ = 0;
        onChanged();
        return this;
      }

      private int headingMode_ ;
      /**
       * <pre>
       *偏航模式 0=自动，1=锁定，2=遥控器控制，3=云台依照航点方向旋转，4=朝向兴趣点，5=飞机和云台的偏航同时旋转
       * </pre>
       *
       * <code>uint32 headingMode = 9;</code>
       * @return The headingMode.
       */
      @Override
      public int getHeadingMode() {
        return headingMode_;
      }
      /**
       * <pre>
       *偏航模式 0=自动，1=锁定，2=遥控器控制，3=云台依照航点方向旋转，4=朝向兴趣点，5=飞机和云台的偏航同时旋转
       * </pre>
       *
       * <code>uint32 headingMode = 9;</code>
       * @param value The headingMode to set.
       * @return This builder for chaining.
       */
      public Builder setHeadingMode(int value) {
        
        headingMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *偏航模式 0=自动，1=锁定，2=遥控器控制，3=云台依照航点方向旋转，4=朝向兴趣点，5=飞机和云台的偏航同时旋转
       * </pre>
       *
       * <code>uint32 headingMode = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeadingMode() {
        
        headingMode_ = 0;
        onChanged();
        return this;
      }

      private float heading_ ;
      /**
       * <pre>
       *航点偏航 -180~180
       * </pre>
       *
       * <code>float heading = 10;</code>
       * @return The heading.
       */
      @Override
      public float getHeading() {
        return heading_;
      }
      /**
       * <pre>
       *航点偏航 -180~180
       * </pre>
       *
       * <code>float heading = 10;</code>
       * @param value The heading to set.
       * @return This builder for chaining.
       */
      public Builder setHeading(float value) {
        
        heading_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航点偏航 -180~180
       * </pre>
       *
       * <code>float heading = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeading() {
        
        heading_ = 0F;
        onChanged();
        return this;
      }

      private int interestIndex_ ;
      /**
       * <pre>
       *兴趣点ID
       * </pre>
       *
       * <code>int32 interestIndex = 11;</code>
       * @return The interestIndex.
       */
      @Override
      public int getInterestIndex() {
        return interestIndex_;
      }
      /**
       * <pre>
       *兴趣点ID
       * </pre>
       *
       * <code>int32 interestIndex = 11;</code>
       * @param value The interestIndex to set.
       * @return This builder for chaining.
       */
      public Builder setInterestIndex(int value) {
        
        interestIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *兴趣点ID
       * </pre>
       *
       * <code>int32 interestIndex = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterestIndex() {
        
        interestIndex_ = 0;
        onChanged();
        return this;
      }

      private int groupIndex_ ;
      /**
       * <pre>
       *组下标
       * </pre>
       *
       * <code>uint32 groupIndex = 12;</code>
       * @return The groupIndex.
       */
      @Override
      public int getGroupIndex() {
        return groupIndex_;
      }
      /**
       * <pre>
       *组下标
       * </pre>
       *
       * <code>uint32 groupIndex = 12;</code>
       * @param value The groupIndex to set.
       * @return This builder for chaining.
       */
      public Builder setGroupIndex(int value) {
        
        groupIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组下标
       * </pre>
       *
       * <code>uint32 groupIndex = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupIndex() {
        
        groupIndex_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PointData)
    }

    // @@protoc_insertion_point(class_scope:PointData)
    private static final PointData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PointData();
    }

    public static PointData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointData>
        PARSER = new com.google.protobuf.AbstractParser<PointData>() {
      @Override
      public PointData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PointData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PointData> getParserForType() {
      return PARSER;
    }

    @Override
    public PointData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PointAction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *类型：1.变焦 2.拍照 3.录像 4.停录 5.控制飞机机头偏航 6.控制云台俯仰 7.控制云台偏航 8.控制云台横滚 9.悬停 10.等距间隔拍照 11.等时间隔拍照 12.结束间隔拍照 13.单条喊话 14.开始循环喊话 15.结束循环喊话 16.对焦
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     *参数：[1.变焦]-&gt;变焦倍数(范围：2~200) 、[5.控制飞机机头偏航(范围：-180~180)、6.控制云台俯仰(范围：-120~30)、7.控制云台偏航(范围：-180~180)、8.控制云台横滚(范围：-90~60)]-&gt;角度(按正北坐标系绝对值控制) 、[9.悬停]-&gt;时间(单位:秒,范围:1~25,如果想停留大于25秒时长,可以加多组悬停动作)  [13/14-&gt;喊话器俯仰角度，如果此值为0默认改成-90](范围：0~-90)
     * </pre>
     *
     * <code>float param = 2;</code>
     * @return The param.
     */
    float getParam();

    /**
     * <pre>
     *动作触发后等待时长(单位:秒) [此值如果不需要可以不传，如需悬停可添加类型9悬停动作] [13/14-&gt;喊话器声音，如果此值不传默认50](范围：0~100) 1-广角 2-变焦 3-红外 4-广角+变焦 5-广角+红外 6-变焦+红外 7-广角+变焦+红外
     * </pre>
     *
     * <code>int32 waitTime = 3;</code>
     * @return The waitTime.
     */
    int getWaitTime();

    /**
     * <pre>
     *喊话内容[type=13和type=14时生效]
     * </pre>
     *
     * <code>string speakInfo = 4;</code>
     * @return The speakInfo.
     */
    String getSpeakInfo();
    /**
     * <pre>
     *喊话内容[type=13和type=14时生效]
     * </pre>
     *
     * <code>string speakInfo = 4;</code>
     * @return The bytes for speakInfo.
     */
    com.google.protobuf.ByteString
        getSpeakInfoBytes();
  }
  /**
   * <pre>
   *航线点动作
   * </pre>
   *
   * Protobuf type {@code PointAction}
   */
  public static final class PointAction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PointAction)
      PointActionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PointAction.newBuilder() to construct.
    private PointAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointAction() {
      speakInfo_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PointAction();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PointAction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readUInt32();
              break;
            }
            case 21: {

              param_ = input.readFloat();
              break;
            }
            case 24: {

              waitTime_ = input.readInt32();
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              speakInfo_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_PointAction_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_PointAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PointAction.class, Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *类型：1.变焦 2.拍照 3.录像 4.停录 5.控制飞机机头偏航 6.控制云台俯仰 7.控制云台偏航 8.控制云台横滚 9.悬停 10.等距间隔拍照 11.等时间隔拍照 12.结束间隔拍照 13.单条喊话 14.开始循环喊话 15.结束循环喊话 16.对焦
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int PARAM_FIELD_NUMBER = 2;
    private float param_;
    /**
     * <pre>
     *参数：[1.变焦]-&gt;变焦倍数(范围：2~200) 、[5.控制飞机机头偏航(范围：-180~180)、6.控制云台俯仰(范围：-120~30)、7.控制云台偏航(范围：-180~180)、8.控制云台横滚(范围：-90~60)]-&gt;角度(按正北坐标系绝对值控制) 、[9.悬停]-&gt;时间(单位:秒,范围:1~25,如果想停留大于25秒时长,可以加多组悬停动作)  [13/14-&gt;喊话器俯仰角度，如果此值为0默认改成-90](范围：0~-90)
     * </pre>
     *
     * <code>float param = 2;</code>
     * @return The param.
     */
    @Override
    public float getParam() {
      return param_;
    }

    public static final int WAITTIME_FIELD_NUMBER = 3;
    private int waitTime_;
    /**
     * <pre>
     *动作触发后等待时长(单位:秒) [此值如果不需要可以不传，如需悬停可添加类型9悬停动作] [13/14-&gt;喊话器声音，如果此值不传默认50](范围：0~100) 1-广角 2-变焦 3-红外 4-广角+变焦 5-广角+红外 6-变焦+红外 7-广角+变焦+红外
     * </pre>
     *
     * <code>int32 waitTime = 3;</code>
     * @return The waitTime.
     */
    @Override
    public int getWaitTime() {
      return waitTime_;
    }

    public static final int SPEAKINFO_FIELD_NUMBER = 4;
    private volatile Object speakInfo_;
    /**
     * <pre>
     *喊话内容[type=13和type=14时生效]
     * </pre>
     *
     * <code>string speakInfo = 4;</code>
     * @return The speakInfo.
     */
    @Override
    public String getSpeakInfo() {
      Object ref = speakInfo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        speakInfo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *喊话内容[type=13和type=14时生效]
     * </pre>
     *
     * <code>string speakInfo = 4;</code>
     * @return The bytes for speakInfo.
     */
    @Override
    public com.google.protobuf.ByteString
        getSpeakInfoBytes() {
      Object ref = speakInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        speakInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (param_ != 0F) {
        output.writeFloat(2, param_);
      }
      if (waitTime_ != 0) {
        output.writeInt32(3, waitTime_);
      }
      if (!getSpeakInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, speakInfo_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (param_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, param_);
      }
      if (waitTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, waitTime_);
      }
      if (!getSpeakInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, speakInfo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PointAction)) {
        return super.equals(obj);
      }
      PointAction other = (PointAction) obj;

      if (getType()
          != other.getType()) return false;
      if (Float.floatToIntBits(getParam())
          != Float.floatToIntBits(
              other.getParam())) return false;
      if (getWaitTime()
          != other.getWaitTime()) return false;
      if (!getSpeakInfo()
          .equals(other.getSpeakInfo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + PARAM_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getParam());
      hash = (37 * hash) + WAITTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWaitTime();
      hash = (37 * hash) + SPEAKINFO_FIELD_NUMBER;
      hash = (53 * hash) + getSpeakInfo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PointAction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointAction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PointAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PointAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PointAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PointAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PointAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PointAction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *航线点动作
     * </pre>
     *
     * Protobuf type {@code PointAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PointAction)
        PointActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_PointAction_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_PointAction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PointAction.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.PointAction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        param_ = 0F;

        waitTime_ = 0;

        speakInfo_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_PointAction_descriptor;
      }

      @Override
      public PointAction getDefaultInstanceForType() {
        return PointAction.getDefaultInstance();
      }

      @Override
      public PointAction build() {
        PointAction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PointAction buildPartial() {
        PointAction result = new PointAction(this);
        result.type_ = type_;
        result.param_ = param_;
        result.waitTime_ = waitTime_;
        result.speakInfo_ = speakInfo_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PointAction) {
          return mergeFrom((PointAction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PointAction other) {
        if (other == PointAction.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getParam() != 0F) {
          setParam(other.getParam());
        }
        if (other.getWaitTime() != 0) {
          setWaitTime(other.getWaitTime());
        }
        if (!other.getSpeakInfo().isEmpty()) {
          speakInfo_ = other.speakInfo_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PointAction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PointAction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *类型：1.变焦 2.拍照 3.录像 4.停录 5.控制飞机机头偏航 6.控制云台俯仰 7.控制云台偏航 8.控制云台横滚 9.悬停 10.等距间隔拍照 11.等时间隔拍照 12.结束间隔拍照 13.单条喊话 14.开始循环喊话 15.结束循环喊话 16.对焦
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *类型：1.变焦 2.拍照 3.录像 4.停录 5.控制飞机机头偏航 6.控制云台俯仰 7.控制云台偏航 8.控制云台横滚 9.悬停 10.等距间隔拍照 11.等时间隔拍照 12.结束间隔拍照 13.单条喊话 14.开始循环喊话 15.结束循环喊话 16.对焦
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *类型：1.变焦 2.拍照 3.录像 4.停录 5.控制飞机机头偏航 6.控制云台俯仰 7.控制云台偏航 8.控制云台横滚 9.悬停 10.等距间隔拍照 11.等时间隔拍照 12.结束间隔拍照 13.单条喊话 14.开始循环喊话 15.结束循环喊话 16.对焦
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private float param_ ;
      /**
       * <pre>
       *参数：[1.变焦]-&gt;变焦倍数(范围：2~200) 、[5.控制飞机机头偏航(范围：-180~180)、6.控制云台俯仰(范围：-120~30)、7.控制云台偏航(范围：-180~180)、8.控制云台横滚(范围：-90~60)]-&gt;角度(按正北坐标系绝对值控制) 、[9.悬停]-&gt;时间(单位:秒,范围:1~25,如果想停留大于25秒时长,可以加多组悬停动作)  [13/14-&gt;喊话器俯仰角度，如果此值为0默认改成-90](范围：0~-90)
       * </pre>
       *
       * <code>float param = 2;</code>
       * @return The param.
       */
      @Override
      public float getParam() {
        return param_;
      }
      /**
       * <pre>
       *参数：[1.变焦]-&gt;变焦倍数(范围：2~200) 、[5.控制飞机机头偏航(范围：-180~180)、6.控制云台俯仰(范围：-120~30)、7.控制云台偏航(范围：-180~180)、8.控制云台横滚(范围：-90~60)]-&gt;角度(按正北坐标系绝对值控制) 、[9.悬停]-&gt;时间(单位:秒,范围:1~25,如果想停留大于25秒时长,可以加多组悬停动作)  [13/14-&gt;喊话器俯仰角度，如果此值为0默认改成-90](范围：0~-90)
       * </pre>
       *
       * <code>float param = 2;</code>
       * @param value The param to set.
       * @return This builder for chaining.
       */
      public Builder setParam(float value) {
        
        param_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数：[1.变焦]-&gt;变焦倍数(范围：2~200) 、[5.控制飞机机头偏航(范围：-180~180)、6.控制云台俯仰(范围：-120~30)、7.控制云台偏航(范围：-180~180)、8.控制云台横滚(范围：-90~60)]-&gt;角度(按正北坐标系绝对值控制) 、[9.悬停]-&gt;时间(单位:秒,范围:1~25,如果想停留大于25秒时长,可以加多组悬停动作)  [13/14-&gt;喊话器俯仰角度，如果此值为0默认改成-90](范围：0~-90)
       * </pre>
       *
       * <code>float param = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearParam() {
        
        param_ = 0F;
        onChanged();
        return this;
      }

      private int waitTime_ ;
      /**
       * <pre>
       *动作触发后等待时长(单位:秒) [此值如果不需要可以不传，如需悬停可添加类型9悬停动作] [13/14-&gt;喊话器声音，如果此值不传默认50](范围：0~100) 1-广角 2-变焦 3-红外 4-广角+变焦 5-广角+红外 6-变焦+红外 7-广角+变焦+红外
       * </pre>
       *
       * <code>int32 waitTime = 3;</code>
       * @return The waitTime.
       */
      @Override
      public int getWaitTime() {
        return waitTime_;
      }
      /**
       * <pre>
       *动作触发后等待时长(单位:秒) [此值如果不需要可以不传，如需悬停可添加类型9悬停动作] [13/14-&gt;喊话器声音，如果此值不传默认50](范围：0~100) 1-广角 2-变焦 3-红外 4-广角+变焦 5-广角+红外 6-变焦+红外 7-广角+变焦+红外
       * </pre>
       *
       * <code>int32 waitTime = 3;</code>
       * @param value The waitTime to set.
       * @return This builder for chaining.
       */
      public Builder setWaitTime(int value) {
        
        waitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *动作触发后等待时长(单位:秒) [此值如果不需要可以不传，如需悬停可添加类型9悬停动作] [13/14-&gt;喊话器声音，如果此值不传默认50](范围：0~100) 1-广角 2-变焦 3-红外 4-广角+变焦 5-广角+红外 6-变焦+红外 7-广角+变焦+红外
       * </pre>
       *
       * <code>int32 waitTime = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWaitTime() {
        
        waitTime_ = 0;
        onChanged();
        return this;
      }

      private Object speakInfo_ = "";
      /**
       * <pre>
       *喊话内容[type=13和type=14时生效]
       * </pre>
       *
       * <code>string speakInfo = 4;</code>
       * @return The speakInfo.
       */
      public String getSpeakInfo() {
        Object ref = speakInfo_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          speakInfo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *喊话内容[type=13和type=14时生效]
       * </pre>
       *
       * <code>string speakInfo = 4;</code>
       * @return The bytes for speakInfo.
       */
      public com.google.protobuf.ByteString
          getSpeakInfoBytes() {
        Object ref = speakInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          speakInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *喊话内容[type=13和type=14时生效]
       * </pre>
       *
       * <code>string speakInfo = 4;</code>
       * @param value The speakInfo to set.
       * @return This builder for chaining.
       */
      public Builder setSpeakInfo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        speakInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *喊话内容[type=13和type=14时生效]
       * </pre>
       *
       * <code>string speakInfo = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpeakInfo() {
        
        speakInfo_ = getDefaultInstance().getSpeakInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *喊话内容[type=13和type=14时生效]
       * </pre>
       *
       * <code>string speakInfo = 4;</code>
       * @param value The bytes for speakInfo to set.
       * @return This builder for chaining.
       */
      public Builder setSpeakInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        speakInfo_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PointAction)
    }

    // @@protoc_insertion_point(class_scope:PointAction)
    private static final PointAction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PointAction();
    }

    public static PointAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointAction>
        PARSER = new com.google.protobuf.AbstractParser<PointAction>() {
      @Override
      public PointAction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PointAction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointAction> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PointAction> getParserForType() {
      return PARSER;
    }

    @Override
    public PointAction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HangarPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HangarPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *机库ID
     * </pre>
     *
     * <code>string hangarId = 1;</code>
     * @return The hangarId.
     */
    String getHangarId();
    /**
     * <pre>
     *机库ID
     * </pre>
     *
     * <code>string hangarId = 1;</code>
     * @return The bytes for hangarId.
     */
    com.google.protobuf.ByteString
        getHangarIdBytes();

    /**
     * <pre>
     *机库经度
     * </pre>
     *
     * <code>double hangarLng = 2;</code>
     * @return The hangarLng.
     */
    double getHangarLng();

    /**
     * <pre>
     *机库纬度
     * </pre>
     *
     * <code>double hangarLat = 3;</code>
     * @return The hangarLat.
     */
    double getHangarLat();

    /**
     * <pre>
     *备降点经度
     * </pre>
     *
     * <code>double alternateLng = 4;</code>
     * @return The alternateLng.
     */
    double getAlternateLng();

    /**
     * <pre>
     *备降点纬度
     * </pre>
     *
     * <code>double alternateLat = 5;</code>
     * @return The alternateLat.
     */
    double getAlternateLat();

    /**
     * <pre>
     *飞机回仓后是否等待所有媒体文件传完再关仓：0-立即关仓 1-等待传完后关仓
     * </pre>
     *
     * <code>uint32 mediaUploadFlag = 6;</code>
     * @return The mediaUploadFlag.
     */
    int getMediaUploadFlag();
  }
  /**
   * <pre>
   *机库信息
   * </pre>
   *
   * Protobuf type {@code HangarPoint}
   */
  public static final class HangarPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HangarPoint)
      HangarPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HangarPoint.newBuilder() to construct.
    private HangarPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HangarPoint() {
      hangarId_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new HangarPoint();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HangarPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              hangarId_ = s;
              break;
            }
            case 17: {

              hangarLng_ = input.readDouble();
              break;
            }
            case 25: {

              hangarLat_ = input.readDouble();
              break;
            }
            case 33: {

              alternateLng_ = input.readDouble();
              break;
            }
            case 41: {

              alternateLat_ = input.readDouble();
              break;
            }
            case 48: {

              mediaUploadFlag_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_HangarPoint_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_HangarPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HangarPoint.class, Builder.class);
    }

    public static final int HANGARID_FIELD_NUMBER = 1;
    private volatile Object hangarId_;
    /**
     * <pre>
     *机库ID
     * </pre>
     *
     * <code>string hangarId = 1;</code>
     * @return The hangarId.
     */
    @Override
    public String getHangarId() {
      Object ref = hangarId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        hangarId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *机库ID
     * </pre>
     *
     * <code>string hangarId = 1;</code>
     * @return The bytes for hangarId.
     */
    @Override
    public com.google.protobuf.ByteString
        getHangarIdBytes() {
      Object ref = hangarId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        hangarId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HANGARLNG_FIELD_NUMBER = 2;
    private double hangarLng_;
    /**
     * <pre>
     *机库经度
     * </pre>
     *
     * <code>double hangarLng = 2;</code>
     * @return The hangarLng.
     */
    @Override
    public double getHangarLng() {
      return hangarLng_;
    }

    public static final int HANGARLAT_FIELD_NUMBER = 3;
    private double hangarLat_;
    /**
     * <pre>
     *机库纬度
     * </pre>
     *
     * <code>double hangarLat = 3;</code>
     * @return The hangarLat.
     */
    @Override
    public double getHangarLat() {
      return hangarLat_;
    }

    public static final int ALTERNATELNG_FIELD_NUMBER = 4;
    private double alternateLng_;
    /**
     * <pre>
     *备降点经度
     * </pre>
     *
     * <code>double alternateLng = 4;</code>
     * @return The alternateLng.
     */
    @Override
    public double getAlternateLng() {
      return alternateLng_;
    }

    public static final int ALTERNATELAT_FIELD_NUMBER = 5;
    private double alternateLat_;
    /**
     * <pre>
     *备降点纬度
     * </pre>
     *
     * <code>double alternateLat = 5;</code>
     * @return The alternateLat.
     */
    @Override
    public double getAlternateLat() {
      return alternateLat_;
    }

    public static final int MEDIAUPLOADFLAG_FIELD_NUMBER = 6;
    private int mediaUploadFlag_;
    /**
     * <pre>
     *飞机回仓后是否等待所有媒体文件传完再关仓：0-立即关仓 1-等待传完后关仓
     * </pre>
     *
     * <code>uint32 mediaUploadFlag = 6;</code>
     * @return The mediaUploadFlag.
     */
    @Override
    public int getMediaUploadFlag() {
      return mediaUploadFlag_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getHangarIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hangarId_);
      }
      if (hangarLng_ != 0D) {
        output.writeDouble(2, hangarLng_);
      }
      if (hangarLat_ != 0D) {
        output.writeDouble(3, hangarLat_);
      }
      if (alternateLng_ != 0D) {
        output.writeDouble(4, alternateLng_);
      }
      if (alternateLat_ != 0D) {
        output.writeDouble(5, alternateLat_);
      }
      if (mediaUploadFlag_ != 0) {
        output.writeUInt32(6, mediaUploadFlag_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getHangarIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hangarId_);
      }
      if (hangarLng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, hangarLng_);
      }
      if (hangarLat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, hangarLat_);
      }
      if (alternateLng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, alternateLng_);
      }
      if (alternateLat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, alternateLat_);
      }
      if (mediaUploadFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, mediaUploadFlag_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HangarPoint)) {
        return super.equals(obj);
      }
      HangarPoint other = (HangarPoint) obj;

      if (!getHangarId()
          .equals(other.getHangarId())) return false;
      if (Double.doubleToLongBits(getHangarLng())
          != Double.doubleToLongBits(
              other.getHangarLng())) return false;
      if (Double.doubleToLongBits(getHangarLat())
          != Double.doubleToLongBits(
              other.getHangarLat())) return false;
      if (Double.doubleToLongBits(getAlternateLng())
          != Double.doubleToLongBits(
              other.getAlternateLng())) return false;
      if (Double.doubleToLongBits(getAlternateLat())
          != Double.doubleToLongBits(
              other.getAlternateLat())) return false;
      if (getMediaUploadFlag()
          != other.getMediaUploadFlag()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HANGARID_FIELD_NUMBER;
      hash = (53 * hash) + getHangarId().hashCode();
      hash = (37 * hash) + HANGARLNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getHangarLng()));
      hash = (37 * hash) + HANGARLAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getHangarLat()));
      hash = (37 * hash) + ALTERNATELNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getAlternateLng()));
      hash = (37 * hash) + ALTERNATELAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getAlternateLat()));
      hash = (37 * hash) + MEDIAUPLOADFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getMediaUploadFlag();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HangarPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HangarPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HangarPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HangarPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HangarPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HangarPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HangarPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HangarPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HangarPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HangarPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HangarPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HangarPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HangarPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *机库信息
     * </pre>
     *
     * Protobuf type {@code HangarPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HangarPoint)
        HangarPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_HangarPoint_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_HangarPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HangarPoint.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.HangarPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        hangarId_ = "";

        hangarLng_ = 0D;

        hangarLat_ = 0D;

        alternateLng_ = 0D;

        alternateLat_ = 0D;

        mediaUploadFlag_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_HangarPoint_descriptor;
      }

      @Override
      public HangarPoint getDefaultInstanceForType() {
        return HangarPoint.getDefaultInstance();
      }

      @Override
      public HangarPoint build() {
        HangarPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public HangarPoint buildPartial() {
        HangarPoint result = new HangarPoint(this);
        result.hangarId_ = hangarId_;
        result.hangarLng_ = hangarLng_;
        result.hangarLat_ = hangarLat_;
        result.alternateLng_ = alternateLng_;
        result.alternateLat_ = alternateLat_;
        result.mediaUploadFlag_ = mediaUploadFlag_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HangarPoint) {
          return mergeFrom((HangarPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HangarPoint other) {
        if (other == HangarPoint.getDefaultInstance()) return this;
        if (!other.getHangarId().isEmpty()) {
          hangarId_ = other.hangarId_;
          onChanged();
        }
        if (other.getHangarLng() != 0D) {
          setHangarLng(other.getHangarLng());
        }
        if (other.getHangarLat() != 0D) {
          setHangarLat(other.getHangarLat());
        }
        if (other.getAlternateLng() != 0D) {
          setAlternateLng(other.getAlternateLng());
        }
        if (other.getAlternateLat() != 0D) {
          setAlternateLat(other.getAlternateLat());
        }
        if (other.getMediaUploadFlag() != 0) {
          setMediaUploadFlag(other.getMediaUploadFlag());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HangarPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HangarPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object hangarId_ = "";
      /**
       * <pre>
       *机库ID
       * </pre>
       *
       * <code>string hangarId = 1;</code>
       * @return The hangarId.
       */
      public String getHangarId() {
        Object ref = hangarId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          hangarId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *机库ID
       * </pre>
       *
       * <code>string hangarId = 1;</code>
       * @return The bytes for hangarId.
       */
      public com.google.protobuf.ByteString
          getHangarIdBytes() {
        Object ref = hangarId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          hangarId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *机库ID
       * </pre>
       *
       * <code>string hangarId = 1;</code>
       * @param value The hangarId to set.
       * @return This builder for chaining.
       */
      public Builder setHangarId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hangarId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *机库ID
       * </pre>
       *
       * <code>string hangarId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHangarId() {
        
        hangarId_ = getDefaultInstance().getHangarId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *机库ID
       * </pre>
       *
       * <code>string hangarId = 1;</code>
       * @param value The bytes for hangarId to set.
       * @return This builder for chaining.
       */
      public Builder setHangarIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hangarId_ = value;
        onChanged();
        return this;
      }

      private double hangarLng_ ;
      /**
       * <pre>
       *机库经度
       * </pre>
       *
       * <code>double hangarLng = 2;</code>
       * @return The hangarLng.
       */
      @Override
      public double getHangarLng() {
        return hangarLng_;
      }
      /**
       * <pre>
       *机库经度
       * </pre>
       *
       * <code>double hangarLng = 2;</code>
       * @param value The hangarLng to set.
       * @return This builder for chaining.
       */
      public Builder setHangarLng(double value) {
        
        hangarLng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *机库经度
       * </pre>
       *
       * <code>double hangarLng = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHangarLng() {
        
        hangarLng_ = 0D;
        onChanged();
        return this;
      }

      private double hangarLat_ ;
      /**
       * <pre>
       *机库纬度
       * </pre>
       *
       * <code>double hangarLat = 3;</code>
       * @return The hangarLat.
       */
      @Override
      public double getHangarLat() {
        return hangarLat_;
      }
      /**
       * <pre>
       *机库纬度
       * </pre>
       *
       * <code>double hangarLat = 3;</code>
       * @param value The hangarLat to set.
       * @return This builder for chaining.
       */
      public Builder setHangarLat(double value) {
        
        hangarLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *机库纬度
       * </pre>
       *
       * <code>double hangarLat = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHangarLat() {
        
        hangarLat_ = 0D;
        onChanged();
        return this;
      }

      private double alternateLng_ ;
      /**
       * <pre>
       *备降点经度
       * </pre>
       *
       * <code>double alternateLng = 4;</code>
       * @return The alternateLng.
       */
      @Override
      public double getAlternateLng() {
        return alternateLng_;
      }
      /**
       * <pre>
       *备降点经度
       * </pre>
       *
       * <code>double alternateLng = 4;</code>
       * @param value The alternateLng to set.
       * @return This builder for chaining.
       */
      public Builder setAlternateLng(double value) {
        
        alternateLng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备降点经度
       * </pre>
       *
       * <code>double alternateLng = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlternateLng() {
        
        alternateLng_ = 0D;
        onChanged();
        return this;
      }

      private double alternateLat_ ;
      /**
       * <pre>
       *备降点纬度
       * </pre>
       *
       * <code>double alternateLat = 5;</code>
       * @return The alternateLat.
       */
      @Override
      public double getAlternateLat() {
        return alternateLat_;
      }
      /**
       * <pre>
       *备降点纬度
       * </pre>
       *
       * <code>double alternateLat = 5;</code>
       * @param value The alternateLat to set.
       * @return This builder for chaining.
       */
      public Builder setAlternateLat(double value) {
        
        alternateLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备降点纬度
       * </pre>
       *
       * <code>double alternateLat = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlternateLat() {
        
        alternateLat_ = 0D;
        onChanged();
        return this;
      }

      private int mediaUploadFlag_ ;
      /**
       * <pre>
       *飞机回仓后是否等待所有媒体文件传完再关仓：0-立即关仓 1-等待传完后关仓
       * </pre>
       *
       * <code>uint32 mediaUploadFlag = 6;</code>
       * @return The mediaUploadFlag.
       */
      @Override
      public int getMediaUploadFlag() {
        return mediaUploadFlag_;
      }
      /**
       * <pre>
       *飞机回仓后是否等待所有媒体文件传完再关仓：0-立即关仓 1-等待传完后关仓
       * </pre>
       *
       * <code>uint32 mediaUploadFlag = 6;</code>
       * @param value The mediaUploadFlag to set.
       * @return This builder for chaining.
       */
      public Builder setMediaUploadFlag(int value) {
        
        mediaUploadFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *飞机回仓后是否等待所有媒体文件传完再关仓：0-立即关仓 1-等待传完后关仓
       * </pre>
       *
       * <code>uint32 mediaUploadFlag = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMediaUploadFlag() {
        
        mediaUploadFlag_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HangarPoint)
    }

    // @@protoc_insertion_point(class_scope:HangarPoint)
    private static final HangarPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HangarPoint();
    }

    public static HangarPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HangarPoint>
        PARSER = new com.google.protobuf.AbstractParser<HangarPoint>() {
      @Override
      public HangarPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HangarPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HangarPoint> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HangarPoint> getParserForType() {
      return PARSER;
    }

    @Override
    public HangarPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NormalModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NormalModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    java.util.List<PointData>
        getAreaList();
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    PointData getArea(int index);
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    int getAreaCount();
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    java.util.List<? extends PointDataOrBuilder>
        getAreaOrBuilderList();
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    PointDataOrBuilder getAreaOrBuilder(
        int index);

    /**
     * <pre>
     *建模平台编号:1=瞰景，2=大势，默认1
     * </pre>
     *
     * <code>uint32 serviceId = 2;</code>
     * @return The serviceId.
     */
    int getServiceId();

    /**
     * <pre>
     *相机编号
     * </pre>
     *
     * <code>uint32 cameraId = 3;</code>
     * @return The cameraId.
     */
    int getCameraId();

    /**
     * <pre>
     *是否实时建模：0=不，1=是
     * </pre>
     *
     * <code>uint32 isModeling = 4;</code>
     * @return The isModeling.
     */
    int getIsModeling();

    /**
     * <pre>
     *作业模式：1=倾斜，2=正摄
     * </pre>
     *
     * <code>uint32 mode = 5;</code>
     * @return The mode.
     */
    int getMode();

    /**
     * <pre>
     *横向重叠率
     * </pre>
     *
     * <code>uint32 hOverlap = 6;</code>
     * @return The hOverlap.
     */
    int getHOverlap();

    /**
     * <pre>
     *纵向重叠率
     * </pre>
     *
     * <code>uint32 vOverlap = 7;</code>
     * @return The vOverlap.
     */
    int getVOverlap();

    /**
     * <pre>
     *正反：1：正，2=反
     * </pre>
     *
     * <code>uint32 mirror = 8;</code>
     * @return The mirror.
     */
    int getMirror();

    /**
     * <pre>
     *方向：1=南北，2=东西
     * </pre>
     *
     * <code>uint32 direction = 9;</code>
     * @return The direction.
     */
    int getDirection();

    /**
     * <pre>
     *航线飞行模式：1=直线飞行，2=协调转弯
     * </pre>
     *
     * <code>uint32 flightPathMode = 10;</code>
     * @return The flightPathMode.
     */
    int getFlightPathMode();

    /**
     * <pre>
     *测绘高度(单位:米，范围20~1500)
     * </pre>
     *
     * <code>uint32 height = 11;</code>
     * @return The height.
     */
    int getHeight();
  }
  /**
   * <pre>
   *普通建模
   * </pre>
   *
   * Protobuf type {@code NormalModel}
   */
  public static final class NormalModel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NormalModel)
      NormalModelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NormalModel.newBuilder() to construct.
    private NormalModel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NormalModel() {
      area_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new NormalModel();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NormalModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                area_ = new java.util.ArrayList<PointData>();
                mutable_bitField0_ |= 0x00000001;
              }
              area_.add(
                  input.readMessage(PointData.parser(), extensionRegistry));
              break;
            }
            case 16: {

              serviceId_ = input.readUInt32();
              break;
            }
            case 24: {

              cameraId_ = input.readUInt32();
              break;
            }
            case 32: {

              isModeling_ = input.readUInt32();
              break;
            }
            case 40: {

              mode_ = input.readUInt32();
              break;
            }
            case 48: {

              hOverlap_ = input.readUInt32();
              break;
            }
            case 56: {

              vOverlap_ = input.readUInt32();
              break;
            }
            case 64: {

              mirror_ = input.readUInt32();
              break;
            }
            case 72: {

              direction_ = input.readUInt32();
              break;
            }
            case 80: {

              flightPathMode_ = input.readUInt32();
              break;
            }
            case 88: {

              height_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          area_ = java.util.Collections.unmodifiableList(area_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_NormalModel_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_NormalModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NormalModel.class, Builder.class);
    }

    public static final int AREA_FIELD_NUMBER = 1;
    private java.util.List<PointData> area_;
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public java.util.List<PointData> getAreaList() {
      return area_;
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public java.util.List<? extends PointDataOrBuilder>
        getAreaOrBuilderList() {
      return area_;
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public int getAreaCount() {
      return area_.size();
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public PointData getArea(int index) {
      return area_.get(index);
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public PointDataOrBuilder getAreaOrBuilder(
        int index) {
      return area_.get(index);
    }

    public static final int SERVICEID_FIELD_NUMBER = 2;
    private int serviceId_;
    /**
     * <pre>
     *建模平台编号:1=瞰景，2=大势，默认1
     * </pre>
     *
     * <code>uint32 serviceId = 2;</code>
     * @return The serviceId.
     */
    @Override
    public int getServiceId() {
      return serviceId_;
    }

    public static final int CAMERAID_FIELD_NUMBER = 3;
    private int cameraId_;
    /**
     * <pre>
     *相机编号
     * </pre>
     *
     * <code>uint32 cameraId = 3;</code>
     * @return The cameraId.
     */
    @Override
    public int getCameraId() {
      return cameraId_;
    }

    public static final int ISMODELING_FIELD_NUMBER = 4;
    private int isModeling_;
    /**
     * <pre>
     *是否实时建模：0=不，1=是
     * </pre>
     *
     * <code>uint32 isModeling = 4;</code>
     * @return The isModeling.
     */
    @Override
    public int getIsModeling() {
      return isModeling_;
    }

    public static final int MODE_FIELD_NUMBER = 5;
    private int mode_;
    /**
     * <pre>
     *作业模式：1=倾斜，2=正摄
     * </pre>
     *
     * <code>uint32 mode = 5;</code>
     * @return The mode.
     */
    @Override
    public int getMode() {
      return mode_;
    }

    public static final int HOVERLAP_FIELD_NUMBER = 6;
    private int hOverlap_;
    /**
     * <pre>
     *横向重叠率
     * </pre>
     *
     * <code>uint32 hOverlap = 6;</code>
     * @return The hOverlap.
     */
    @Override
    public int getHOverlap() {
      return hOverlap_;
    }

    public static final int VOVERLAP_FIELD_NUMBER = 7;
    private int vOverlap_;
    /**
     * <pre>
     *纵向重叠率
     * </pre>
     *
     * <code>uint32 vOverlap = 7;</code>
     * @return The vOverlap.
     */
    @Override
    public int getVOverlap() {
      return vOverlap_;
    }

    public static final int MIRROR_FIELD_NUMBER = 8;
    private int mirror_;
    /**
     * <pre>
     *正反：1：正，2=反
     * </pre>
     *
     * <code>uint32 mirror = 8;</code>
     * @return The mirror.
     */
    @Override
    public int getMirror() {
      return mirror_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 9;
    private int direction_;
    /**
     * <pre>
     *方向：1=南北，2=东西
     * </pre>
     *
     * <code>uint32 direction = 9;</code>
     * @return The direction.
     */
    @Override
    public int getDirection() {
      return direction_;
    }

    public static final int FLIGHTPATHMODE_FIELD_NUMBER = 10;
    private int flightPathMode_;
    /**
     * <pre>
     *航线飞行模式：1=直线飞行，2=协调转弯
     * </pre>
     *
     * <code>uint32 flightPathMode = 10;</code>
     * @return The flightPathMode.
     */
    @Override
    public int getFlightPathMode() {
      return flightPathMode_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 11;
    private int height_;
    /**
     * <pre>
     *测绘高度(单位:米，范围20~1500)
     * </pre>
     *
     * <code>uint32 height = 11;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < area_.size(); i++) {
        output.writeMessage(1, area_.get(i));
      }
      if (serviceId_ != 0) {
        output.writeUInt32(2, serviceId_);
      }
      if (cameraId_ != 0) {
        output.writeUInt32(3, cameraId_);
      }
      if (isModeling_ != 0) {
        output.writeUInt32(4, isModeling_);
      }
      if (mode_ != 0) {
        output.writeUInt32(5, mode_);
      }
      if (hOverlap_ != 0) {
        output.writeUInt32(6, hOverlap_);
      }
      if (vOverlap_ != 0) {
        output.writeUInt32(7, vOverlap_);
      }
      if (mirror_ != 0) {
        output.writeUInt32(8, mirror_);
      }
      if (direction_ != 0) {
        output.writeUInt32(9, direction_);
      }
      if (flightPathMode_ != 0) {
        output.writeUInt32(10, flightPathMode_);
      }
      if (height_ != 0) {
        output.writeUInt32(11, height_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < area_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, area_.get(i));
      }
      if (serviceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, serviceId_);
      }
      if (cameraId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cameraId_);
      }
      if (isModeling_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, isModeling_);
      }
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, mode_);
      }
      if (hOverlap_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, hOverlap_);
      }
      if (vOverlap_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, vOverlap_);
      }
      if (mirror_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, mirror_);
      }
      if (direction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, direction_);
      }
      if (flightPathMode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, flightPathMode_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, height_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NormalModel)) {
        return super.equals(obj);
      }
      NormalModel other = (NormalModel) obj;

      if (!getAreaList()
          .equals(other.getAreaList())) return false;
      if (getServiceId()
          != other.getServiceId()) return false;
      if (getCameraId()
          != other.getCameraId()) return false;
      if (getIsModeling()
          != other.getIsModeling()) return false;
      if (getMode()
          != other.getMode()) return false;
      if (getHOverlap()
          != other.getHOverlap()) return false;
      if (getVOverlap()
          != other.getVOverlap()) return false;
      if (getMirror()
          != other.getMirror()) return false;
      if (getDirection()
          != other.getDirection()) return false;
      if (getFlightPathMode()
          != other.getFlightPathMode()) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAreaCount() > 0) {
        hash = (37 * hash) + AREA_FIELD_NUMBER;
        hash = (53 * hash) + getAreaList().hashCode();
      }
      hash = (37 * hash) + SERVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getServiceId();
      hash = (37 * hash) + CAMERAID_FIELD_NUMBER;
      hash = (53 * hash) + getCameraId();
      hash = (37 * hash) + ISMODELING_FIELD_NUMBER;
      hash = (53 * hash) + getIsModeling();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (37 * hash) + HOVERLAP_FIELD_NUMBER;
      hash = (53 * hash) + getHOverlap();
      hash = (37 * hash) + VOVERLAP_FIELD_NUMBER;
      hash = (53 * hash) + getVOverlap();
      hash = (37 * hash) + MIRROR_FIELD_NUMBER;
      hash = (53 * hash) + getMirror();
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getDirection();
      hash = (37 * hash) + FLIGHTPATHMODE_FIELD_NUMBER;
      hash = (53 * hash) + getFlightPathMode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NormalModel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NormalModel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NormalModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NormalModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NormalModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NormalModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NormalModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NormalModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NormalModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NormalModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NormalModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NormalModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NormalModel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *普通建模
     * </pre>
     *
     * Protobuf type {@code NormalModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NormalModel)
        NormalModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_NormalModel_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_NormalModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NormalModel.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.NormalModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAreaFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (areaBuilder_ == null) {
          area_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          areaBuilder_.clear();
        }
        serviceId_ = 0;

        cameraId_ = 0;

        isModeling_ = 0;

        mode_ = 0;

        hOverlap_ = 0;

        vOverlap_ = 0;

        mirror_ = 0;

        direction_ = 0;

        flightPathMode_ = 0;

        height_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_NormalModel_descriptor;
      }

      @Override
      public NormalModel getDefaultInstanceForType() {
        return NormalModel.getDefaultInstance();
      }

      @Override
      public NormalModel build() {
        NormalModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public NormalModel buildPartial() {
        NormalModel result = new NormalModel(this);
        int from_bitField0_ = bitField0_;
        if (areaBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            area_ = java.util.Collections.unmodifiableList(area_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.area_ = area_;
        } else {
          result.area_ = areaBuilder_.build();
        }
        result.serviceId_ = serviceId_;
        result.cameraId_ = cameraId_;
        result.isModeling_ = isModeling_;
        result.mode_ = mode_;
        result.hOverlap_ = hOverlap_;
        result.vOverlap_ = vOverlap_;
        result.mirror_ = mirror_;
        result.direction_ = direction_;
        result.flightPathMode_ = flightPathMode_;
        result.height_ = height_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NormalModel) {
          return mergeFrom((NormalModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NormalModel other) {
        if (other == NormalModel.getDefaultInstance()) return this;
        if (areaBuilder_ == null) {
          if (!other.area_.isEmpty()) {
            if (area_.isEmpty()) {
              area_ = other.area_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAreaIsMutable();
              area_.addAll(other.area_);
            }
            onChanged();
          }
        } else {
          if (!other.area_.isEmpty()) {
            if (areaBuilder_.isEmpty()) {
              areaBuilder_.dispose();
              areaBuilder_ = null;
              area_ = other.area_;
              bitField0_ = (bitField0_ & ~0x00000001);
              areaBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAreaFieldBuilder() : null;
            } else {
              areaBuilder_.addAllMessages(other.area_);
            }
          }
        }
        if (other.getServiceId() != 0) {
          setServiceId(other.getServiceId());
        }
        if (other.getCameraId() != 0) {
          setCameraId(other.getCameraId());
        }
        if (other.getIsModeling() != 0) {
          setIsModeling(other.getIsModeling());
        }
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        if (other.getHOverlap() != 0) {
          setHOverlap(other.getHOverlap());
        }
        if (other.getVOverlap() != 0) {
          setVOverlap(other.getVOverlap());
        }
        if (other.getMirror() != 0) {
          setMirror(other.getMirror());
        }
        if (other.getDirection() != 0) {
          setDirection(other.getDirection());
        }
        if (other.getFlightPathMode() != 0) {
          setFlightPathMode(other.getFlightPathMode());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NormalModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NormalModel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<PointData> area_ =
        java.util.Collections.emptyList();
      private void ensureAreaIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          area_ = new java.util.ArrayList<PointData>(area_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> areaBuilder_;

      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public java.util.List<PointData> getAreaList() {
        if (areaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(area_);
        } else {
          return areaBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public int getAreaCount() {
        if (areaBuilder_ == null) {
          return area_.size();
        } else {
          return areaBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData getArea(int index) {
        if (areaBuilder_ == null) {
          return area_.get(index);
        } else {
          return areaBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder setArea(
          int index, PointData value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaIsMutable();
          area_.set(index, value);
          onChanged();
        } else {
          areaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder setArea(
          int index, PointData.Builder builderForValue) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.set(index, builderForValue.build());
          onChanged();
        } else {
          areaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(PointData value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaIsMutable();
          area_.add(value);
          onChanged();
        } else {
          areaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(
          int index, PointData value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaIsMutable();
          area_.add(index, value);
          onChanged();
        } else {
          areaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(
          PointData.Builder builderForValue) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.add(builderForValue.build());
          onChanged();
        } else {
          areaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(
          int index, PointData.Builder builderForValue) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.add(index, builderForValue.build());
          onChanged();
        } else {
          areaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addAllArea(
          Iterable<? extends PointData> values) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, area_);
          onChanged();
        } else {
          areaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder clearArea() {
        if (areaBuilder_ == null) {
          area_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          areaBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder removeArea(int index) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.remove(index);
          onChanged();
        } else {
          areaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData.Builder getAreaBuilder(
          int index) {
        return getAreaFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointDataOrBuilder getAreaOrBuilder(
          int index) {
        if (areaBuilder_ == null) {
          return area_.get(index);  } else {
          return areaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public java.util.List<? extends PointDataOrBuilder>
           getAreaOrBuilderList() {
        if (areaBuilder_ != null) {
          return areaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(area_);
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData.Builder addAreaBuilder() {
        return getAreaFieldBuilder().addBuilder(
            PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData.Builder addAreaBuilder(
          int index) {
        return getAreaFieldBuilder().addBuilder(
            index, PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public java.util.List<PointData.Builder>
           getAreaBuilderList() {
        return getAreaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getAreaFieldBuilder() {
        if (areaBuilder_ == null) {
          areaBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  area_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          area_ = null;
        }
        return areaBuilder_;
      }

      private int serviceId_ ;
      /**
       * <pre>
       *建模平台编号:1=瞰景，2=大势，默认1
       * </pre>
       *
       * <code>uint32 serviceId = 2;</code>
       * @return The serviceId.
       */
      @Override
      public int getServiceId() {
        return serviceId_;
      }
      /**
       * <pre>
       *建模平台编号:1=瞰景，2=大势，默认1
       * </pre>
       *
       * <code>uint32 serviceId = 2;</code>
       * @param value The serviceId to set.
       * @return This builder for chaining.
       */
      public Builder setServiceId(int value) {
        
        serviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *建模平台编号:1=瞰景，2=大势，默认1
       * </pre>
       *
       * <code>uint32 serviceId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceId() {
        
        serviceId_ = 0;
        onChanged();
        return this;
      }

      private int cameraId_ ;
      /**
       * <pre>
       *相机编号
       * </pre>
       *
       * <code>uint32 cameraId = 3;</code>
       * @return The cameraId.
       */
      @Override
      public int getCameraId() {
        return cameraId_;
      }
      /**
       * <pre>
       *相机编号
       * </pre>
       *
       * <code>uint32 cameraId = 3;</code>
       * @param value The cameraId to set.
       * @return This builder for chaining.
       */
      public Builder setCameraId(int value) {
        
        cameraId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机编号
       * </pre>
       *
       * <code>uint32 cameraId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCameraId() {
        
        cameraId_ = 0;
        onChanged();
        return this;
      }

      private int isModeling_ ;
      /**
       * <pre>
       *是否实时建模：0=不，1=是
       * </pre>
       *
       * <code>uint32 isModeling = 4;</code>
       * @return The isModeling.
       */
      @Override
      public int getIsModeling() {
        return isModeling_;
      }
      /**
       * <pre>
       *是否实时建模：0=不，1=是
       * </pre>
       *
       * <code>uint32 isModeling = 4;</code>
       * @param value The isModeling to set.
       * @return This builder for chaining.
       */
      public Builder setIsModeling(int value) {
        
        isModeling_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否实时建模：0=不，1=是
       * </pre>
       *
       * <code>uint32 isModeling = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsModeling() {
        
        isModeling_ = 0;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <pre>
       *作业模式：1=倾斜，2=正摄
       * </pre>
       *
       * <code>uint32 mode = 5;</code>
       * @return The mode.
       */
      @Override
      public int getMode() {
        return mode_;
      }
      /**
       * <pre>
       *作业模式：1=倾斜，2=正摄
       * </pre>
       *
       * <code>uint32 mode = 5;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *作业模式：1=倾斜，2=正摄
       * </pre>
       *
       * <code>uint32 mode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private int hOverlap_ ;
      /**
       * <pre>
       *横向重叠率
       * </pre>
       *
       * <code>uint32 hOverlap = 6;</code>
       * @return The hOverlap.
       */
      @Override
      public int getHOverlap() {
        return hOverlap_;
      }
      /**
       * <pre>
       *横向重叠率
       * </pre>
       *
       * <code>uint32 hOverlap = 6;</code>
       * @param value The hOverlap to set.
       * @return This builder for chaining.
       */
      public Builder setHOverlap(int value) {
        
        hOverlap_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *横向重叠率
       * </pre>
       *
       * <code>uint32 hOverlap = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHOverlap() {
        
        hOverlap_ = 0;
        onChanged();
        return this;
      }

      private int vOverlap_ ;
      /**
       * <pre>
       *纵向重叠率
       * </pre>
       *
       * <code>uint32 vOverlap = 7;</code>
       * @return The vOverlap.
       */
      @Override
      public int getVOverlap() {
        return vOverlap_;
      }
      /**
       * <pre>
       *纵向重叠率
       * </pre>
       *
       * <code>uint32 vOverlap = 7;</code>
       * @param value The vOverlap to set.
       * @return This builder for chaining.
       */
      public Builder setVOverlap(int value) {
        
        vOverlap_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纵向重叠率
       * </pre>
       *
       * <code>uint32 vOverlap = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearVOverlap() {
        
        vOverlap_ = 0;
        onChanged();
        return this;
      }

      private int mirror_ ;
      /**
       * <pre>
       *正反：1：正，2=反
       * </pre>
       *
       * <code>uint32 mirror = 8;</code>
       * @return The mirror.
       */
      @Override
      public int getMirror() {
        return mirror_;
      }
      /**
       * <pre>
       *正反：1：正，2=反
       * </pre>
       *
       * <code>uint32 mirror = 8;</code>
       * @param value The mirror to set.
       * @return This builder for chaining.
       */
      public Builder setMirror(int value) {
        
        mirror_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *正反：1：正，2=反
       * </pre>
       *
       * <code>uint32 mirror = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMirror() {
        
        mirror_ = 0;
        onChanged();
        return this;
      }

      private int direction_ ;
      /**
       * <pre>
       *方向：1=南北，2=东西
       * </pre>
       *
       * <code>uint32 direction = 9;</code>
       * @return The direction.
       */
      @Override
      public int getDirection() {
        return direction_;
      }
      /**
       * <pre>
       *方向：1=南北，2=东西
       * </pre>
       *
       * <code>uint32 direction = 9;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(int value) {
        
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *方向：1=南北，2=东西
       * </pre>
       *
       * <code>uint32 direction = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        
        direction_ = 0;
        onChanged();
        return this;
      }

      private int flightPathMode_ ;
      /**
       * <pre>
       *航线飞行模式：1=直线飞行，2=协调转弯
       * </pre>
       *
       * <code>uint32 flightPathMode = 10;</code>
       * @return The flightPathMode.
       */
      @Override
      public int getFlightPathMode() {
        return flightPathMode_;
      }
      /**
       * <pre>
       *航线飞行模式：1=直线飞行，2=协调转弯
       * </pre>
       *
       * <code>uint32 flightPathMode = 10;</code>
       * @param value The flightPathMode to set.
       * @return This builder for chaining.
       */
      public Builder setFlightPathMode(int value) {
        
        flightPathMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航线飞行模式：1=直线飞行，2=协调转弯
       * </pre>
       *
       * <code>uint32 flightPathMode = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightPathMode() {
        
        flightPathMode_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *测绘高度(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 height = 11;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *测绘高度(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 height = 11;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *测绘高度(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 height = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NormalModel)
    }

    // @@protoc_insertion_point(class_scope:NormalModel)
    private static final NormalModel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NormalModel();
    }

    public static NormalModel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NormalModel>
        PARSER = new com.google.protobuf.AbstractParser<NormalModel>() {
      @Override
      public NormalModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NormalModel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NormalModel> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NormalModel> getParserForType() {
      return PARSER;
    }

    @Override
    public NormalModel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SurroundModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SurroundModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    java.util.List<PointData>
        getAreaList();
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    PointData getArea(int index);
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    int getAreaCount();
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    java.util.List<? extends PointDataOrBuilder>
        getAreaOrBuilderList();
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    PointDataOrBuilder getAreaOrBuilder(
        int index);

    /**
     * <pre>
     *建模平台编号:1=瞰景，2=天宇
     * </pre>
     *
     * <code>uint32 serviceId = 2;</code>
     * @return The serviceId.
     */
    int getServiceId();

    /**
     * <pre>
     *相机编号
     * </pre>
     *
     * <code>uint32 cameraId = 3;</code>
     * @return The cameraId.
     */
    int getCameraId();

    /**
     * <pre>
     *是否实时建模：0=不，1=是
     * </pre>
     *
     * <code>uint32 isModeling = 4;</code>
     * @return The isModeling.
     */
    int getIsModeling();

    /**
     * <pre>
     *测绘高度(单位:米，范围20~1500)
     * </pre>
     *
     * <code>uint32 height = 5;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    java.util.List<PointData>
        getBoundaryList();
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    PointData getBoundary(int index);
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    int getBoundaryCount();
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    java.util.List<? extends PointDataOrBuilder>
        getBoundaryOrBuilderList();
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    PointDataOrBuilder getBoundaryOrBuilder(
        int index);

    /**
     * <pre>
     *曝光点数(范围12、16、20、24)
     * </pre>
     *
     * <code>uint32 exposureCount = 7;</code>
     * @return The exposureCount.
     */
    int getExposureCount();
  }
  /**
   * <pre>
   *环绕建模
   * </pre>
   *
   * Protobuf type {@code SurroundModel}
   */
  public static final class SurroundModel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SurroundModel)
      SurroundModelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SurroundModel.newBuilder() to construct.
    private SurroundModel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SurroundModel() {
      area_ = java.util.Collections.emptyList();
      boundary_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SurroundModel();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SurroundModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                area_ = new java.util.ArrayList<PointData>();
                mutable_bitField0_ |= 0x00000001;
              }
              area_.add(
                  input.readMessage(PointData.parser(), extensionRegistry));
              break;
            }
            case 16: {

              serviceId_ = input.readUInt32();
              break;
            }
            case 24: {

              cameraId_ = input.readUInt32();
              break;
            }
            case 32: {

              isModeling_ = input.readUInt32();
              break;
            }
            case 40: {

              height_ = input.readUInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                boundary_ = new java.util.ArrayList<PointData>();
                mutable_bitField0_ |= 0x00000002;
              }
              boundary_.add(
                  input.readMessage(PointData.parser(), extensionRegistry));
              break;
            }
            case 56: {

              exposureCount_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          area_ = java.util.Collections.unmodifiableList(area_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          boundary_ = java.util.Collections.unmodifiableList(boundary_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_SurroundModel_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_SurroundModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SurroundModel.class, Builder.class);
    }

    public static final int AREA_FIELD_NUMBER = 1;
    private java.util.List<PointData> area_;
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public java.util.List<PointData> getAreaList() {
      return area_;
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public java.util.List<? extends PointDataOrBuilder>
        getAreaOrBuilderList() {
      return area_;
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public int getAreaCount() {
      return area_.size();
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public PointData getArea(int index) {
      return area_.get(index);
    }
    /**
     * <pre>
     *作业区域
     * </pre>
     *
     * <code>repeated .PointData area = 1;</code>
     */
    @Override
    public PointDataOrBuilder getAreaOrBuilder(
        int index) {
      return area_.get(index);
    }

    public static final int SERVICEID_FIELD_NUMBER = 2;
    private int serviceId_;
    /**
     * <pre>
     *建模平台编号:1=瞰景，2=天宇
     * </pre>
     *
     * <code>uint32 serviceId = 2;</code>
     * @return The serviceId.
     */
    @Override
    public int getServiceId() {
      return serviceId_;
    }

    public static final int CAMERAID_FIELD_NUMBER = 3;
    private int cameraId_;
    /**
     * <pre>
     *相机编号
     * </pre>
     *
     * <code>uint32 cameraId = 3;</code>
     * @return The cameraId.
     */
    @Override
    public int getCameraId() {
      return cameraId_;
    }

    public static final int ISMODELING_FIELD_NUMBER = 4;
    private int isModeling_;
    /**
     * <pre>
     *是否实时建模：0=不，1=是
     * </pre>
     *
     * <code>uint32 isModeling = 4;</code>
     * @return The isModeling.
     */
    @Override
    public int getIsModeling() {
      return isModeling_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 5;
    private int height_;
    /**
     * <pre>
     *测绘高度(单位:米，范围20~1500)
     * </pre>
     *
     * <code>uint32 height = 5;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }

    public static final int BOUNDARY_FIELD_NUMBER = 6;
    private java.util.List<PointData> boundary_;
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    @Override
    public java.util.List<PointData> getBoundaryList() {
      return boundary_;
    }
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    @Override
    public java.util.List<? extends PointDataOrBuilder>
        getBoundaryOrBuilderList() {
      return boundary_;
    }
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    @Override
    public int getBoundaryCount() {
      return boundary_.size();
    }
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    @Override
    public PointData getBoundary(int index) {
      return boundary_.get(index);
    }
    /**
     * <pre>
     *边界区域
     * </pre>
     *
     * <code>repeated .PointData boundary = 6;</code>
     */
    @Override
    public PointDataOrBuilder getBoundaryOrBuilder(
        int index) {
      return boundary_.get(index);
    }

    public static final int EXPOSURECOUNT_FIELD_NUMBER = 7;
    private int exposureCount_;
    /**
     * <pre>
     *曝光点数(范围12、16、20、24)
     * </pre>
     *
     * <code>uint32 exposureCount = 7;</code>
     * @return The exposureCount.
     */
    @Override
    public int getExposureCount() {
      return exposureCount_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < area_.size(); i++) {
        output.writeMessage(1, area_.get(i));
      }
      if (serviceId_ != 0) {
        output.writeUInt32(2, serviceId_);
      }
      if (cameraId_ != 0) {
        output.writeUInt32(3, cameraId_);
      }
      if (isModeling_ != 0) {
        output.writeUInt32(4, isModeling_);
      }
      if (height_ != 0) {
        output.writeUInt32(5, height_);
      }
      for (int i = 0; i < boundary_.size(); i++) {
        output.writeMessage(6, boundary_.get(i));
      }
      if (exposureCount_ != 0) {
        output.writeUInt32(7, exposureCount_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < area_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, area_.get(i));
      }
      if (serviceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, serviceId_);
      }
      if (cameraId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cameraId_);
      }
      if (isModeling_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, isModeling_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, height_);
      }
      for (int i = 0; i < boundary_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, boundary_.get(i));
      }
      if (exposureCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, exposureCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SurroundModel)) {
        return super.equals(obj);
      }
      SurroundModel other = (SurroundModel) obj;

      if (!getAreaList()
          .equals(other.getAreaList())) return false;
      if (getServiceId()
          != other.getServiceId()) return false;
      if (getCameraId()
          != other.getCameraId()) return false;
      if (getIsModeling()
          != other.getIsModeling()) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (!getBoundaryList()
          .equals(other.getBoundaryList())) return false;
      if (getExposureCount()
          != other.getExposureCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAreaCount() > 0) {
        hash = (37 * hash) + AREA_FIELD_NUMBER;
        hash = (53 * hash) + getAreaList().hashCode();
      }
      hash = (37 * hash) + SERVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getServiceId();
      hash = (37 * hash) + CAMERAID_FIELD_NUMBER;
      hash = (53 * hash) + getCameraId();
      hash = (37 * hash) + ISMODELING_FIELD_NUMBER;
      hash = (53 * hash) + getIsModeling();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      if (getBoundaryCount() > 0) {
        hash = (37 * hash) + BOUNDARY_FIELD_NUMBER;
        hash = (53 * hash) + getBoundaryList().hashCode();
      }
      hash = (37 * hash) + EXPOSURECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getExposureCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SurroundModel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SurroundModel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SurroundModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SurroundModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SurroundModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SurroundModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SurroundModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SurroundModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SurroundModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SurroundModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SurroundModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SurroundModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SurroundModel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *环绕建模
     * </pre>
     *
     * Protobuf type {@code SurroundModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SurroundModel)
        SurroundModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_SurroundModel_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_SurroundModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SurroundModel.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.SurroundModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAreaFieldBuilder();
          getBoundaryFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (areaBuilder_ == null) {
          area_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          areaBuilder_.clear();
        }
        serviceId_ = 0;

        cameraId_ = 0;

        isModeling_ = 0;

        height_ = 0;

        if (boundaryBuilder_ == null) {
          boundary_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          boundaryBuilder_.clear();
        }
        exposureCount_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_SurroundModel_descriptor;
      }

      @Override
      public SurroundModel getDefaultInstanceForType() {
        return SurroundModel.getDefaultInstance();
      }

      @Override
      public SurroundModel build() {
        SurroundModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SurroundModel buildPartial() {
        SurroundModel result = new SurroundModel(this);
        int from_bitField0_ = bitField0_;
        if (areaBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            area_ = java.util.Collections.unmodifiableList(area_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.area_ = area_;
        } else {
          result.area_ = areaBuilder_.build();
        }
        result.serviceId_ = serviceId_;
        result.cameraId_ = cameraId_;
        result.isModeling_ = isModeling_;
        result.height_ = height_;
        if (boundaryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            boundary_ = java.util.Collections.unmodifiableList(boundary_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.boundary_ = boundary_;
        } else {
          result.boundary_ = boundaryBuilder_.build();
        }
        result.exposureCount_ = exposureCount_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SurroundModel) {
          return mergeFrom((SurroundModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SurroundModel other) {
        if (other == SurroundModel.getDefaultInstance()) return this;
        if (areaBuilder_ == null) {
          if (!other.area_.isEmpty()) {
            if (area_.isEmpty()) {
              area_ = other.area_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAreaIsMutable();
              area_.addAll(other.area_);
            }
            onChanged();
          }
        } else {
          if (!other.area_.isEmpty()) {
            if (areaBuilder_.isEmpty()) {
              areaBuilder_.dispose();
              areaBuilder_ = null;
              area_ = other.area_;
              bitField0_ = (bitField0_ & ~0x00000001);
              areaBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAreaFieldBuilder() : null;
            } else {
              areaBuilder_.addAllMessages(other.area_);
            }
          }
        }
        if (other.getServiceId() != 0) {
          setServiceId(other.getServiceId());
        }
        if (other.getCameraId() != 0) {
          setCameraId(other.getCameraId());
        }
        if (other.getIsModeling() != 0) {
          setIsModeling(other.getIsModeling());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (boundaryBuilder_ == null) {
          if (!other.boundary_.isEmpty()) {
            if (boundary_.isEmpty()) {
              boundary_ = other.boundary_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBoundaryIsMutable();
              boundary_.addAll(other.boundary_);
            }
            onChanged();
          }
        } else {
          if (!other.boundary_.isEmpty()) {
            if (boundaryBuilder_.isEmpty()) {
              boundaryBuilder_.dispose();
              boundaryBuilder_ = null;
              boundary_ = other.boundary_;
              bitField0_ = (bitField0_ & ~0x00000002);
              boundaryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBoundaryFieldBuilder() : null;
            } else {
              boundaryBuilder_.addAllMessages(other.boundary_);
            }
          }
        }
        if (other.getExposureCount() != 0) {
          setExposureCount(other.getExposureCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SurroundModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SurroundModel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<PointData> area_ =
        java.util.Collections.emptyList();
      private void ensureAreaIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          area_ = new java.util.ArrayList<PointData>(area_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> areaBuilder_;

      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public java.util.List<PointData> getAreaList() {
        if (areaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(area_);
        } else {
          return areaBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public int getAreaCount() {
        if (areaBuilder_ == null) {
          return area_.size();
        } else {
          return areaBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData getArea(int index) {
        if (areaBuilder_ == null) {
          return area_.get(index);
        } else {
          return areaBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder setArea(
          int index, PointData value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaIsMutable();
          area_.set(index, value);
          onChanged();
        } else {
          areaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder setArea(
          int index, PointData.Builder builderForValue) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.set(index, builderForValue.build());
          onChanged();
        } else {
          areaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(PointData value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaIsMutable();
          area_.add(value);
          onChanged();
        } else {
          areaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(
          int index, PointData value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaIsMutable();
          area_.add(index, value);
          onChanged();
        } else {
          areaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(
          PointData.Builder builderForValue) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.add(builderForValue.build());
          onChanged();
        } else {
          areaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addArea(
          int index, PointData.Builder builderForValue) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.add(index, builderForValue.build());
          onChanged();
        } else {
          areaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder addAllArea(
          Iterable<? extends PointData> values) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, area_);
          onChanged();
        } else {
          areaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder clearArea() {
        if (areaBuilder_ == null) {
          area_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          areaBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public Builder removeArea(int index) {
        if (areaBuilder_ == null) {
          ensureAreaIsMutable();
          area_.remove(index);
          onChanged();
        } else {
          areaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData.Builder getAreaBuilder(
          int index) {
        return getAreaFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointDataOrBuilder getAreaOrBuilder(
          int index) {
        if (areaBuilder_ == null) {
          return area_.get(index);  } else {
          return areaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public java.util.List<? extends PointDataOrBuilder>
           getAreaOrBuilderList() {
        if (areaBuilder_ != null) {
          return areaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(area_);
        }
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData.Builder addAreaBuilder() {
        return getAreaFieldBuilder().addBuilder(
            PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public PointData.Builder addAreaBuilder(
          int index) {
        return getAreaFieldBuilder().addBuilder(
            index, PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *作业区域
       * </pre>
       *
       * <code>repeated .PointData area = 1;</code>
       */
      public java.util.List<PointData.Builder>
           getAreaBuilderList() {
        return getAreaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getAreaFieldBuilder() {
        if (areaBuilder_ == null) {
          areaBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  area_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          area_ = null;
        }
        return areaBuilder_;
      }

      private int serviceId_ ;
      /**
       * <pre>
       *建模平台编号:1=瞰景，2=天宇
       * </pre>
       *
       * <code>uint32 serviceId = 2;</code>
       * @return The serviceId.
       */
      @Override
      public int getServiceId() {
        return serviceId_;
      }
      /**
       * <pre>
       *建模平台编号:1=瞰景，2=天宇
       * </pre>
       *
       * <code>uint32 serviceId = 2;</code>
       * @param value The serviceId to set.
       * @return This builder for chaining.
       */
      public Builder setServiceId(int value) {
        
        serviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *建模平台编号:1=瞰景，2=天宇
       * </pre>
       *
       * <code>uint32 serviceId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceId() {
        
        serviceId_ = 0;
        onChanged();
        return this;
      }

      private int cameraId_ ;
      /**
       * <pre>
       *相机编号
       * </pre>
       *
       * <code>uint32 cameraId = 3;</code>
       * @return The cameraId.
       */
      @Override
      public int getCameraId() {
        return cameraId_;
      }
      /**
       * <pre>
       *相机编号
       * </pre>
       *
       * <code>uint32 cameraId = 3;</code>
       * @param value The cameraId to set.
       * @return This builder for chaining.
       */
      public Builder setCameraId(int value) {
        
        cameraId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相机编号
       * </pre>
       *
       * <code>uint32 cameraId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCameraId() {
        
        cameraId_ = 0;
        onChanged();
        return this;
      }

      private int isModeling_ ;
      /**
       * <pre>
       *是否实时建模：0=不，1=是
       * </pre>
       *
       * <code>uint32 isModeling = 4;</code>
       * @return The isModeling.
       */
      @Override
      public int getIsModeling() {
        return isModeling_;
      }
      /**
       * <pre>
       *是否实时建模：0=不，1=是
       * </pre>
       *
       * <code>uint32 isModeling = 4;</code>
       * @param value The isModeling to set.
       * @return This builder for chaining.
       */
      public Builder setIsModeling(int value) {
        
        isModeling_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否实时建模：0=不，1=是
       * </pre>
       *
       * <code>uint32 isModeling = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsModeling() {
        
        isModeling_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *测绘高度(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 height = 5;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *测绘高度(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 height = 5;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *测绘高度(单位:米，范围20~1500)
       * </pre>
       *
       * <code>uint32 height = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<PointData> boundary_ =
        java.util.Collections.emptyList();
      private void ensureBoundaryIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          boundary_ = new java.util.ArrayList<PointData>(boundary_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> boundaryBuilder_;

      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public java.util.List<PointData> getBoundaryList() {
        if (boundaryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boundary_);
        } else {
          return boundaryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public int getBoundaryCount() {
        if (boundaryBuilder_ == null) {
          return boundary_.size();
        } else {
          return boundaryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public PointData getBoundary(int index) {
        if (boundaryBuilder_ == null) {
          return boundary_.get(index);
        } else {
          return boundaryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder setBoundary(
          int index, PointData value) {
        if (boundaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundaryIsMutable();
          boundary_.set(index, value);
          onChanged();
        } else {
          boundaryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder setBoundary(
          int index, PointData.Builder builderForValue) {
        if (boundaryBuilder_ == null) {
          ensureBoundaryIsMutable();
          boundary_.set(index, builderForValue.build());
          onChanged();
        } else {
          boundaryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder addBoundary(PointData value) {
        if (boundaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundaryIsMutable();
          boundary_.add(value);
          onChanged();
        } else {
          boundaryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder addBoundary(
          int index, PointData value) {
        if (boundaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundaryIsMutable();
          boundary_.add(index, value);
          onChanged();
        } else {
          boundaryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder addBoundary(
          PointData.Builder builderForValue) {
        if (boundaryBuilder_ == null) {
          ensureBoundaryIsMutable();
          boundary_.add(builderForValue.build());
          onChanged();
        } else {
          boundaryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder addBoundary(
          int index, PointData.Builder builderForValue) {
        if (boundaryBuilder_ == null) {
          ensureBoundaryIsMutable();
          boundary_.add(index, builderForValue.build());
          onChanged();
        } else {
          boundaryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder addAllBoundary(
          Iterable<? extends PointData> values) {
        if (boundaryBuilder_ == null) {
          ensureBoundaryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boundary_);
          onChanged();
        } else {
          boundaryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder clearBoundary() {
        if (boundaryBuilder_ == null) {
          boundary_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          boundaryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public Builder removeBoundary(int index) {
        if (boundaryBuilder_ == null) {
          ensureBoundaryIsMutable();
          boundary_.remove(index);
          onChanged();
        } else {
          boundaryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public PointData.Builder getBoundaryBuilder(
          int index) {
        return getBoundaryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public PointDataOrBuilder getBoundaryOrBuilder(
          int index) {
        if (boundaryBuilder_ == null) {
          return boundary_.get(index);  } else {
          return boundaryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public java.util.List<? extends PointDataOrBuilder>
           getBoundaryOrBuilderList() {
        if (boundaryBuilder_ != null) {
          return boundaryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boundary_);
        }
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public PointData.Builder addBoundaryBuilder() {
        return getBoundaryFieldBuilder().addBuilder(
            PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public PointData.Builder addBoundaryBuilder(
          int index) {
        return getBoundaryFieldBuilder().addBuilder(
            index, PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *边界区域
       * </pre>
       *
       * <code>repeated .PointData boundary = 6;</code>
       */
      public java.util.List<PointData.Builder>
           getBoundaryBuilderList() {
        return getBoundaryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getBoundaryFieldBuilder() {
        if (boundaryBuilder_ == null) {
          boundaryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  boundary_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          boundary_ = null;
        }
        return boundaryBuilder_;
      }

      private int exposureCount_ ;
      /**
       * <pre>
       *曝光点数(范围12、16、20、24)
       * </pre>
       *
       * <code>uint32 exposureCount = 7;</code>
       * @return The exposureCount.
       */
      @Override
      public int getExposureCount() {
        return exposureCount_;
      }
      /**
       * <pre>
       *曝光点数(范围12、16、20、24)
       * </pre>
       *
       * <code>uint32 exposureCount = 7;</code>
       * @param value The exposureCount to set.
       * @return This builder for chaining.
       */
      public Builder setExposureCount(int value) {
        
        exposureCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *曝光点数(范围12、16、20、24)
       * </pre>
       *
       * <code>uint32 exposureCount = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearExposureCount() {
        
        exposureCount_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SurroundModel)
    }

    // @@protoc_insertion_point(class_scope:SurroundModel)
    private static final SurroundModel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SurroundModel();
    }

    public static SurroundModel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SurroundModel>
        PARSER = new com.google.protobuf.AbstractParser<SurroundModel>() {
      @Override
      public SurroundModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SurroundModel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SurroundModel> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SurroundModel> getParserForType() {
      return PARSER;
    }

    @Override
    public SurroundModel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UavInitInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UavInitInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *无人机型号	
     * </pre>
     *
     * <code>string uavModel = 1;</code>
     * @return The uavModel.
     */
    String getUavModel();
    /**
     * <pre>
     *无人机型号	
     * </pre>
     *
     * <code>string uavModel = 1;</code>
     * @return The bytes for uavModel.
     */
    com.google.protobuf.ByteString
        getUavModelBytes();

    /**
     * <pre>
     *无人机SN
     * </pre>
     *
     * <code>string uavSn = 2;</code>
     * @return The uavSn.
     */
    String getUavSn();
    /**
     * <pre>
     *无人机SN
     * </pre>
     *
     * <code>string uavSn = 2;</code>
     * @return The bytes for uavSn.
     */
    com.google.protobuf.ByteString
        getUavSnBytes();

    /**
     * <pre>
     *无人机固件版本号
     * </pre>
     *
     * <code>string uavVersion = 3;</code>
     * @return The uavVersion.
     */
    String getUavVersion();
    /**
     * <pre>
     *无人机固件版本号
     * </pre>
     *
     * <code>string uavVersion = 3;</code>
     * @return The bytes for uavVersion.
     */
    com.google.protobuf.ByteString
        getUavVersionBytes();

    /**
     * <pre>
     *挂载相机型号	
     * </pre>
     *
     * <code>string ptModel = 4;</code>
     * @return The ptModel.
     */
    String getPtModel();
    /**
     * <pre>
     *挂载相机型号	
     * </pre>
     *
     * <code>string ptModel = 4;</code>
     * @return The bytes for ptModel.
     */
    com.google.protobuf.ByteString
        getPtModelBytes();

    /**
     * <pre>
     *挂载相机固件版本号
     * </pre>
     *
     * <code>string ptVersion = 5;</code>
     * @return The ptVersion.
     */
    String getPtVersion();
    /**
     * <pre>
     *挂载相机固件版本号
     * </pre>
     *
     * <code>string ptVersion = 5;</code>
     * @return The bytes for ptVersion.
     */
    com.google.protobuf.ByteString
        getPtVersionBytes();

    /**
     * <pre>
     *挂载相机psdk口位置     
     * </pre>
     *
     * <code>uint32 ptPosition = 6;</code>
     * @return The ptPosition.
     */
    int getPtPosition();
  }
  /**
   * <pre>
   *无人机初始化详情
   * </pre>
   *
   * Protobuf type {@code UavInitInfo}
   */
  public static final class UavInitInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UavInitInfo)
      UavInitInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UavInitInfo.newBuilder() to construct.
    private UavInitInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UavInitInfo() {
      uavModel_ = "";
      uavSn_ = "";
      uavVersion_ = "";
      ptModel_ = "";
      ptVersion_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new UavInitInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UavInitInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              uavModel_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              uavSn_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              uavVersion_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              ptModel_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              ptVersion_ = s;
              break;
            }
            case 48: {

              ptPosition_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_UavInitInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_UavInitInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UavInitInfo.class, Builder.class);
    }

    public static final int UAVMODEL_FIELD_NUMBER = 1;
    private volatile Object uavModel_;
    /**
     * <pre>
     *无人机型号	
     * </pre>
     *
     * <code>string uavModel = 1;</code>
     * @return The uavModel.
     */
    @Override
    public String getUavModel() {
      Object ref = uavModel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uavModel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *无人机型号	
     * </pre>
     *
     * <code>string uavModel = 1;</code>
     * @return The bytes for uavModel.
     */
    @Override
    public com.google.protobuf.ByteString
        getUavModelBytes() {
      Object ref = uavModel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uavModel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UAVSN_FIELD_NUMBER = 2;
    private volatile Object uavSn_;
    /**
     * <pre>
     *无人机SN
     * </pre>
     *
     * <code>string uavSn = 2;</code>
     * @return The uavSn.
     */
    @Override
    public String getUavSn() {
      Object ref = uavSn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uavSn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *无人机SN
     * </pre>
     *
     * <code>string uavSn = 2;</code>
     * @return The bytes for uavSn.
     */
    @Override
    public com.google.protobuf.ByteString
        getUavSnBytes() {
      Object ref = uavSn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uavSn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UAVVERSION_FIELD_NUMBER = 3;
    private volatile Object uavVersion_;
    /**
     * <pre>
     *无人机固件版本号
     * </pre>
     *
     * <code>string uavVersion = 3;</code>
     * @return The uavVersion.
     */
    @Override
    public String getUavVersion() {
      Object ref = uavVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uavVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *无人机固件版本号
     * </pre>
     *
     * <code>string uavVersion = 3;</code>
     * @return The bytes for uavVersion.
     */
    @Override
    public com.google.protobuf.ByteString
        getUavVersionBytes() {
      Object ref = uavVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uavVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PTMODEL_FIELD_NUMBER = 4;
    private volatile Object ptModel_;
    /**
     * <pre>
     *挂载相机型号	
     * </pre>
     *
     * <code>string ptModel = 4;</code>
     * @return The ptModel.
     */
    @Override
    public String getPtModel() {
      Object ref = ptModel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ptModel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *挂载相机型号	
     * </pre>
     *
     * <code>string ptModel = 4;</code>
     * @return The bytes for ptModel.
     */
    @Override
    public com.google.protobuf.ByteString
        getPtModelBytes() {
      Object ref = ptModel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ptModel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PTVERSION_FIELD_NUMBER = 5;
    private volatile Object ptVersion_;
    /**
     * <pre>
     *挂载相机固件版本号
     * </pre>
     *
     * <code>string ptVersion = 5;</code>
     * @return The ptVersion.
     */
    @Override
    public String getPtVersion() {
      Object ref = ptVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ptVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *挂载相机固件版本号
     * </pre>
     *
     * <code>string ptVersion = 5;</code>
     * @return The bytes for ptVersion.
     */
    @Override
    public com.google.protobuf.ByteString
        getPtVersionBytes() {
      Object ref = ptVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ptVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PTPOSITION_FIELD_NUMBER = 6;
    private int ptPosition_;
    /**
     * <pre>
     *挂载相机psdk口位置     
     * </pre>
     *
     * <code>uint32 ptPosition = 6;</code>
     * @return The ptPosition.
     */
    @Override
    public int getPtPosition() {
      return ptPosition_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUavModelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uavModel_);
      }
      if (!getUavSnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uavSn_);
      }
      if (!getUavVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uavVersion_);
      }
      if (!getPtModelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ptModel_);
      }
      if (!getPtVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ptVersion_);
      }
      if (ptPosition_ != 0) {
        output.writeUInt32(6, ptPosition_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUavModelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uavModel_);
      }
      if (!getUavSnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uavSn_);
      }
      if (!getUavVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uavVersion_);
      }
      if (!getPtModelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ptModel_);
      }
      if (!getPtVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ptVersion_);
      }
      if (ptPosition_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ptPosition_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UavInitInfo)) {
        return super.equals(obj);
      }
      UavInitInfo other = (UavInitInfo) obj;

      if (!getUavModel()
          .equals(other.getUavModel())) return false;
      if (!getUavSn()
          .equals(other.getUavSn())) return false;
      if (!getUavVersion()
          .equals(other.getUavVersion())) return false;
      if (!getPtModel()
          .equals(other.getPtModel())) return false;
      if (!getPtVersion()
          .equals(other.getPtVersion())) return false;
      if (getPtPosition()
          != other.getPtPosition()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UAVMODEL_FIELD_NUMBER;
      hash = (53 * hash) + getUavModel().hashCode();
      hash = (37 * hash) + UAVSN_FIELD_NUMBER;
      hash = (53 * hash) + getUavSn().hashCode();
      hash = (37 * hash) + UAVVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getUavVersion().hashCode();
      hash = (37 * hash) + PTMODEL_FIELD_NUMBER;
      hash = (53 * hash) + getPtModel().hashCode();
      hash = (37 * hash) + PTVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getPtVersion().hashCode();
      hash = (37 * hash) + PTPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPtPosition();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UavInitInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavInitInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavInitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavInitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavInitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UavInitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UavInitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UavInitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UavInitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UavInitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UavInitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UavInitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UavInitInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *无人机初始化详情
     * </pre>
     *
     * Protobuf type {@code UavInitInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UavInitInfo)
        UavInitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_UavInitInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_UavInitInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UavInitInfo.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.UavInitInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        uavModel_ = "";

        uavSn_ = "";

        uavVersion_ = "";

        ptModel_ = "";

        ptVersion_ = "";

        ptPosition_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_UavInitInfo_descriptor;
      }

      @Override
      public UavInitInfo getDefaultInstanceForType() {
        return UavInitInfo.getDefaultInstance();
      }

      @Override
      public UavInitInfo build() {
        UavInitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public UavInitInfo buildPartial() {
        UavInitInfo result = new UavInitInfo(this);
        result.uavModel_ = uavModel_;
        result.uavSn_ = uavSn_;
        result.uavVersion_ = uavVersion_;
        result.ptModel_ = ptModel_;
        result.ptVersion_ = ptVersion_;
        result.ptPosition_ = ptPosition_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UavInitInfo) {
          return mergeFrom((UavInitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UavInitInfo other) {
        if (other == UavInitInfo.getDefaultInstance()) return this;
        if (!other.getUavModel().isEmpty()) {
          uavModel_ = other.uavModel_;
          onChanged();
        }
        if (!other.getUavSn().isEmpty()) {
          uavSn_ = other.uavSn_;
          onChanged();
        }
        if (!other.getUavVersion().isEmpty()) {
          uavVersion_ = other.uavVersion_;
          onChanged();
        }
        if (!other.getPtModel().isEmpty()) {
          ptModel_ = other.ptModel_;
          onChanged();
        }
        if (!other.getPtVersion().isEmpty()) {
          ptVersion_ = other.ptVersion_;
          onChanged();
        }
        if (other.getPtPosition() != 0) {
          setPtPosition(other.getPtPosition());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UavInitInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UavInitInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object uavModel_ = "";
      /**
       * <pre>
       *无人机型号	
       * </pre>
       *
       * <code>string uavModel = 1;</code>
       * @return The uavModel.
       */
      public String getUavModel() {
        Object ref = uavModel_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uavModel_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *无人机型号	
       * </pre>
       *
       * <code>string uavModel = 1;</code>
       * @return The bytes for uavModel.
       */
      public com.google.protobuf.ByteString
          getUavModelBytes() {
        Object ref = uavModel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uavModel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *无人机型号	
       * </pre>
       *
       * <code>string uavModel = 1;</code>
       * @param value The uavModel to set.
       * @return This builder for chaining.
       */
      public Builder setUavModel(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uavModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机型号	
       * </pre>
       *
       * <code>string uavModel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUavModel() {
        
        uavModel_ = getDefaultInstance().getUavModel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机型号	
       * </pre>
       *
       * <code>string uavModel = 1;</code>
       * @param value The bytes for uavModel to set.
       * @return This builder for chaining.
       */
      public Builder setUavModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uavModel_ = value;
        onChanged();
        return this;
      }

      private Object uavSn_ = "";
      /**
       * <pre>
       *无人机SN
       * </pre>
       *
       * <code>string uavSn = 2;</code>
       * @return The uavSn.
       */
      public String getUavSn() {
        Object ref = uavSn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uavSn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *无人机SN
       * </pre>
       *
       * <code>string uavSn = 2;</code>
       * @return The bytes for uavSn.
       */
      public com.google.protobuf.ByteString
          getUavSnBytes() {
        Object ref = uavSn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uavSn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *无人机SN
       * </pre>
       *
       * <code>string uavSn = 2;</code>
       * @param value The uavSn to set.
       * @return This builder for chaining.
       */
      public Builder setUavSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uavSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机SN
       * </pre>
       *
       * <code>string uavSn = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUavSn() {
        
        uavSn_ = getDefaultInstance().getUavSn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机SN
       * </pre>
       *
       * <code>string uavSn = 2;</code>
       * @param value The bytes for uavSn to set.
       * @return This builder for chaining.
       */
      public Builder setUavSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uavSn_ = value;
        onChanged();
        return this;
      }

      private Object uavVersion_ = "";
      /**
       * <pre>
       *无人机固件版本号
       * </pre>
       *
       * <code>string uavVersion = 3;</code>
       * @return The uavVersion.
       */
      public String getUavVersion() {
        Object ref = uavVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uavVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *无人机固件版本号
       * </pre>
       *
       * <code>string uavVersion = 3;</code>
       * @return The bytes for uavVersion.
       */
      public com.google.protobuf.ByteString
          getUavVersionBytes() {
        Object ref = uavVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uavVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *无人机固件版本号
       * </pre>
       *
       * <code>string uavVersion = 3;</code>
       * @param value The uavVersion to set.
       * @return This builder for chaining.
       */
      public Builder setUavVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uavVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机固件版本号
       * </pre>
       *
       * <code>string uavVersion = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUavVersion() {
        
        uavVersion_ = getDefaultInstance().getUavVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机固件版本号
       * </pre>
       *
       * <code>string uavVersion = 3;</code>
       * @param value The bytes for uavVersion to set.
       * @return This builder for chaining.
       */
      public Builder setUavVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uavVersion_ = value;
        onChanged();
        return this;
      }

      private Object ptModel_ = "";
      /**
       * <pre>
       *挂载相机型号	
       * </pre>
       *
       * <code>string ptModel = 4;</code>
       * @return The ptModel.
       */
      public String getPtModel() {
        Object ref = ptModel_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          ptModel_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *挂载相机型号	
       * </pre>
       *
       * <code>string ptModel = 4;</code>
       * @return The bytes for ptModel.
       */
      public com.google.protobuf.ByteString
          getPtModelBytes() {
        Object ref = ptModel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ptModel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *挂载相机型号	
       * </pre>
       *
       * <code>string ptModel = 4;</code>
       * @param value The ptModel to set.
       * @return This builder for chaining.
       */
      public Builder setPtModel(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ptModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载相机型号	
       * </pre>
       *
       * <code>string ptModel = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtModel() {
        
        ptModel_ = getDefaultInstance().getPtModel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载相机型号	
       * </pre>
       *
       * <code>string ptModel = 4;</code>
       * @param value The bytes for ptModel to set.
       * @return This builder for chaining.
       */
      public Builder setPtModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ptModel_ = value;
        onChanged();
        return this;
      }

      private Object ptVersion_ = "";
      /**
       * <pre>
       *挂载相机固件版本号
       * </pre>
       *
       * <code>string ptVersion = 5;</code>
       * @return The ptVersion.
       */
      public String getPtVersion() {
        Object ref = ptVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          ptVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *挂载相机固件版本号
       * </pre>
       *
       * <code>string ptVersion = 5;</code>
       * @return The bytes for ptVersion.
       */
      public com.google.protobuf.ByteString
          getPtVersionBytes() {
        Object ref = ptVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ptVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *挂载相机固件版本号
       * </pre>
       *
       * <code>string ptVersion = 5;</code>
       * @param value The ptVersion to set.
       * @return This builder for chaining.
       */
      public Builder setPtVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ptVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载相机固件版本号
       * </pre>
       *
       * <code>string ptVersion = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtVersion() {
        
        ptVersion_ = getDefaultInstance().getPtVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载相机固件版本号
       * </pre>
       *
       * <code>string ptVersion = 5;</code>
       * @param value The bytes for ptVersion to set.
       * @return This builder for chaining.
       */
      public Builder setPtVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ptVersion_ = value;
        onChanged();
        return this;
      }

      private int ptPosition_ ;
      /**
       * <pre>
       *挂载相机psdk口位置     
       * </pre>
       *
       * <code>uint32 ptPosition = 6;</code>
       * @return The ptPosition.
       */
      @Override
      public int getPtPosition() {
        return ptPosition_;
      }
      /**
       * <pre>
       *挂载相机psdk口位置     
       * </pre>
       *
       * <code>uint32 ptPosition = 6;</code>
       * @param value The ptPosition to set.
       * @return This builder for chaining.
       */
      public Builder setPtPosition(int value) {
        
        ptPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载相机psdk口位置     
       * </pre>
       *
       * <code>uint32 ptPosition = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtPosition() {
        
        ptPosition_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:UavInitInfo)
    }

    // @@protoc_insertion_point(class_scope:UavInitInfo)
    private static final UavInitInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UavInitInfo();
    }

    public static UavInitInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UavInitInfo>
        PARSER = new com.google.protobuf.AbstractParser<UavInitInfo>() {
      @Override
      public UavInitInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UavInitInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UavInitInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UavInitInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public UavInitInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PayloadStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PayloadState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * <code>.StickState stickState = 1;</code>
     * @return Whether the stickState field is set.
     */
    boolean hasStickState();
    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * <code>.StickState stickState = 1;</code>
     * @return The stickState.
     */
    StickState getStickState();
    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * <code>.StickState stickState = 1;</code>
     */
    StickStateOrBuilder getStickStateOrBuilder();

    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * <code>.ParachuteState parachuteState = 2;</code>
     * @return Whether the parachuteState field is set.
     */
    boolean hasParachuteState();
    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * <code>.ParachuteState parachuteState = 2;</code>
     * @return The parachuteState.
     */
    ParachuteState getParachuteState();
    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * <code>.ParachuteState parachuteState = 2;</code>
     */
    ParachuteStateOrBuilder getParachuteStateOrBuilder();

    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * <code>.SprayFireState sprayFireState = 3;</code>
     * @return Whether the sprayFireState field is set.
     */
    boolean hasSprayFireState();
    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * <code>.SprayFireState sprayFireState = 3;</code>
     * @return The sprayFireState.
     */
    SprayFireState getSprayFireState();
    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * <code>.SprayFireState sprayFireState = 3;</code>
     */
    SprayFireStateOrBuilder getSprayFireStateOrBuilder();
  }
  /**
   * <pre>
   *第三方负载状态信息,指令编号0xAA
   * </pre>
   *
   * Protobuf type {@code PayloadState}
   */
  public static final class PayloadState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PayloadState)
      PayloadStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PayloadState.newBuilder() to construct.
    private PayloadState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PayloadState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PayloadState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PayloadState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              StickState.Builder subBuilder = null;
              if (stickState_ != null) {
                subBuilder = stickState_.toBuilder();
              }
              stickState_ = input.readMessage(StickState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stickState_);
                stickState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              ParachuteState.Builder subBuilder = null;
              if (parachuteState_ != null) {
                subBuilder = parachuteState_.toBuilder();
              }
              parachuteState_ = input.readMessage(ParachuteState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parachuteState_);
                parachuteState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              SprayFireState.Builder subBuilder = null;
              if (sprayFireState_ != null) {
                subBuilder = sprayFireState_.toBuilder();
              }
              sprayFireState_ = input.readMessage(SprayFireState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sprayFireState_);
                sprayFireState_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_PayloadState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_PayloadState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PayloadState.class, Builder.class);
    }

    public static final int STICKSTATE_FIELD_NUMBER = 1;
    private StickState stickState_;
    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * <code>.StickState stickState = 1;</code>
     * @return Whether the stickState field is set.
     */
    @Override
    public boolean hasStickState() {
      return stickState_ != null;
    }
    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * <code>.StickState stickState = 1;</code>
     * @return The stickState.
     */
    @Override
    public StickState getStickState() {
      return stickState_ == null ? StickState.getDefaultInstance() : stickState_;
    }
    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * <code>.StickState stickState = 1;</code>
     */
    @Override
    public StickStateOrBuilder getStickStateOrBuilder() {
      return getStickState();
    }

    public static final int PARACHUTESTATE_FIELD_NUMBER = 2;
    private ParachuteState parachuteState_;
    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * <code>.ParachuteState parachuteState = 2;</code>
     * @return Whether the parachuteState field is set.
     */
    @Override
    public boolean hasParachuteState() {
      return parachuteState_ != null;
    }
    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * <code>.ParachuteState parachuteState = 2;</code>
     * @return The parachuteState.
     */
    @Override
    public ParachuteState getParachuteState() {
      return parachuteState_ == null ? ParachuteState.getDefaultInstance() : parachuteState_;
    }
    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * <code>.ParachuteState parachuteState = 2;</code>
     */
    @Override
    public ParachuteStateOrBuilder getParachuteStateOrBuilder() {
      return getParachuteState();
    }

    public static final int SPRAYFIRESTATE_FIELD_NUMBER = 3;
    private SprayFireState sprayFireState_;
    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * <code>.SprayFireState sprayFireState = 3;</code>
     * @return Whether the sprayFireState field is set.
     */
    @Override
    public boolean hasSprayFireState() {
      return sprayFireState_ != null;
    }
    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * <code>.SprayFireState sprayFireState = 3;</code>
     * @return The sprayFireState.
     */
    @Override
    public SprayFireState getSprayFireState() {
      return sprayFireState_ == null ? SprayFireState.getDefaultInstance() : sprayFireState_;
    }
    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * <code>.SprayFireState sprayFireState = 3;</code>
     */
    @Override
    public SprayFireStateOrBuilder getSprayFireStateOrBuilder() {
      return getSprayFireState();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stickState_ != null) {
        output.writeMessage(1, getStickState());
      }
      if (parachuteState_ != null) {
        output.writeMessage(2, getParachuteState());
      }
      if (sprayFireState_ != null) {
        output.writeMessage(3, getSprayFireState());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (stickState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStickState());
      }
      if (parachuteState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParachuteState());
      }
      if (sprayFireState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSprayFireState());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PayloadState)) {
        return super.equals(obj);
      }
      PayloadState other = (PayloadState) obj;

      if (hasStickState() != other.hasStickState()) return false;
      if (hasStickState()) {
        if (!getStickState()
            .equals(other.getStickState())) return false;
      }
      if (hasParachuteState() != other.hasParachuteState()) return false;
      if (hasParachuteState()) {
        if (!getParachuteState()
            .equals(other.getParachuteState())) return false;
      }
      if (hasSprayFireState() != other.hasSprayFireState()) return false;
      if (hasSprayFireState()) {
        if (!getSprayFireState()
            .equals(other.getSprayFireState())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStickState()) {
        hash = (37 * hash) + STICKSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getStickState().hashCode();
      }
      if (hasParachuteState()) {
        hash = (37 * hash) + PARACHUTESTATE_FIELD_NUMBER;
        hash = (53 * hash) + getParachuteState().hashCode();
      }
      if (hasSprayFireState()) {
        hash = (37 * hash) + SPRAYFIRESTATE_FIELD_NUMBER;
        hash = (53 * hash) + getSprayFireState().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PayloadState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PayloadState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PayloadState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PayloadState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PayloadState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PayloadState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PayloadState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PayloadState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PayloadState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PayloadState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PayloadState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PayloadState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PayloadState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *第三方负载状态信息,指令编号0xAA
     * </pre>
     *
     * Protobuf type {@code PayloadState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PayloadState)
        PayloadStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_PayloadState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_PayloadState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PayloadState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.PayloadState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (stickStateBuilder_ == null) {
          stickState_ = null;
        } else {
          stickState_ = null;
          stickStateBuilder_ = null;
        }
        if (parachuteStateBuilder_ == null) {
          parachuteState_ = null;
        } else {
          parachuteState_ = null;
          parachuteStateBuilder_ = null;
        }
        if (sprayFireStateBuilder_ == null) {
          sprayFireState_ = null;
        } else {
          sprayFireState_ = null;
          sprayFireStateBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_PayloadState_descriptor;
      }

      @Override
      public PayloadState getDefaultInstanceForType() {
        return PayloadState.getDefaultInstance();
      }

      @Override
      public PayloadState build() {
        PayloadState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PayloadState buildPartial() {
        PayloadState result = new PayloadState(this);
        if (stickStateBuilder_ == null) {
          result.stickState_ = stickState_;
        } else {
          result.stickState_ = stickStateBuilder_.build();
        }
        if (parachuteStateBuilder_ == null) {
          result.parachuteState_ = parachuteState_;
        } else {
          result.parachuteState_ = parachuteStateBuilder_.build();
        }
        if (sprayFireStateBuilder_ == null) {
          result.sprayFireState_ = sprayFireState_;
        } else {
          result.sprayFireState_ = sprayFireStateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PayloadState) {
          return mergeFrom((PayloadState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PayloadState other) {
        if (other == PayloadState.getDefaultInstance()) return this;
        if (other.hasStickState()) {
          mergeStickState(other.getStickState());
        }
        if (other.hasParachuteState()) {
          mergeParachuteState(other.getParachuteState());
        }
        if (other.hasSprayFireState()) {
          mergeSprayFireState(other.getSprayFireState());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PayloadState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PayloadState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private StickState stickState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          StickState, StickState.Builder, StickStateOrBuilder> stickStateBuilder_;
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       * @return Whether the stickState field is set.
       */
      public boolean hasStickState() {
        return stickStateBuilder_ != null || stickState_ != null;
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       * @return The stickState.
       */
      public StickState getStickState() {
        if (stickStateBuilder_ == null) {
          return stickState_ == null ? StickState.getDefaultInstance() : stickState_;
        } else {
          return stickStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      public Builder setStickState(StickState value) {
        if (stickStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stickState_ = value;
          onChanged();
        } else {
          stickStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      public Builder setStickState(
          StickState.Builder builderForValue) {
        if (stickStateBuilder_ == null) {
          stickState_ = builderForValue.build();
          onChanged();
        } else {
          stickStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      public Builder mergeStickState(StickState value) {
        if (stickStateBuilder_ == null) {
          if (stickState_ != null) {
            stickState_ =
              StickState.newBuilder(stickState_).mergeFrom(value).buildPartial();
          } else {
            stickState_ = value;
          }
          onChanged();
        } else {
          stickStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      public Builder clearStickState() {
        if (stickStateBuilder_ == null) {
          stickState_ = null;
          onChanged();
        } else {
          stickState_ = null;
          stickStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      public StickState.Builder getStickStateBuilder() {
        
        onChanged();
        return getStickStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      public StickStateOrBuilder getStickStateOrBuilder() {
        if (stickStateBuilder_ != null) {
          return stickStateBuilder_.getMessageOrBuilder();
        } else {
          return stickState_ == null ?
              StickState.getDefaultInstance() : stickState_;
        }
      }
      /**
       * <pre>
       *1808算力棒状态信息
       * </pre>
       *
       * <code>.StickState stickState = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          StickState, StickState.Builder, StickStateOrBuilder>
          getStickStateFieldBuilder() {
        if (stickStateBuilder_ == null) {
          stickStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              StickState, StickState.Builder, StickStateOrBuilder>(
                  getStickState(),
                  getParentForChildren(),
                  isClean());
          stickState_ = null;
        }
        return stickStateBuilder_;
      }

      private ParachuteState parachuteState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          ParachuteState, ParachuteState.Builder, ParachuteStateOrBuilder> parachuteStateBuilder_;
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       * @return Whether the parachuteState field is set.
       */
      public boolean hasParachuteState() {
        return parachuteStateBuilder_ != null || parachuteState_ != null;
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       * @return The parachuteState.
       */
      public ParachuteState getParachuteState() {
        if (parachuteStateBuilder_ == null) {
          return parachuteState_ == null ? ParachuteState.getDefaultInstance() : parachuteState_;
        } else {
          return parachuteStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      public Builder setParachuteState(ParachuteState value) {
        if (parachuteStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parachuteState_ = value;
          onChanged();
        } else {
          parachuteStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      public Builder setParachuteState(
          ParachuteState.Builder builderForValue) {
        if (parachuteStateBuilder_ == null) {
          parachuteState_ = builderForValue.build();
          onChanged();
        } else {
          parachuteStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      public Builder mergeParachuteState(ParachuteState value) {
        if (parachuteStateBuilder_ == null) {
          if (parachuteState_ != null) {
            parachuteState_ =
              ParachuteState.newBuilder(parachuteState_).mergeFrom(value).buildPartial();
          } else {
            parachuteState_ = value;
          }
          onChanged();
        } else {
          parachuteStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      public Builder clearParachuteState() {
        if (parachuteStateBuilder_ == null) {
          parachuteState_ = null;
          onChanged();
        } else {
          parachuteState_ = null;
          parachuteStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      public ParachuteState.Builder getParachuteStateBuilder() {
        
        onChanged();
        return getParachuteStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      public ParachuteStateOrBuilder getParachuteStateOrBuilder() {
        if (parachuteStateBuilder_ != null) {
          return parachuteStateBuilder_.getMessageOrBuilder();
        } else {
          return parachuteState_ == null ?
              ParachuteState.getDefaultInstance() : parachuteState_;
        }
      }
      /**
       * <pre>
       *小域降落伞状态信息
       * </pre>
       *
       * <code>.ParachuteState parachuteState = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ParachuteState, ParachuteState.Builder, ParachuteStateOrBuilder>
          getParachuteStateFieldBuilder() {
        if (parachuteStateBuilder_ == null) {
          parachuteStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ParachuteState, ParachuteState.Builder, ParachuteStateOrBuilder>(
                  getParachuteState(),
                  getParentForChildren(),
                  isClean());
          parachuteState_ = null;
        }
        return parachuteStateBuilder_;
      }

      private SprayFireState sprayFireState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SprayFireState, SprayFireState.Builder, SprayFireStateOrBuilder> sprayFireStateBuilder_;
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       * @return Whether the sprayFireState field is set.
       */
      public boolean hasSprayFireState() {
        return sprayFireStateBuilder_ != null || sprayFireState_ != null;
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       * @return The sprayFireState.
       */
      public SprayFireState getSprayFireState() {
        if (sprayFireStateBuilder_ == null) {
          return sprayFireState_ == null ? SprayFireState.getDefaultInstance() : sprayFireState_;
        } else {
          return sprayFireStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      public Builder setSprayFireState(SprayFireState value) {
        if (sprayFireStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sprayFireState_ = value;
          onChanged();
        } else {
          sprayFireStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      public Builder setSprayFireState(
          SprayFireState.Builder builderForValue) {
        if (sprayFireStateBuilder_ == null) {
          sprayFireState_ = builderForValue.build();
          onChanged();
        } else {
          sprayFireStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      public Builder mergeSprayFireState(SprayFireState value) {
        if (sprayFireStateBuilder_ == null) {
          if (sprayFireState_ != null) {
            sprayFireState_ =
              SprayFireState.newBuilder(sprayFireState_).mergeFrom(value).buildPartial();
          } else {
            sprayFireState_ = value;
          }
          onChanged();
        } else {
          sprayFireStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      public Builder clearSprayFireState() {
        if (sprayFireStateBuilder_ == null) {
          sprayFireState_ = null;
          onChanged();
        } else {
          sprayFireState_ = null;
          sprayFireStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      public SprayFireState.Builder getSprayFireStateBuilder() {
        
        onChanged();
        return getSprayFireStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      public SprayFireStateOrBuilder getSprayFireStateOrBuilder() {
        if (sprayFireStateBuilder_ != null) {
          return sprayFireStateBuilder_.getMessageOrBuilder();
        } else {
          return sprayFireState_ == null ?
              SprayFireState.getDefaultInstance() : sprayFireState_;
        }
      }
      /**
       * <pre>
       *喷火器状态信息
       * </pre>
       *
       * <code>.SprayFireState sprayFireState = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SprayFireState, SprayFireState.Builder, SprayFireStateOrBuilder>
          getSprayFireStateFieldBuilder() {
        if (sprayFireStateBuilder_ == null) {
          sprayFireStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SprayFireState, SprayFireState.Builder, SprayFireStateOrBuilder>(
                  getSprayFireState(),
                  getParentForChildren(),
                  isClean());
          sprayFireState_ = null;
        }
        return sprayFireStateBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PayloadState)
    }

    // @@protoc_insertion_point(class_scope:PayloadState)
    private static final PayloadState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PayloadState();
    }

    public static PayloadState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PayloadState>
        PARSER = new com.google.protobuf.AbstractParser<PayloadState>() {
      @Override
      public PayloadState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PayloadState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PayloadState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PayloadState> getParserForType() {
      return PARSER;
    }

    @Override
    public PayloadState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StickStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StickState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
     * </pre>
     *
     * <code>uint32 position = 2;</code>
     * @return The position.
     */
    int getPosition();

    /**
     * <pre>
     *AI开启标志 0：未开启 1：开启
     * </pre>
     *
     * <code>uint32 openAiFlag = 3;</code>
     * @return The openAiFlag.
     */
    int getOpenAiFlag();

    /**
     * <pre>
     *AI结果是否上报图片 0：未开启 1：开启
     * </pre>
     *
     * <code>uint32 openAiPhotoReport = 4;</code>
     * @return The openAiPhotoReport.
     */
    int getOpenAiPhotoReport();

    /**
     * <pre>
     *模型唯一编号
     * </pre>
     *
     * <code>string modelSn = 5;</code>
     * @return The modelSn.
     */
    String getModelSn();
    /**
     * <pre>
     *模型唯一编号
     * </pre>
     *
     * <code>string modelSn = 5;</code>
     * @return The bytes for modelSn.
     */
    com.google.protobuf.ByteString
        getModelSnBytes();

    /**
     * <pre>
     *可信度阈值
     * </pre>
     *
     * <code>float prob = 6;</code>
     * @return The prob.
     */
    float getProb();

    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @return A list containing the tags.
     */
    java.util.List<String>
        getTagsList();
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    String getTags(int index);
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);
  }
  /**
   * <pre>
   *1808算力棒状态信息
   * </pre>
   *
   * Protobuf type {@code StickState}
   */
  public static final class StickState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:StickState)
      StickStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StickState.newBuilder() to construct.
    private StickState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StickState() {
      modelSn_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new StickState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StickState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 16: {

              position_ = input.readUInt32();
              break;
            }
            case 24: {

              openAiFlag_ = input.readUInt32();
              break;
            }
            case 32: {

              openAiPhotoReport_ = input.readUInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              modelSn_ = s;
              break;
            }
            case 53: {

              prob_ = input.readFloat();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_StickState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_StickState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StickState.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private int position_;
    /**
     * <pre>
     *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
     * </pre>
     *
     * <code>uint32 position = 2;</code>
     * @return The position.
     */
    @Override
    public int getPosition() {
      return position_;
    }

    public static final int OPENAIFLAG_FIELD_NUMBER = 3;
    private int openAiFlag_;
    /**
     * <pre>
     *AI开启标志 0：未开启 1：开启
     * </pre>
     *
     * <code>uint32 openAiFlag = 3;</code>
     * @return The openAiFlag.
     */
    @Override
    public int getOpenAiFlag() {
      return openAiFlag_;
    }

    public static final int OPENAIPHOTOREPORT_FIELD_NUMBER = 4;
    private int openAiPhotoReport_;
    /**
     * <pre>
     *AI结果是否上报图片 0：未开启 1：开启
     * </pre>
     *
     * <code>uint32 openAiPhotoReport = 4;</code>
     * @return The openAiPhotoReport.
     */
    @Override
    public int getOpenAiPhotoReport() {
      return openAiPhotoReport_;
    }

    public static final int MODELSN_FIELD_NUMBER = 5;
    private volatile Object modelSn_;
    /**
     * <pre>
     *模型唯一编号
     * </pre>
     *
     * <code>string modelSn = 5;</code>
     * @return The modelSn.
     */
    @Override
    public String getModelSn() {
      Object ref = modelSn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        modelSn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *模型唯一编号
     * </pre>
     *
     * <code>string modelSn = 5;</code>
     * @return The bytes for modelSn.
     */
    @Override
    public com.google.protobuf.ByteString
        getModelSnBytes() {
      Object ref = modelSn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        modelSn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROB_FIELD_NUMBER = 6;
    private float prob_;
    /**
     * <pre>
     *可信度阈值
     * </pre>
     *
     * <code>float prob = 6;</code>
     * @return The prob.
     */
    @Override
    public float getProb() {
      return prob_;
    }

    public static final int TAGS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (position_ != 0) {
        output.writeUInt32(2, position_);
      }
      if (openAiFlag_ != 0) {
        output.writeUInt32(3, openAiFlag_);
      }
      if (openAiPhotoReport_ != 0) {
        output.writeUInt32(4, openAiPhotoReport_);
      }
      if (!getModelSnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, modelSn_);
      }
      if (prob_ != 0F) {
        output.writeFloat(6, prob_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, tags_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, position_);
      }
      if (openAiFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, openAiFlag_);
      }
      if (openAiPhotoReport_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, openAiPhotoReport_);
      }
      if (!getModelSnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, modelSn_);
      }
      if (prob_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, prob_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StickState)) {
        return super.equals(obj);
      }
      StickState other = (StickState) obj;

      if (getId()
          != other.getId()) return false;
      if (getPosition()
          != other.getPosition()) return false;
      if (getOpenAiFlag()
          != other.getOpenAiFlag()) return false;
      if (getOpenAiPhotoReport()
          != other.getOpenAiPhotoReport()) return false;
      if (!getModelSn()
          .equals(other.getModelSn())) return false;
      if (Float.floatToIntBits(getProb())
          != Float.floatToIntBits(
              other.getProb())) return false;
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + OPENAIFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getOpenAiFlag();
      hash = (37 * hash) + OPENAIPHOTOREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getOpenAiPhotoReport();
      hash = (37 * hash) + MODELSN_FIELD_NUMBER;
      hash = (53 * hash) + getModelSn().hashCode();
      hash = (37 * hash) + PROB_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getProb());
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StickState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StickState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StickState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StickState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StickState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StickState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StickState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StickState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StickState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StickState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StickState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StickState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StickState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *1808算力棒状态信息
     * </pre>
     *
     * Protobuf type {@code StickState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:StickState)
        StickStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_StickState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_StickState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StickState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.StickState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        position_ = 0;

        openAiFlag_ = 0;

        openAiPhotoReport_ = 0;

        modelSn_ = "";

        prob_ = 0F;

        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_StickState_descriptor;
      }

      @Override
      public StickState getDefaultInstanceForType() {
        return StickState.getDefaultInstance();
      }

      @Override
      public StickState build() {
        StickState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public StickState buildPartial() {
        StickState result = new StickState(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.position_ = position_;
        result.openAiFlag_ = openAiFlag_;
        result.openAiPhotoReport_ = openAiPhotoReport_;
        result.modelSn_ = modelSn_;
        result.prob_ = prob_;
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StickState) {
          return mergeFrom((StickState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StickState other) {
        if (other == StickState.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (other.getOpenAiFlag() != 0) {
          setOpenAiFlag(other.getOpenAiFlag());
        }
        if (other.getOpenAiPhotoReport() != 0) {
          setOpenAiPhotoReport(other.getOpenAiPhotoReport());
        }
        if (!other.getModelSn().isEmpty()) {
          modelSn_ = other.modelSn_;
          onChanged();
        }
        if (other.getProb() != 0F) {
          setProb(other.getProb());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StickState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StickState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @return The position.
       */
      @Override
      public int getPosition() {
        return position_;
      }
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private int openAiFlag_ ;
      /**
       * <pre>
       *AI开启标志 0：未开启 1：开启
       * </pre>
       *
       * <code>uint32 openAiFlag = 3;</code>
       * @return The openAiFlag.
       */
      @Override
      public int getOpenAiFlag() {
        return openAiFlag_;
      }
      /**
       * <pre>
       *AI开启标志 0：未开启 1：开启
       * </pre>
       *
       * <code>uint32 openAiFlag = 3;</code>
       * @param value The openAiFlag to set.
       * @return This builder for chaining.
       */
      public Builder setOpenAiFlag(int value) {
        
        openAiFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *AI开启标志 0：未开启 1：开启
       * </pre>
       *
       * <code>uint32 openAiFlag = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpenAiFlag() {
        
        openAiFlag_ = 0;
        onChanged();
        return this;
      }

      private int openAiPhotoReport_ ;
      /**
       * <pre>
       *AI结果是否上报图片 0：未开启 1：开启
       * </pre>
       *
       * <code>uint32 openAiPhotoReport = 4;</code>
       * @return The openAiPhotoReport.
       */
      @Override
      public int getOpenAiPhotoReport() {
        return openAiPhotoReport_;
      }
      /**
       * <pre>
       *AI结果是否上报图片 0：未开启 1：开启
       * </pre>
       *
       * <code>uint32 openAiPhotoReport = 4;</code>
       * @param value The openAiPhotoReport to set.
       * @return This builder for chaining.
       */
      public Builder setOpenAiPhotoReport(int value) {
        
        openAiPhotoReport_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *AI结果是否上报图片 0：未开启 1：开启
       * </pre>
       *
       * <code>uint32 openAiPhotoReport = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpenAiPhotoReport() {
        
        openAiPhotoReport_ = 0;
        onChanged();
        return this;
      }

      private Object modelSn_ = "";
      /**
       * <pre>
       *模型唯一编号
       * </pre>
       *
       * <code>string modelSn = 5;</code>
       * @return The modelSn.
       */
      public String getModelSn() {
        Object ref = modelSn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          modelSn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *模型唯一编号
       * </pre>
       *
       * <code>string modelSn = 5;</code>
       * @return The bytes for modelSn.
       */
      public com.google.protobuf.ByteString
          getModelSnBytes() {
        Object ref = modelSn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          modelSn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *模型唯一编号
       * </pre>
       *
       * <code>string modelSn = 5;</code>
       * @param value The modelSn to set.
       * @return This builder for chaining.
       */
      public Builder setModelSn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *模型唯一编号
       * </pre>
       *
       * <code>string modelSn = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearModelSn() {
        
        modelSn_ = getDefaultInstance().getModelSn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *模型唯一编号
       * </pre>
       *
       * <code>string modelSn = 5;</code>
       * @param value The bytes for modelSn to set.
       * @return This builder for chaining.
       */
      public Builder setModelSnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelSn_ = value;
        onChanged();
        return this;
      }

      private float prob_ ;
      /**
       * <pre>
       *可信度阈值
       * </pre>
       *
       * <code>float prob = 6;</code>
       * @return The prob.
       */
      @Override
      public float getProb() {
        return prob_;
      }
      /**
       * <pre>
       *可信度阈值
       * </pre>
       *
       * <code>float prob = 6;</code>
       * @param value The prob to set.
       * @return This builder for chaining.
       */
      public Builder setProb(float value) {
        
        prob_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *可信度阈值
       * </pre>
       *
       * <code>float prob = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearProb() {
        
        prob_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          Iterable<String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *识别标签状态 格式为:0-car 1-person 1-bicycle [0为未识别，1为识别中]
       * </pre>
       *
       * <code>repeated string tags = 7;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:StickState)
    }

    // @@protoc_insertion_point(class_scope:StickState)
    private static final StickState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StickState();
    }

    public static StickState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StickState>
        PARSER = new com.google.protobuf.AbstractParser<StickState>() {
      @Override
      public StickState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StickState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StickState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StickState> getParserForType() {
      return PARSER;
    }

    @Override
    public StickState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParachuteStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ParachuteState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
     * </pre>
     *
     * <code>uint32 position = 2;</code>
     * @return The position.
     */
    int getPosition();

    /**
     * <pre>
     *降落伞连接状态 0：未连接 1：已连接
     * </pre>
     *
     * <code>uint32 connectStatus = 3;</code>
     * @return The connectStatus.
     */
    int getConnectStatus();

    /**
     * <pre>
     *降落伞开启状态 0：未开伞 1：已开启
     * </pre>
     *
     * <code>uint32 isOpenFlag = 4;</code>
     * @return The isOpenFlag.
     */
    int getIsOpenFlag();
  }
  /**
   * <pre>
   *小域降落伞状态信息
   * </pre>
   *
   * Protobuf type {@code ParachuteState}
   */
  public static final class ParachuteState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ParachuteState)
      ParachuteStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParachuteState.newBuilder() to construct.
    private ParachuteState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParachuteState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParachuteState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParachuteState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 16: {

              position_ = input.readUInt32();
              break;
            }
            case 24: {

              connectStatus_ = input.readUInt32();
              break;
            }
            case 32: {

              isOpenFlag_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_ParachuteState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_ParachuteState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ParachuteState.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private int position_;
    /**
     * <pre>
     *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
     * </pre>
     *
     * <code>uint32 position = 2;</code>
     * @return The position.
     */
    @Override
    public int getPosition() {
      return position_;
    }

    public static final int CONNECTSTATUS_FIELD_NUMBER = 3;
    private int connectStatus_;
    /**
     * <pre>
     *降落伞连接状态 0：未连接 1：已连接
     * </pre>
     *
     * <code>uint32 connectStatus = 3;</code>
     * @return The connectStatus.
     */
    @Override
    public int getConnectStatus() {
      return connectStatus_;
    }

    public static final int ISOPENFLAG_FIELD_NUMBER = 4;
    private int isOpenFlag_;
    /**
     * <pre>
     *降落伞开启状态 0：未开伞 1：已开启
     * </pre>
     *
     * <code>uint32 isOpenFlag = 4;</code>
     * @return The isOpenFlag.
     */
    @Override
    public int getIsOpenFlag() {
      return isOpenFlag_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (position_ != 0) {
        output.writeUInt32(2, position_);
      }
      if (connectStatus_ != 0) {
        output.writeUInt32(3, connectStatus_);
      }
      if (isOpenFlag_ != 0) {
        output.writeUInt32(4, isOpenFlag_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, position_);
      }
      if (connectStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, connectStatus_);
      }
      if (isOpenFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, isOpenFlag_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ParachuteState)) {
        return super.equals(obj);
      }
      ParachuteState other = (ParachuteState) obj;

      if (getId()
          != other.getId()) return false;
      if (getPosition()
          != other.getPosition()) return false;
      if (getConnectStatus()
          != other.getConnectStatus()) return false;
      if (getIsOpenFlag()
          != other.getIsOpenFlag()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + CONNECTSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getConnectStatus();
      hash = (37 * hash) + ISOPENFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getIsOpenFlag();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ParachuteState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParachuteState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParachuteState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParachuteState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParachuteState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParachuteState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParachuteState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ParachuteState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ParachuteState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ParachuteState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ParachuteState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ParachuteState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ParachuteState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *小域降落伞状态信息
     * </pre>
     *
     * Protobuf type {@code ParachuteState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ParachuteState)
        ParachuteStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_ParachuteState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_ParachuteState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ParachuteState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.ParachuteState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        position_ = 0;

        connectStatus_ = 0;

        isOpenFlag_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_ParachuteState_descriptor;
      }

      @Override
      public ParachuteState getDefaultInstanceForType() {
        return ParachuteState.getDefaultInstance();
      }

      @Override
      public ParachuteState build() {
        ParachuteState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public ParachuteState buildPartial() {
        ParachuteState result = new ParachuteState(this);
        result.id_ = id_;
        result.position_ = position_;
        result.connectStatus_ = connectStatus_;
        result.isOpenFlag_ = isOpenFlag_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ParachuteState) {
          return mergeFrom((ParachuteState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ParachuteState other) {
        if (other == ParachuteState.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (other.getConnectStatus() != 0) {
          setConnectStatus(other.getConnectStatus());
        }
        if (other.getIsOpenFlag() != 0) {
          setIsOpenFlag(other.getIsOpenFlag());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ParachuteState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ParachuteState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @return The position.
       */
      @Override
      public int getPosition() {
        return position_;
      }
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private int connectStatus_ ;
      /**
       * <pre>
       *降落伞连接状态 0：未连接 1：已连接
       * </pre>
       *
       * <code>uint32 connectStatus = 3;</code>
       * @return The connectStatus.
       */
      @Override
      public int getConnectStatus() {
        return connectStatus_;
      }
      /**
       * <pre>
       *降落伞连接状态 0：未连接 1：已连接
       * </pre>
       *
       * <code>uint32 connectStatus = 3;</code>
       * @param value The connectStatus to set.
       * @return This builder for chaining.
       */
      public Builder setConnectStatus(int value) {
        
        connectStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *降落伞连接状态 0：未连接 1：已连接
       * </pre>
       *
       * <code>uint32 connectStatus = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectStatus() {
        
        connectStatus_ = 0;
        onChanged();
        return this;
      }

      private int isOpenFlag_ ;
      /**
       * <pre>
       *降落伞开启状态 0：未开伞 1：已开启
       * </pre>
       *
       * <code>uint32 isOpenFlag = 4;</code>
       * @return The isOpenFlag.
       */
      @Override
      public int getIsOpenFlag() {
        return isOpenFlag_;
      }
      /**
       * <pre>
       *降落伞开启状态 0：未开伞 1：已开启
       * </pre>
       *
       * <code>uint32 isOpenFlag = 4;</code>
       * @param value The isOpenFlag to set.
       * @return This builder for chaining.
       */
      public Builder setIsOpenFlag(int value) {
        
        isOpenFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *降落伞开启状态 0：未开伞 1：已开启
       * </pre>
       *
       * <code>uint32 isOpenFlag = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsOpenFlag() {
        
        isOpenFlag_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ParachuteState)
    }

    // @@protoc_insertion_point(class_scope:ParachuteState)
    private static final ParachuteState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ParachuteState();
    }

    public static ParachuteState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ParachuteState>
        PARSER = new com.google.protobuf.AbstractParser<ParachuteState>() {
      @Override
      public ParachuteState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParachuteState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParachuteState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ParachuteState> getParserForType() {
      return PARSER;
    }

    @Override
    public ParachuteState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SprayFireStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SprayFireState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
     * </pre>
     *
     * <code>uint32 position = 2;</code>
     * @return The position.
     */
    int getPosition();

    /**
     * <pre>
     *喷火开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 sprayState = 3;</code>
     * @return The sprayState.
     */
    int getSprayState();

    /**
     * <pre>
     *喷燃料开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 fuelState = 4;</code>
     * @return The fuelState.
     */
    int getFuelState();

    /**
     * <pre>
     *点火开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 ignitionState = 5;</code>
     * @return The ignitionState.
     */
    int getIgnitionState();

    /**
     * <pre>
     *解锁状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 lockState = 6;</code>
     * @return The lockState.
     */
    int getLockState();

    /**
     * <pre>
     *档位 0-无档位、1-1挡、2-2挡、3-3挡
     * </pre>
     *
     * <code>uint32 gear = 7;</code>
     * @return The gear.
     */
    int getGear();

    /**
     * <pre>
     *激光开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 laserState = 8;</code>
     * @return The laserState.
     */
    int getLaserState();

    /**
     * <pre>
     *加压状态 0：未加压 1：加压中
     * </pre>
     *
     * <code>uint32 pressState = 9;</code>
     * @return The pressState.
     */
    int getPressState();

    /**
     * <pre>
     *喷火时间[单位：秒]
     * </pre>
     *
     * <code>uint32 fireTime = 10;</code>
     * @return The fireTime.
     */
    int getFireTime();

    /**
     * <pre>
     *扩展遥控连接状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 extendRc = 11;</code>
     * @return The extendRc.
     */
    int getExtendRc();

    /**
     * <pre>
     *卡扣状态 0：未到位 1：已到位
     * </pre>
     *
     * <code>uint32 claspState = 12;</code>
     * @return The claspState.
     */
    int getClaspState();
  }
  /**
   * <pre>
   *喷火器状态信息
   * </pre>
   *
   * Protobuf type {@code SprayFireState}
   */
  public static final class SprayFireState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SprayFireState)
      SprayFireStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SprayFireState.newBuilder() to construct.
    private SprayFireState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SprayFireState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SprayFireState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SprayFireState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 16: {

              position_ = input.readUInt32();
              break;
            }
            case 24: {

              sprayState_ = input.readUInt32();
              break;
            }
            case 32: {

              fuelState_ = input.readUInt32();
              break;
            }
            case 40: {

              ignitionState_ = input.readUInt32();
              break;
            }
            case 48: {

              lockState_ = input.readUInt32();
              break;
            }
            case 56: {

              gear_ = input.readUInt32();
              break;
            }
            case 64: {

              laserState_ = input.readUInt32();
              break;
            }
            case 72: {

              pressState_ = input.readUInt32();
              break;
            }
            case 80: {

              fireTime_ = input.readUInt32();
              break;
            }
            case 88: {

              extendRc_ = input.readUInt32();
              break;
            }
            case 96: {

              claspState_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TyjwProtoBuf.internal_static_SprayFireState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TyjwProtoBuf.internal_static_SprayFireState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SprayFireState.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private int position_;
    /**
     * <pre>
     *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
     * </pre>
     *
     * <code>uint32 position = 2;</code>
     * @return The position.
     */
    @Override
    public int getPosition() {
      return position_;
    }

    public static final int SPRAYSTATE_FIELD_NUMBER = 3;
    private int sprayState_;
    /**
     * <pre>
     *喷火开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 sprayState = 3;</code>
     * @return The sprayState.
     */
    @Override
    public int getSprayState() {
      return sprayState_;
    }

    public static final int FUELSTATE_FIELD_NUMBER = 4;
    private int fuelState_;
    /**
     * <pre>
     *喷燃料开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 fuelState = 4;</code>
     * @return The fuelState.
     */
    @Override
    public int getFuelState() {
      return fuelState_;
    }

    public static final int IGNITIONSTATE_FIELD_NUMBER = 5;
    private int ignitionState_;
    /**
     * <pre>
     *点火开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 ignitionState = 5;</code>
     * @return The ignitionState.
     */
    @Override
    public int getIgnitionState() {
      return ignitionState_;
    }

    public static final int LOCKSTATE_FIELD_NUMBER = 6;
    private int lockState_;
    /**
     * <pre>
     *解锁状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 lockState = 6;</code>
     * @return The lockState.
     */
    @Override
    public int getLockState() {
      return lockState_;
    }

    public static final int GEAR_FIELD_NUMBER = 7;
    private int gear_;
    /**
     * <pre>
     *档位 0-无档位、1-1挡、2-2挡、3-3挡
     * </pre>
     *
     * <code>uint32 gear = 7;</code>
     * @return The gear.
     */
    @Override
    public int getGear() {
      return gear_;
    }

    public static final int LASERSTATE_FIELD_NUMBER = 8;
    private int laserState_;
    /**
     * <pre>
     *激光开关状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 laserState = 8;</code>
     * @return The laserState.
     */
    @Override
    public int getLaserState() {
      return laserState_;
    }

    public static final int PRESSSTATE_FIELD_NUMBER = 9;
    private int pressState_;
    /**
     * <pre>
     *加压状态 0：未加压 1：加压中
     * </pre>
     *
     * <code>uint32 pressState = 9;</code>
     * @return The pressState.
     */
    @Override
    public int getPressState() {
      return pressState_;
    }

    public static final int FIRETIME_FIELD_NUMBER = 10;
    private int fireTime_;
    /**
     * <pre>
     *喷火时间[单位：秒]
     * </pre>
     *
     * <code>uint32 fireTime = 10;</code>
     * @return The fireTime.
     */
    @Override
    public int getFireTime() {
      return fireTime_;
    }

    public static final int EXTENDRC_FIELD_NUMBER = 11;
    private int extendRc_;
    /**
     * <pre>
     *扩展遥控连接状态 0：关闭 1：打开
     * </pre>
     *
     * <code>uint32 extendRc = 11;</code>
     * @return The extendRc.
     */
    @Override
    public int getExtendRc() {
      return extendRc_;
    }

    public static final int CLASPSTATE_FIELD_NUMBER = 12;
    private int claspState_;
    /**
     * <pre>
     *卡扣状态 0：未到位 1：已到位
     * </pre>
     *
     * <code>uint32 claspState = 12;</code>
     * @return The claspState.
     */
    @Override
    public int getClaspState() {
      return claspState_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (position_ != 0) {
        output.writeUInt32(2, position_);
      }
      if (sprayState_ != 0) {
        output.writeUInt32(3, sprayState_);
      }
      if (fuelState_ != 0) {
        output.writeUInt32(4, fuelState_);
      }
      if (ignitionState_ != 0) {
        output.writeUInt32(5, ignitionState_);
      }
      if (lockState_ != 0) {
        output.writeUInt32(6, lockState_);
      }
      if (gear_ != 0) {
        output.writeUInt32(7, gear_);
      }
      if (laserState_ != 0) {
        output.writeUInt32(8, laserState_);
      }
      if (pressState_ != 0) {
        output.writeUInt32(9, pressState_);
      }
      if (fireTime_ != 0) {
        output.writeUInt32(10, fireTime_);
      }
      if (extendRc_ != 0) {
        output.writeUInt32(11, extendRc_);
      }
      if (claspState_ != 0) {
        output.writeUInt32(12, claspState_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, position_);
      }
      if (sprayState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sprayState_);
      }
      if (fuelState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, fuelState_);
      }
      if (ignitionState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ignitionState_);
      }
      if (lockState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, lockState_);
      }
      if (gear_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, gear_);
      }
      if (laserState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, laserState_);
      }
      if (pressState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, pressState_);
      }
      if (fireTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, fireTime_);
      }
      if (extendRc_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, extendRc_);
      }
      if (claspState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, claspState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SprayFireState)) {
        return super.equals(obj);
      }
      SprayFireState other = (SprayFireState) obj;

      if (getId()
          != other.getId()) return false;
      if (getPosition()
          != other.getPosition()) return false;
      if (getSprayState()
          != other.getSprayState()) return false;
      if (getFuelState()
          != other.getFuelState()) return false;
      if (getIgnitionState()
          != other.getIgnitionState()) return false;
      if (getLockState()
          != other.getLockState()) return false;
      if (getGear()
          != other.getGear()) return false;
      if (getLaserState()
          != other.getLaserState()) return false;
      if (getPressState()
          != other.getPressState()) return false;
      if (getFireTime()
          != other.getFireTime()) return false;
      if (getExtendRc()
          != other.getExtendRc()) return false;
      if (getClaspState()
          != other.getClaspState()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + SPRAYSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getSprayState();
      hash = (37 * hash) + FUELSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getFuelState();
      hash = (37 * hash) + IGNITIONSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getIgnitionState();
      hash = (37 * hash) + LOCKSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getLockState();
      hash = (37 * hash) + GEAR_FIELD_NUMBER;
      hash = (53 * hash) + getGear();
      hash = (37 * hash) + LASERSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getLaserState();
      hash = (37 * hash) + PRESSSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getPressState();
      hash = (37 * hash) + FIRETIME_FIELD_NUMBER;
      hash = (53 * hash) + getFireTime();
      hash = (37 * hash) + EXTENDRC_FIELD_NUMBER;
      hash = (53 * hash) + getExtendRc();
      hash = (37 * hash) + CLASPSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getClaspState();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SprayFireState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SprayFireState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SprayFireState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SprayFireState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SprayFireState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SprayFireState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SprayFireState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SprayFireState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SprayFireState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SprayFireState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SprayFireState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SprayFireState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SprayFireState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *喷火器状态信息
     * </pre>
     *
     * Protobuf type {@code SprayFireState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SprayFireState)
        SprayFireStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TyjwProtoBuf.internal_static_SprayFireState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TyjwProtoBuf.internal_static_SprayFireState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SprayFireState.class, Builder.class);
      }

      // Construct using TyjwProtoBuf.SprayFireState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        position_ = 0;

        sprayState_ = 0;

        fuelState_ = 0;

        ignitionState_ = 0;

        lockState_ = 0;

        gear_ = 0;

        laserState_ = 0;

        pressState_ = 0;

        fireTime_ = 0;

        extendRc_ = 0;

        claspState_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TyjwProtoBuf.internal_static_SprayFireState_descriptor;
      }

      @Override
      public SprayFireState getDefaultInstanceForType() {
        return SprayFireState.getDefaultInstance();
      }

      @Override
      public SprayFireState build() {
        SprayFireState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SprayFireState buildPartial() {
        SprayFireState result = new SprayFireState(this);
        result.id_ = id_;
        result.position_ = position_;
        result.sprayState_ = sprayState_;
        result.fuelState_ = fuelState_;
        result.ignitionState_ = ignitionState_;
        result.lockState_ = lockState_;
        result.gear_ = gear_;
        result.laserState_ = laserState_;
        result.pressState_ = pressState_;
        result.fireTime_ = fireTime_;
        result.extendRc_ = extendRc_;
        result.claspState_ = claspState_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SprayFireState) {
          return mergeFrom((SprayFireState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SprayFireState other) {
        if (other == SprayFireState.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (other.getSprayState() != 0) {
          setSprayState(other.getSprayState());
        }
        if (other.getFuelState() != 0) {
          setFuelState(other.getFuelState());
        }
        if (other.getIgnitionState() != 0) {
          setIgnitionState(other.getIgnitionState());
        }
        if (other.getLockState() != 0) {
          setLockState(other.getLockState());
        }
        if (other.getGear() != 0) {
          setGear(other.getGear());
        }
        if (other.getLaserState() != 0) {
          setLaserState(other.getLaserState());
        }
        if (other.getPressState() != 0) {
          setPressState(other.getPressState());
        }
        if (other.getFireTime() != 0) {
          setFireTime(other.getFireTime());
        }
        if (other.getExtendRc() != 0) {
          setExtendRc(other.getExtendRc());
        }
        if (other.getClaspState() != 0) {
          setClaspState(other.getClaspState());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SprayFireState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SprayFireState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @return The position.
       */
      @Override
      public int getPosition() {
        return position_;
      }
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂载位置：1-psdk1 2-psdk2 3-psdk3 4-usb1 5-usb2
       * </pre>
       *
       * <code>uint32 position = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private int sprayState_ ;
      /**
       * <pre>
       *喷火开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 sprayState = 3;</code>
       * @return The sprayState.
       */
      @Override
      public int getSprayState() {
        return sprayState_;
      }
      /**
       * <pre>
       *喷火开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 sprayState = 3;</code>
       * @param value The sprayState to set.
       * @return This builder for chaining.
       */
      public Builder setSprayState(int value) {
        
        sprayState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *喷火开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 sprayState = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSprayState() {
        
        sprayState_ = 0;
        onChanged();
        return this;
      }

      private int fuelState_ ;
      /**
       * <pre>
       *喷燃料开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 fuelState = 4;</code>
       * @return The fuelState.
       */
      @Override
      public int getFuelState() {
        return fuelState_;
      }
      /**
       * <pre>
       *喷燃料开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 fuelState = 4;</code>
       * @param value The fuelState to set.
       * @return This builder for chaining.
       */
      public Builder setFuelState(int value) {
        
        fuelState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *喷燃料开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 fuelState = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFuelState() {
        
        fuelState_ = 0;
        onChanged();
        return this;
      }

      private int ignitionState_ ;
      /**
       * <pre>
       *点火开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 ignitionState = 5;</code>
       * @return The ignitionState.
       */
      @Override
      public int getIgnitionState() {
        return ignitionState_;
      }
      /**
       * <pre>
       *点火开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 ignitionState = 5;</code>
       * @param value The ignitionState to set.
       * @return This builder for chaining.
       */
      public Builder setIgnitionState(int value) {
        
        ignitionState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *点火开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 ignitionState = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIgnitionState() {
        
        ignitionState_ = 0;
        onChanged();
        return this;
      }

      private int lockState_ ;
      /**
       * <pre>
       *解锁状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 lockState = 6;</code>
       * @return The lockState.
       */
      @Override
      public int getLockState() {
        return lockState_;
      }
      /**
       * <pre>
       *解锁状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 lockState = 6;</code>
       * @param value The lockState to set.
       * @return This builder for chaining.
       */
      public Builder setLockState(int value) {
        
        lockState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *解锁状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 lockState = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLockState() {
        
        lockState_ = 0;
        onChanged();
        return this;
      }

      private int gear_ ;
      /**
       * <pre>
       *档位 0-无档位、1-1挡、2-2挡、3-3挡
       * </pre>
       *
       * <code>uint32 gear = 7;</code>
       * @return The gear.
       */
      @Override
      public int getGear() {
        return gear_;
      }
      /**
       * <pre>
       *档位 0-无档位、1-1挡、2-2挡、3-3挡
       * </pre>
       *
       * <code>uint32 gear = 7;</code>
       * @param value The gear to set.
       * @return This builder for chaining.
       */
      public Builder setGear(int value) {
        
        gear_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *档位 0-无档位、1-1挡、2-2挡、3-3挡
       * </pre>
       *
       * <code>uint32 gear = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearGear() {
        
        gear_ = 0;
        onChanged();
        return this;
      }

      private int laserState_ ;
      /**
       * <pre>
       *激光开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 laserState = 8;</code>
       * @return The laserState.
       */
      @Override
      public int getLaserState() {
        return laserState_;
      }
      /**
       * <pre>
       *激光开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 laserState = 8;</code>
       * @param value The laserState to set.
       * @return This builder for chaining.
       */
      public Builder setLaserState(int value) {
        
        laserState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *激光开关状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 laserState = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserState() {
        
        laserState_ = 0;
        onChanged();
        return this;
      }

      private int pressState_ ;
      /**
       * <pre>
       *加压状态 0：未加压 1：加压中
       * </pre>
       *
       * <code>uint32 pressState = 9;</code>
       * @return The pressState.
       */
      @Override
      public int getPressState() {
        return pressState_;
      }
      /**
       * <pre>
       *加压状态 0：未加压 1：加压中
       * </pre>
       *
       * <code>uint32 pressState = 9;</code>
       * @param value The pressState to set.
       * @return This builder for chaining.
       */
      public Builder setPressState(int value) {
        
        pressState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *加压状态 0：未加压 1：加压中
       * </pre>
       *
       * <code>uint32 pressState = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressState() {
        
        pressState_ = 0;
        onChanged();
        return this;
      }

      private int fireTime_ ;
      /**
       * <pre>
       *喷火时间[单位：秒]
       * </pre>
       *
       * <code>uint32 fireTime = 10;</code>
       * @return The fireTime.
       */
      @Override
      public int getFireTime() {
        return fireTime_;
      }
      /**
       * <pre>
       *喷火时间[单位：秒]
       * </pre>
       *
       * <code>uint32 fireTime = 10;</code>
       * @param value The fireTime to set.
       * @return This builder for chaining.
       */
      public Builder setFireTime(int value) {
        
        fireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *喷火时间[单位：秒]
       * </pre>
       *
       * <code>uint32 fireTime = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFireTime() {
        
        fireTime_ = 0;
        onChanged();
        return this;
      }

      private int extendRc_ ;
      /**
       * <pre>
       *扩展遥控连接状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 extendRc = 11;</code>
       * @return The extendRc.
       */
      @Override
      public int getExtendRc() {
        return extendRc_;
      }
      /**
       * <pre>
       *扩展遥控连接状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 extendRc = 11;</code>
       * @param value The extendRc to set.
       * @return This builder for chaining.
       */
      public Builder setExtendRc(int value) {
        
        extendRc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展遥控连接状态 0：关闭 1：打开
       * </pre>
       *
       * <code>uint32 extendRc = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearExtendRc() {
        
        extendRc_ = 0;
        onChanged();
        return this;
      }

      private int claspState_ ;
      /**
       * <pre>
       *卡扣状态 0：未到位 1：已到位
       * </pre>
       *
       * <code>uint32 claspState = 12;</code>
       * @return The claspState.
       */
      @Override
      public int getClaspState() {
        return claspState_;
      }
      /**
       * <pre>
       *卡扣状态 0：未到位 1：已到位
       * </pre>
       *
       * <code>uint32 claspState = 12;</code>
       * @param value The claspState to set.
       * @return This builder for chaining.
       */
      public Builder setClaspState(int value) {
        
        claspState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卡扣状态 0：未到位 1：已到位
       * </pre>
       *
       * <code>uint32 claspState = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaspState() {
        
        claspState_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SprayFireState)
    }

    // @@protoc_insertion_point(class_scope:SprayFireState)
    private static final SprayFireState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SprayFireState();
    }

    public static SprayFireState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SprayFireState>
        PARSER = new com.google.protobuf.AbstractParser<SprayFireState>() {
      @Override
      public SprayFireState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SprayFireState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SprayFireState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SprayFireState> getParserForType() {
      return PARSER;
    }

    @Override
    public SprayFireState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TelemetryData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TelemetryData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TelemetryList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TelemetryList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SignalInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SignalInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SignalList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SignalList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UavState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UavState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FlightControllerState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FlightControllerState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BatteryState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BatteryState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BatteryStateInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BatteryStateInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PtzState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PtzState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CameraState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CameraState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MissionState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MissionState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BreakPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BreakPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AvoidanceData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AvoidanceData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HmsAlarmData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HmsAlarmData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UavStateList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UavStateList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlanLineData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlanLineData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PointData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PointData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PointAction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PointAction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HangarPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HangarPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NormalModel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NormalModel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SurroundModel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SurroundModel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UavInitInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UavInitInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PayloadState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PayloadState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_StickState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_StickState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ParachuteState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ParachuteState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SprayFireState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SprayFireState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\032TelemetryDataBuf-new.proto\"\337\005\n\rTelemet" +
      "ryData\022\013\n\003lng\030\001 \001(\001\022\013\n\003lat\030\002 \001(\001\022\020\n\010alti" +
      "tude\030\003 \001(\002\022\022\n\nultrasonic\030\004 \001(\002\022\r\n\005pitch\030" +
      "\005 \001(\002\022\014\n\004roll\030\006 \001(\002\022\013\n\003yaw\030\007 \001(\002\022\020\n\010airs" +
      "peed\030\010 \001(\002\022\020\n\010velocity\030\t \001(\002\022\021\n\ttimestam" +
      "p\030\n \001(\004\022\017\n\007ptpitch\030\013 \001(\002\022\016\n\006ptroll\030\014 \001(\002" +
      "\022\r\n\005ptyaw\030\r \001(\002\022\022\n\nzoomfactor\030\016 \001(\002\022\r\n\005b" +
      "oxSn\030\017 \001(\t\022\024\n\014batteryPower\030\020 \001(\t\022\026\n\016sate" +
      "lliteCount\030\021 \001(\r\022\016\n\006taskId\030\022 \001(\004\022\016\n\006rtkL" +
      "ng\030\023 \001(\001\022\016\n\006rtkLat\030\024 \001(\001\022\017\n\007rtkHFSL\030\025 \001(" +
      "\002\022\027\n\017rtkPositionInfo\030\026 \001(\r\022\023\n\013airFlyTime" +
      "s\030\027 \001(\r\022\026\n\016airFlyDistance\030\030 \001(\002\022\r\n\005uavSn" +
      "\030\031 \001(\t\022\020\n\010uavModel\030\032 \001(\t\022\021\n\thomeRange\030\033 " +
      "\001(\002\022\022\n\nflightMode\030\034 \001(\r\022\026\n\016targetDistanc" +
      "e\030\035 \001(\002\022\026\n\016predictFlyTime\030\036 \001(\r\022\025\n\rultra" +
      "sonicMax\030\037 \001(\002\022\025\n\rultrasonicMin\030  \001(\002\022\021\n" +
      "\txVelocity\030! \001(\002\022\021\n\tyVelocity\030\" \001(\002\022\021\n\tz" +
      "Velocity\030# \001(\002\022\017\n\007boxName\030$ \001(\t\022\027\n\017predi" +
      "ctFlyTimes\030% \001(\r\022\034\n\024predictGohomeBattery" +
      "\030& \001(\r\"6\n\rTelemetryList\022%\n\rtelemetryList" +
      "\030\001 \003(\0132\016.TelemetryData\"\344\004\n\nSignalInfo\022\014\n" +
      "\004mode\030\001 \001(\t\022\013\n\003mcc\030\002 \001(\t\022\013\n\003mnc\030\003 \001(\t\022\016\n" +
      "\006cellid\030\004 \001(\t\022\014\n\004pcid\030\005 \001(\t\022\013\n\003tac\030\006 \001(\t" +
      "\022\r\n\005arfcn\030\007 \001(\t\022\014\n\004band\030\010 \001(\t\022\027\n\017nr_dl_b" +
      "andwidth\030\t \001(\t\022\014\n\004rsrp\030\n \001(\t\022\014\n\004rsrq\030\013 \001" +
      "(\t\022\014\n\004sinr\030\014 \001(\t\022\020\n\010tx_power\030\r \001(\t\022\016\n\006sr" +
      "xlev\030\016 \001(\t\022\013\n\003cqi\030\017 \001(\t\022\016\n\006earfcn\030\020 \001(\t\022" +
      "\025\n\rfreq_band_ind\030\021 \001(\t\022\024\n\014ul_bandwidth\030\022" +
      " \001(\t\022\024\n\014dl_bandwidth\030\023 \001(\t\022\016\n\006is_tdd\030\024 \001" +
      "(\t\022\014\n\004rssi\030\025 \001(\t\022\023\n\013duplex_mode\030\026 \001(\t\022\013\n" +
      "\003lng\030\027 \001(\001\022\013\n\003lat\030\030 \001(\001\022\016\n\006height\030\031 \001(\002\022" +
      "\021\n\ttimestamp\030\032 \001(\r\022\020\n\010boxstate\030\033 \001(\r\022\013\n\003" +
      "isp\030\034 \001(\t\022\017\n\007tempMax\030\035 \001(\005\022\020\n\010prx_rsrp\030\036" +
      " \001(\t\022\020\n\010drx_rsrp\030\037 \001(\t\022\020\n\010rx2_rsrp\030  \001(\t" +
      "\022\020\n\010rx3_rsrp\030! \001(\t\022\016\n\006box_sn\030\" \001(\t\022\024\n\014si" +
      "m_use_seat\030# \001(\r\022\023\n\013networkMode\030$ \001(\r\"-\n" +
      "\nSignalList\022\037\n\nsignalInfo\030\001 \003(\0132\013.Signal" +
      "Info\"\271\002\n\010UavState\0225\n\025flightControllerSta" +
      "te\030\001 \001(\0132\026.FlightControllerState\022#\n\014batt" +
      "eryState\030\002 \001(\0132\r.BatteryState\022\033\n\010ptzStat" +
      "e\030\003 \001(\0132\t.PtzState\022!\n\013cameraState\030\004 \001(\0132" +
      "\014.CameraState\022#\n\014missionState\030\005 \001(\0132\r.Mi" +
      "ssionState\022\r\n\005boxSn\030\006 \001(\t\022%\n\ravoidanceDa" +
      "ta\030\007 \001(\0132\016.AvoidanceData\022#\n\014hmsAlarmData" +
      "\030\010 \003(\0132\r.HmsAlarmData\022\021\n\ttimestamp\030\t \001(\004" +
      "\"\304\003\n\025FlightControllerState\022\026\n\016satelliteC" +
      "ount\030\001 \001(\r\022\026\n\016gpsSignalLevel\030\002 \001(\r\022\022\n\nfl" +
      "ightMode\030\003 \001(\r\022\024\n\014flightStatus\030\004 \001(\r\022\036\n\n" +
      "startPoint\030\005 \001(\0132\n.PointData\022\035\n\thomePoin" +
      "t\030\006 \001(\0132\n.PointData\022\022\n\nhomeHeight\030\007 \001(\005\022" +
      "\020\n\010safeLine\030\010 \001(\r\022\024\n\014deviceStatus\030\t \001(\r\022" +
      "\024\n\014uwbNodeCount\030\n \001(\r\022\016\n\006rcMode\030\013 \001(\t\022\033\n" +
      "\023isEmergencyBrakeing\030\014 \001(\r\022\026\n\016outFlyArea" +
      "Flag\030\r \001(\r\022\027\n\017inNoFlyAreaFlag\030\016 \001(\r\022\037\n\013t" +
      "argetPoint\030\017 \001(\0132\n.PointData\022\025\n\rbatteryG" +
      "ohome\030\020 \001(\r\022\025\n\rautoLowGohome\030\021 \001(\r\022\023\n\013rc" +
      "Connected\030\022 \001(\r\"\253\001\n\014BatteryState\022\022\n\nbatt" +
      "eryNum\030\001 \001(\r\022\024\n\014batteryPower\030\002 \001(\t\022\026\n\016ba" +
      "tteryVoltage\030\003 \001(\t\022+\n\020firstBatteryInfo\030\004" +
      " \001(\0132\021.BatteryStateInfo\022,\n\021secondBattery" +
      "Info\030\005 \001(\0132\021.BatteryStateInfo\"\271\002\n\020Batter" +
      "yStateInfo\022\026\n\016isBatteryEmbed\030\001 \001(\r\022\036\n\026ba" +
      "tteryCapacityPercent\030\002 \001(\r\022\026\n\016currentVol" +
      "tage\030\003 \001(\005\022\027\n\017currentElectric\030\004 \001(\005\022\024\n\014f" +
      "ullCapacity\030\005 \001(\r\022\030\n\020remainedCapacity\030\006 " +
      "\001(\r\022\032\n\022batteryTemperature\030\007 \001(\002\022\021\n\tcellC" +
      "ount\030\010 \001(\r\022\023\n\013batSOHState\030\t \001(\r\022\013\n\003sop\030\n" +
      " \001(\r\022\021\n\theatState\030\013 \001(\r\022\020\n\010socState\030\014 \001(" +
      "\r\022\026\n\016selfCheckError\030\r \001(\r\"H\n\010PtzState\022\r\n" +
      "\005pitch\030\001 \001(\002\022\014\n\004roll\030\002 \001(\002\022\013\n\003yaw\030\003 \001(\002\022" +
      "\022\n\ngimbalMode\030\004 \001(\r\"\321\002\n\013CameraState\022\014\n\004m" +
      "ode\030\001 \001(\r\022\023\n\013isRecording\030\002 \001(\r\022\026\n\016record" +
      "Duration\030\003 \001(\r\022\016\n\006source\030\004 \001(\r\022\016\n\006camera" +
      "\030\005 \001(\r\022\022\n\nzoomfactor\030\006 \001(\002\022\r\n\005width\030\007 \001(" +
      "\r\022\016\n\006height\030\010 \001(\r\022\021\n\tframeRate\030\t \001(\r\022\021\n\t" +
      "bitstream\030\n \001(\r\022\033\n\023pointThermometrying\030\013" +
      " \001(\r\022\032\n\022areaThermometrying\030\014 \001(\r\022\024\n\014lase" +
      "rRanging\030\r \001(\r\022\024\n\014storePercent\030\016 \001(\002\022\022\n\n" +
      "totalPhoto\030\017 \001(\r\022\025\n\rremainedPhoto\030\020 \001(\r\"" +
      "\364\002\n\014MissionState\022\017\n\007isPause\030\001 \001(\r\022\033\n\023tar" +
      "getWaypointIndex\030\002 \001(\r\022\032\n\022isWaypointFini" +
      "shed\030\003 \001(\r\022\021\n\tpushVideo\030\004 \001(\r\022\016\n\006lock4g\030" +
      "\005 \001(\r\022\020\n\010boxModel\030\006 \001(\r\022\017\n\007mapPlay\030\007 \001(\r" +
      "\022\022\n\nloseAction\030\010 \001(\r\022\026\n\016isPointControl\030\t" +
      " \001(\r\022\024\n\014isUwbLanding\030\n \001(\r\022\026\n\016isPushVide" +
      "oing\030\013 \001(\r\022\022\n\nisDLanding\030\014 \001(\r\022\026\n\016percep" +
      "tionFlag\030\r \001(\r\022\031\n\021isPositionControl\030\016 \001(" +
      "\r\022\022\n\nsendImgRtp\030\017 \001(\r\022\037\n\nbreakPoint\030\020 \001(" +
      "\0132\013.BreakPoint\"e\n\nBreakPoint\022\016\n\006status\030\001" +
      " \001(\r\022\r\n\005point\030\002 \001(\r\022\013\n\003lng\030\003 \001(\001\022\013\n\003lat\030" +
      "\004 \001(\001\022\016\n\006height\030\005 \001(\002\022\016\n\006taskId\030\006 \001(\004\"\310\002" +
      "\n\rAvoidanceData\022\022\n\ndownHealth\030\001 \001(\r\022\014\n\004d" +
      "own\030\002 \001(\002\022\023\n\013frontHealth\030\003 \001(\r\022\r\n\005front\030" +
      "\004 \001(\002\022\023\n\013rightHealth\030\005 \001(\r\022\r\n\005right\030\006 \001(" +
      "\002\022\022\n\nbackHealth\030\007 \001(\r\022\014\n\004back\030\010 \001(\002\022\022\n\nl" +
      "eftHealth\030\t \001(\r\022\014\n\004left\030\n \001(\002\022\020\n\010upHealt" +
      "h\030\013 \001(\r\022\n\n\002up\030\014 \001(\002\022!\n\031avoidanceEnableSt" +
      "atusDown\030\r \001(\r\022\037\n\027avoidanceEnableStatusU" +
      "p\030\016 \001(\r\022\'\n\037avoidanceEnableStatusHorizont" +
      "al\030\017 \001(\r\"J\n\014HmsAlarmData\022\017\n\007alarmId\030\001 \001(" +
      "\r\022\023\n\013reportLevel\030\002 \001(\r\022\024\n\014alarmMssInfo\030\003" +
      " \001(\t\",\n\014UavStateList\022\034\n\tuavStates\030\001 \003(\0132" +
      "\t.UavState\"\242\003\n\014PlanLineData\022\026\n\016finishedA" +
      "ction\030\001 \001(\r\022\020\n\010maxSpeed\030\002 \001(\002\022\021\n\tautoSpe" +
      "ed\030\003 \001(\002\022\032\n\006points\030\004 \003(\0132\n.PointData\022\022\n\n" +
      "loseAction\030\005 \001(\r\022\022\n\nhomeHeight\030\006 \001(\r\022\030\n\020" +
      "isSaveEnergyMode\030\007 \001(\r\022\037\n\ttakePoint\030\010 \001(" +
      "\0132\014.HangarPoint\022\037\n\tlandPoint\030\t \001(\0132\014.Han" +
      "garPoint\022\035\n\tinterests\030\n \003(\0132\n.PointData\022" +
      "!\n\013normalModel\030\013 \001(\0132\014.NormalModel\022%\n\rsu" +
      "rroundModel\030\014 \001(\0132\016.SurroundModel\022 \n\014tak" +
      "eOffPoint\030\r \001(\0132\n.PointData\022\026\n\016securityH" +
      "eight\030\016 \001(\r\022\022\n\ntemplateId\030\017 \001(\r\"\375\001\n\tPoin" +
      "tData\022\013\n\003lng\030\001 \001(\001\022\013\n\003lat\030\002 \001(\001\022\016\n\006heigh" +
      "t\030\003 \001(\002\022\r\n\005speed\030\004 \001(\002\022\035\n\007actions\030\005 \003(\0132" +
      "\014.PointAction\022\026\n\016flightPathMode\030\006 \001(\r\022\027\n" +
      "\017dampingDistance\030\007 \001(\002\022\026\n\016safeGohomeFlag" +
      "\030\010 \001(\r\022\023\n\013headingMode\030\t \001(\r\022\017\n\007heading\030\n" +
      " \001(\002\022\025\n\rinterestIndex\030\013 \001(\005\022\022\n\ngroupInde" +
      "x\030\014 \001(\r\"O\n\013PointAction\022\014\n\004type\030\001 \001(\r\022\r\n\005" +
      "param\030\002 \001(\002\022\020\n\010waitTime\030\003 \001(\005\022\021\n\tspeakIn" +
      "fo\030\004 \001(\t\"\212\001\n\013HangarPoint\022\020\n\010hangarId\030\001 \001" +
      "(\t\022\021\n\thangarLng\030\002 \001(\001\022\021\n\thangarLat\030\003 \001(\001" +
      "\022\024\n\014alternateLng\030\004 \001(\001\022\024\n\014alternateLat\030\005" +
      " \001(\001\022\027\n\017mediaUploadFlag\030\006 \001(\r\"\335\001\n\013Normal" +
      "Model\022\030\n\004area\030\001 \003(\0132\n.PointData\022\021\n\tservi" +
      "ceId\030\002 \001(\r\022\020\n\010cameraId\030\003 \001(\r\022\022\n\nisModeli" +
      "ng\030\004 \001(\r\022\014\n\004mode\030\005 \001(\r\022\020\n\010hOverlap\030\006 \001(\r" +
      "\022\020\n\010vOverlap\030\007 \001(\r\022\016\n\006mirror\030\010 \001(\r\022\021\n\tdi" +
      "rection\030\t \001(\r\022\026\n\016flightPathMode\030\n \001(\r\022\016\n" +
      "\006height\030\013 \001(\r\"\247\001\n\rSurroundModel\022\030\n\004area\030" +
      "\001 \003(\0132\n.PointData\022\021\n\tserviceId\030\002 \001(\r\022\020\n\010" +
      "cameraId\030\003 \001(\r\022\022\n\nisModeling\030\004 \001(\r\022\016\n\006he" +
      "ight\030\005 \001(\r\022\034\n\010boundary\030\006 \003(\0132\n.PointData" +
      "\022\025\n\rexposureCount\030\007 \001(\r\"z\n\013UavInitInfo\022\020" +
      "\n\010uavModel\030\001 \001(\t\022\r\n\005uavSn\030\002 \001(\t\022\022\n\nuavVe" +
      "rsion\030\003 \001(\t\022\017\n\007ptModel\030\004 \001(\t\022\021\n\tptVersio" +
      "n\030\005 \001(\t\022\022\n\nptPosition\030\006 \001(\r\"\201\001\n\014PayloadS" +
      "tate\022\037\n\nstickState\030\001 \001(\0132\013.StickState\022\'\n" +
      "\016parachuteState\030\002 \001(\0132\017.ParachuteState\022\'" +
      "\n\016sprayFireState\030\003 \001(\0132\017.SprayFireState\"" +
      "\206\001\n\nStickState\022\n\n\002id\030\001 \001(\r\022\020\n\010position\030\002" +
      " \001(\r\022\022\n\nopenAiFlag\030\003 \001(\r\022\031\n\021openAiPhotoR" +
      "eport\030\004 \001(\r\022\017\n\007modelSn\030\005 \001(\t\022\014\n\004prob\030\006 \001" +
      "(\002\022\014\n\004tags\030\007 \003(\t\"Y\n\016ParachuteState\022\n\n\002id" +
      "\030\001 \001(\r\022\020\n\010position\030\002 \001(\r\022\025\n\rconnectStatu" +
      "s\030\003 \001(\r\022\022\n\nisOpenFlag\030\004 \001(\r\"\355\001\n\016SprayFir" +
      "eState\022\n\n\002id\030\001 \001(\r\022\020\n\010position\030\002 \001(\r\022\022\n\n" +
      "sprayState\030\003 \001(\r\022\021\n\tfuelState\030\004 \001(\r\022\025\n\ri" +
      "gnitionState\030\005 \001(\r\022\021\n\tlockState\030\006 \001(\r\022\014\n" +
      "\004gear\030\007 \001(\r\022\022\n\nlaserState\030\010 \001(\r\022\022\n\npress" +
      "State\030\t \001(\r\022\020\n\010fireTime\030\n \001(\r\022\020\n\010extendR" +
      "c\030\013 \001(\r\022\022\n\nclaspState\030\014 \001(\rB\016B\014TyjwProto" +
      "Bufb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_TelemetryData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TelemetryData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TelemetryData_descriptor,
        new String[] { "Lng", "Lat", "Altitude", "Ultrasonic", "Pitch", "Roll", "Yaw", "Airspeed", "Velocity", "Timestamp", "Ptpitch", "Ptroll", "Ptyaw", "Zoomfactor", "BoxSn", "BatteryPower", "SatelliteCount", "TaskId", "RtkLng", "RtkLat", "RtkHFSL", "RtkPositionInfo", "AirFlyTimes", "AirFlyDistance", "UavSn", "UavModel", "HomeRange", "FlightMode", "TargetDistance", "PredictFlyTime", "UltrasonicMax", "UltrasonicMin", "XVelocity", "YVelocity", "ZVelocity", "BoxName", "PredictFlyTimes", "PredictGohomeBattery", });
    internal_static_TelemetryList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TelemetryList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TelemetryList_descriptor,
        new String[] { "TelemetryList", });
    internal_static_SignalInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SignalInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SignalInfo_descriptor,
        new String[] { "Mode", "Mcc", "Mnc", "Cellid", "Pcid", "Tac", "Arfcn", "Band", "NrDlBandwidth", "Rsrp", "Rsrq", "Sinr", "TxPower", "Srxlev", "Cqi", "Earfcn", "FreqBandInd", "UlBandwidth", "DlBandwidth", "IsTdd", "Rssi", "DuplexMode", "Lng", "Lat", "Height", "Timestamp", "Boxstate", "Isp", "TempMax", "PrxRsrp", "DrxRsrp", "Rx2Rsrp", "Rx3Rsrp", "BoxSn", "SimUseSeat", "NetworkMode", });
    internal_static_SignalList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SignalList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SignalList_descriptor,
        new String[] { "SignalInfo", });
    internal_static_UavState_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_UavState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UavState_descriptor,
        new String[] { "FlightControllerState", "BatteryState", "PtzState", "CameraState", "MissionState", "BoxSn", "AvoidanceData", "HmsAlarmData", "Timestamp", });
    internal_static_FlightControllerState_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_FlightControllerState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FlightControllerState_descriptor,
        new String[] { "SatelliteCount", "GpsSignalLevel", "FlightMode", "FlightStatus", "StartPoint", "HomePoint", "HomeHeight", "SafeLine", "DeviceStatus", "UwbNodeCount", "RcMode", "IsEmergencyBrakeing", "OutFlyAreaFlag", "InNoFlyAreaFlag", "TargetPoint", "BatteryGohome", "AutoLowGohome", "RcConnected", });
    internal_static_BatteryState_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_BatteryState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BatteryState_descriptor,
        new String[] { "BatteryNum", "BatteryPower", "BatteryVoltage", "FirstBatteryInfo", "SecondBatteryInfo", });
    internal_static_BatteryStateInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_BatteryStateInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BatteryStateInfo_descriptor,
        new String[] { "IsBatteryEmbed", "BatteryCapacityPercent", "CurrentVoltage", "CurrentElectric", "FullCapacity", "RemainedCapacity", "BatteryTemperature", "CellCount", "BatSOHState", "Sop", "HeatState", "SocState", "SelfCheckError", });
    internal_static_PtzState_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_PtzState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PtzState_descriptor,
        new String[] { "Pitch", "Roll", "Yaw", "GimbalMode", });
    internal_static_CameraState_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CameraState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CameraState_descriptor,
        new String[] { "Mode", "IsRecording", "RecordDuration", "Source", "Camera", "Zoomfactor", "Width", "Height", "FrameRate", "Bitstream", "PointThermometrying", "AreaThermometrying", "LaserRanging", "StorePercent", "TotalPhoto", "RemainedPhoto", });
    internal_static_MissionState_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_MissionState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MissionState_descriptor,
        new String[] { "IsPause", "TargetWaypointIndex", "IsWaypointFinished", "PushVideo", "Lock4G", "BoxModel", "MapPlay", "LoseAction", "IsPointControl", "IsUwbLanding", "IsPushVideoing", "IsDLanding", "PerceptionFlag", "IsPositionControl", "SendImgRtp", "BreakPoint", });
    internal_static_BreakPoint_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_BreakPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BreakPoint_descriptor,
        new String[] { "Status", "Point", "Lng", "Lat", "Height", "TaskId", });
    internal_static_AvoidanceData_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_AvoidanceData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AvoidanceData_descriptor,
        new String[] { "DownHealth", "Down", "FrontHealth", "Front", "RightHealth", "Right", "BackHealth", "Back", "LeftHealth", "Left", "UpHealth", "Up", "AvoidanceEnableStatusDown", "AvoidanceEnableStatusUp", "AvoidanceEnableStatusHorizontal", });
    internal_static_HmsAlarmData_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_HmsAlarmData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HmsAlarmData_descriptor,
        new String[] { "AlarmId", "ReportLevel", "AlarmMssInfo", });
    internal_static_UavStateList_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_UavStateList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UavStateList_descriptor,
        new String[] { "UavStates", });
    internal_static_PlanLineData_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_PlanLineData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlanLineData_descriptor,
        new String[] { "FinishedAction", "MaxSpeed", "AutoSpeed", "Points", "LoseAction", "HomeHeight", "IsSaveEnergyMode", "TakePoint", "LandPoint", "Interests", "NormalModel", "SurroundModel", "TakeOffPoint", "SecurityHeight", "TemplateId", });
    internal_static_PointData_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_PointData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PointData_descriptor,
        new String[] { "Lng", "Lat", "Height", "Speed", "Actions", "FlightPathMode", "DampingDistance", "SafeGohomeFlag", "HeadingMode", "Heading", "InterestIndex", "GroupIndex", });
    internal_static_PointAction_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_PointAction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PointAction_descriptor,
        new String[] { "Type", "Param", "WaitTime", "SpeakInfo", });
    internal_static_HangarPoint_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_HangarPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HangarPoint_descriptor,
        new String[] { "HangarId", "HangarLng", "HangarLat", "AlternateLng", "AlternateLat", "MediaUploadFlag", });
    internal_static_NormalModel_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_NormalModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NormalModel_descriptor,
        new String[] { "Area", "ServiceId", "CameraId", "IsModeling", "Mode", "HOverlap", "VOverlap", "Mirror", "Direction", "FlightPathMode", "Height", });
    internal_static_SurroundModel_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_SurroundModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SurroundModel_descriptor,
        new String[] { "Area", "ServiceId", "CameraId", "IsModeling", "Height", "Boundary", "ExposureCount", });
    internal_static_UavInitInfo_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_UavInitInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UavInitInfo_descriptor,
        new String[] { "UavModel", "UavSn", "UavVersion", "PtModel", "PtVersion", "PtPosition", });
    internal_static_PayloadState_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_PayloadState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PayloadState_descriptor,
        new String[] { "StickState", "ParachuteState", "SprayFireState", });
    internal_static_StickState_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_StickState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_StickState_descriptor,
        new String[] { "Id", "Position", "OpenAiFlag", "OpenAiPhotoReport", "ModelSn", "Prob", "Tags", });
    internal_static_ParachuteState_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_ParachuteState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ParachuteState_descriptor,
        new String[] { "Id", "Position", "ConnectStatus", "IsOpenFlag", });
    internal_static_SprayFireState_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_SprayFireState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SprayFireState_descriptor,
        new String[] { "Id", "Position", "SprayState", "FuelState", "IgnitionState", "LockState", "Gear", "LaserState", "PressState", "FireTime", "ExtendRc", "ClaspState", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
